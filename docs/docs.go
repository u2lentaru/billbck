// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/actdetails": {
            "get": {
                "description": "get act details list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actdetails"
                ],
                "summary": "List act details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "actid search pattern",
                        "name": "actid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {punumber|installdate}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ActDetail_count"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/actdetails/{id}": {
            "get": {
                "description": "get act detail",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actdetails"
                ],
                "summary": "Get act detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Act detail by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ActDetail_count"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/actdetails_add": {
            "post": {
                "description": "add act detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actdetails"
                ],
                "summary": "Add act detail",
                "parameters": [
                    {
                        "description": "New act detail. Significant params: Act.Id, PuId, SealNumber, AdPuValue, ActDetailDate, PuNumber, InstallDate, CheckInterval, InitialValue, DevStopped, Startdate, Enddate, Pid, Seal.Id, SealDate, Notes, PuType.Id, Conclusion.Id, ConclusionNumber, ShutdownType.Id, CustomerPhone, CustomerPos, Reason.Id, Violation.Id, Customer",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddActDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Json_id"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/actdetails_del": {
            "post": {
                "description": "delete act details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actdetails"
                ],
                "summary": "Delete act details",
                "parameters": [
                    {
                        "description": "Delete act details",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/actdetails_upd": {
            "post": {
                "description": "update act detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actdetails"
                ],
                "summary": "Update act detail",
                "parameters": [
                    {
                        "description": "Update act detail. Significant params: Id, Act.Id, PuId, SealNumber, AdPuValue, ActDetailDate, PuNumber, InstallDate, CheckInterval, InitialValue, DevStopped, Startdate, Enddate, Pid, Seal.Id, SealDate, Notes, PuType.Id, Conclusion.Id, ConclusionNumber, ShutdownType.Id, CustomerPhone, CustomerPos, Reason.Id, Violation.Id, Customer",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Json_id"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/acts": {
            "get": {
                "description": "get act list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "acts"
                ],
                "summary": "List acts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "actnumber search pattern",
                        "name": "actnumber",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "objectname search pattern",
                        "name": "objectname",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "objectid search pattern",
                        "name": "objectid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {actnumber|objectname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Act_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/acts/{id}": {
            "get": {
                "description": "get act",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "acts"
                ],
                "summary": "Get act",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Act by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Act_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/acts_activate": {
            "get": {
                "description": "act activation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "acts"
                ],
                "summary": "Act activation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "actid",
                        "name": "actid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "activation date",
                        "name": "activationdate",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/acts_add": {
            "post": {
                "description": "add act",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "acts"
                ],
                "summary": "Add act",
                "parameters": [
                    {
                        "description": "New act. Significant params: ActType.Id, ActNumber, ActDate, Object.Id, Staff.Id, Notes",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddAct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/acts_del": {
            "post": {
                "description": "delete acts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "acts"
                ],
                "summary": "Delete acts",
                "parameters": [
                    {
                        "description": "Delete acts",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/acts_upd": {
            "post": {
                "description": "update act",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "acts"
                ],
                "summary": "Update act",
                "parameters": [
                    {
                        "description": "Update act. Significant params: Id, ActType.Id, ActNumber, ActDate, Object.Id, Staff.Id, Notes",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Act"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/acttypes": {
            "get": {
                "description": "get acttype list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "acttypes"
                ],
                "summary": "List acttypes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "acttypename search pattern",
                        "name": "acttypename",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|acttypename}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ActType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/acttypes/{id}": {
            "get": {
                "description": "get acttype",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "acttypes"
                ],
                "summary": "Get acttype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ActType by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ActType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/acttypes_add": {
            "post": {
                "description": "add acttype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "acttypes"
                ],
                "summary": "Add acttype",
                "parameters": [
                    {
                        "description": "New acttype",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddActType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/acttypes_del": {
            "post": {
                "description": "delete acttypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "acttypes"
                ],
                "summary": "Delete acttypes",
                "parameters": [
                    {
                        "description": "Delete acttypes",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/acttypes_upd": {
            "post": {
                "description": "update acttype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "acttypes"
                ],
                "summary": "Update acttype",
                "parameters": [
                    {
                        "description": "Update acttype",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/areas": {
            "get": {
                "description": "get areas",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "areas"
                ],
                "summary": "List areas",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "areanumber search pattern",
                        "name": "areanumber",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "areaname search pattern",
                        "name": "areaname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {areanumber|areaname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Area_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/areas/{id}": {
            "get": {
                "description": "get area",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "areas"
                ],
                "summary": "Get area",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Area by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Area_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/areas_add": {
            "post": {
                "description": "add area",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "areas"
                ],
                "summary": "Add area",
                "parameters": [
                    {
                        "description": "New area",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddArea"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/areas_del": {
            "post": {
                "description": "delete areas",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "areas"
                ],
                "summary": "Delete areas",
                "parameters": [
                    {
                        "description": "Delete areas",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/areas_upd": {
            "post": {
                "description": "update area",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "areas"
                ],
                "summary": "Update area",
                "parameters": [
                    {
                        "description": "Update area",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Area"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/askuetypes": {
            "get": {
                "description": "get askuetypes list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "askuetypes"
                ],
                "summary": "List askuetypes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "askuetypename search pattern",
                        "name": "askuetypename",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|askuetypename}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CableResistance_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/askuetypes/{id}": {
            "get": {
                "description": "get askuetype",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "askuetypes"
                ],
                "summary": "Get askuetype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "AskueType by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AskueType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/askuetypes_add": {
            "post": {
                "description": "add askuetype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "askuetypes"
                ],
                "summary": "Add askuetype",
                "parameters": [
                    {
                        "description": "New askuetype. Significant params: AskueTypeName, StartLine, PuColumn, ValueColumn, DateColumn, DateColumnArray(n)",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddAskueType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/askuetypes_del": {
            "post": {
                "description": "delete askuetypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "askuetypes"
                ],
                "summary": "Delete askuetypes",
                "parameters": [
                    {
                        "description": "Delete askuetypes",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/askuetypes_upd": {
            "post": {
                "description": "update askuetype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "askuetypes"
                ],
                "summary": "Update askuetype",
                "parameters": [
                    {
                        "description": "Update askuetype. Significant params: Id, AskueTypeName, StartLine, PuColumn, ValueColumn, DateColumn, DateColumnArray(n)",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AskueType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/balance": {
            "get": {
                "description": "get balance nodes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Get balance nodes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Balance nodes by pid",
                        "name": "pid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Balance node type id",
                        "name": "tid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Balance"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/balance/{id}/{tid}": {
            "get": {
                "description": "get balance node",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Get balance node",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Balance node by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Balance node type id",
                        "name": "tid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Balance"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/balance_branch": {
            "get": {
                "description": "get Get branch by node id and type",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Get branch by node id and type",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Node id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Node type id",
                        "name": "tid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.BalanceTab_sum"
                            }
                        }
                    }
                }
            }
        },
        "/balance_sum": {
            "get": {
                "description": "get balance by node id, type and period",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Get balance by node id, type and period",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Balance node id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Balance node type id",
                        "name": "tid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Balance startdate. Default first day of previous month",
                        "name": "sd",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Balance enddate. Default last day of previous month",
                        "name": "ed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_sum"
                            }
                        }
                    }
                }
            }
        },
        "/balance_sum0": {
            "get": {
                "description": "get endpoints balance by node id, type and period",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Get endpoints balance by node id, type and period",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Main node id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Main node type id",
                        "name": "tid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Balance startdate. Default first day of previous month",
                        "name": "sd",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Balance enddate. Default last day of previous month",
                        "name": "ed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_sum"
                            }
                        }
                    }
                }
            }
        },
        "/balance_sum1": {
            "get": {
                "description": "get balance 1 level down by node id, type and period",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Get balance 1 level down by node id, type and period",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Main node id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Main node type id",
                        "name": "tid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Balance startdate. Default first day of previous month",
                        "name": "sd",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Balance enddate. Default last day of previous month",
                        "name": "ed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_sum"
                            }
                        }
                    }
                }
            }
        },
        "/balance_tab0": {
            "get": {
                "description": "get endpoints balance table by node id, type and period",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Get endpoints balance table by node id, type and period",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Main node id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Main node type id",
                        "name": "tid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Balance startdate. Default first day of previous month",
                        "name": "sd",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Balance enddate. Default last day of previous month",
                        "name": "ed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.BalanceTab_sum"
                            }
                        }
                    }
                }
            }
        },
        "/balance_tab1": {
            "get": {
                "description": "get balance table 1 level down by node id, type and period",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Get balance table 1 level down by node id, type and period",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Main node id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Main node type id",
                        "name": "tid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Balance startdate. Default first day of previous month",
                        "name": "sd",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Balance enddate. Default last day of previous month",
                        "name": "ed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.BalanceTab_sum"
                            }
                        }
                    }
                }
            }
        },
        "/banks": {
            "get": {
                "description": "Get banks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "banks"
                ],
                "summary": "List banks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "bankname search pattern",
                        "name": "bankname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "bankdescr search pattern",
                        "name": "bankdescr",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {bankname|bankdescr}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Bank_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/banks/{id}": {
            "get": {
                "description": "Get bank",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "banks"
                ],
                "summary": "Get bank",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Bank by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Bank_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/banks_add": {
            "post": {
                "description": "Add bank",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "banks"
                ],
                "summary": "Add bank",
                "parameters": [
                    {
                        "description": "New bank",
                        "name": "ab",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddBank"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/banks_del": {
            "post": {
                "description": "Delete banks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "banks"
                ],
                "summary": "Delete banks",
                "parameters": [
                    {
                        "description": "Delete banks",
                        "name": "db",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/banks_upd": {
            "post": {
                "description": "Update bank",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "banks"
                ],
                "summary": "Update bank",
                "parameters": [
                    {
                        "description": "Update bank",
                        "name": "ub",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Bank"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/building_types": {
            "get": {
                "description": "get building types",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "building types"
                ],
                "summary": "List building types",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "buildingtypename search pattern",
                        "name": "buildingtypename",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|buildingtypename}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.BuildingType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/building_types/{id}": {
            "get": {
                "description": "get building type",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "building types"
                ],
                "summary": "Get building type",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Building type by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.BuildingType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/building_types_add": {
            "post": {
                "description": "add building type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "building types"
                ],
                "summary": "Add building type",
                "parameters": [
                    {
                        "description": "New building type",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddBuildingType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/building_types_del": {
            "post": {
                "description": "delete building types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "building types"
                ],
                "summary": "Delete building types",
                "parameters": [
                    {
                        "description": "Delete building types",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/building_types_upd": {
            "post": {
                "description": "update building type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "building types"
                ],
                "summary": "Update building type",
                "parameters": [
                    {
                        "description": "Update building type",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BuildingType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/cableresistances": {
            "get": {
                "description": "get cableresistance list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cableresistances"
                ],
                "summary": "List cableresistances",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cableresistancename search pattern",
                        "name": "cableresistancename",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|cableresistancename}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CableResistance_count"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/cableresistances/{id}": {
            "get": {
                "description": "get cableresistance",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cableresistances"
                ],
                "summary": "Get cableresistance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CableResistance by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CableResistance_count"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/cableresistances_add": {
            "post": {
                "description": "add cableresistance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cableresistances"
                ],
                "summary": "Add cableresistance",
                "parameters": [
                    {
                        "description": "New cableresistance",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddCableResistance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Json_id"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/cableresistances_del": {
            "post": {
                "description": "delete cableresistances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cableresistances"
                ],
                "summary": "Delete cableresistances",
                "parameters": [
                    {
                        "description": "Delete cableresistances",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/cableresistances_upd": {
            "post": {
                "description": "update cableresistance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cableresistances"
                ],
                "summary": "Update cableresistance",
                "parameters": [
                    {
                        "description": "Update cableresistance",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CableResistance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Json_id"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/calculationtypes": {
            "get": {
                "description": "get calculationtype list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "calculationtypes"
                ],
                "summary": "List calculationtypes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "calculationtypename search pattern",
                        "name": "calculationtypename",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|calculationtypename}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CalculationType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/calculationtypes/{id}": {
            "get": {
                "description": "get calculationtype",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "calculationtypes"
                ],
                "summary": "Get calculationtype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CalculationType by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CalculationType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/calculationtypes_add": {
            "post": {
                "description": "add calculationtype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "calculationtypes"
                ],
                "summary": "Add calculationtype",
                "parameters": [
                    {
                        "description": "New calculationtype",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddCalculationType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/calculationtypes_del": {
            "post": {
                "description": "delete calculationtypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "calculationtypes"
                ],
                "summary": "Delete calculationtypes",
                "parameters": [
                    {
                        "description": "Delete calculationtypes",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/calculationtypes_upd": {
            "post": {
                "description": "update calculationtype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "calculationtypes"
                ],
                "summary": "Update calculationtype",
                "parameters": [
                    {
                        "description": "Update calculationtype",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CalculationType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/cashdesks": {
            "get": {
                "description": "get cashdesk list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cashdesks"
                ],
                "summary": "List cashdesks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cashdeskname search pattern",
                        "name": "cashdeskname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|cashdeskname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Cashdesk_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/cashdesks/{id}": {
            "get": {
                "description": "get cashdesk",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cashdesks"
                ],
                "summary": "Get cashdesk",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cashdesk by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Cashdesk_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/cashdesks_add": {
            "post": {
                "description": "add cashdesk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cashdesks"
                ],
                "summary": "Add cashdesk",
                "parameters": [
                    {
                        "description": "New cashdesk",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddCashdesk"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/cashdesks_del": {
            "post": {
                "description": "delete cashdesks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cashdesks"
                ],
                "summary": "Delete cashdesks",
                "parameters": [
                    {
                        "description": "Delete cashdesks",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/cashdesks_upd": {
            "post": {
                "description": "update cashdesk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cashdesks"
                ],
                "summary": "Update cashdesk",
                "parameters": [
                    {
                        "description": "Update cashdesk",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Cashdesk"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/charges": {
            "get": {
                "description": "get charge list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "charges"
                ],
                "summary": "List charges",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "contractnumber search pattern",
                        "name": "contractnumber",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "object id",
                        "name": "oid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|chargedate}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Charge_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/charges/{id}": {
            "get": {
                "description": "get charge",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "charges"
                ],
                "summary": "Get charge",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Charge by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Charge_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/charges_add": {
            "post": {
                "description": "add charge",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "charges"
                ],
                "summary": "Add charge",
                "parameters": [
                    {
                        "description": "New charge. Significant params: ChargeDate, Contract.Id, Object.Id, ObjTypeId, Pu.Id, ChargeType.Id, Qty, TransLoss, Lineloss, Startdate, Enddate",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddCharge"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/charges_del": {
            "post": {
                "description": "delete charges",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "charges"
                ],
                "summary": "Delete charges",
                "parameters": [
                    {
                        "description": "Delete charges",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/charges_run/{id}": {
            "get": {
                "description": "charge run",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "charges"
                ],
                "summary": "Charge run by period id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Charge run by period id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/charges_upd": {
            "post": {
                "description": "update charge",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "charges"
                ],
                "summary": "Update charge",
                "parameters": [
                    {
                        "description": "Update charge. Significant params: Id, ChargeDate, Contract.Id, Object.Id, ObjTypeId, Pu.Id, ChargeType.Id, Qty, TransLoss, Lineloss, Startdate, Enddate",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Charge"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/chargetypes": {
            "get": {
                "description": "get chargetype list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chargetypes"
                ],
                "summary": "List chargetypes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "chargetypename search pattern",
                        "name": "chargetypename",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|chargetypename}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ChargeType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/chargetypes/{id}": {
            "get": {
                "description": "get chargetype",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chargetypes"
                ],
                "summary": "Get chargetype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ChargeType by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ChargeType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/chargetypes_add": {
            "post": {
                "description": "add chargetype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chargetypes"
                ],
                "summary": "Add chargetype",
                "parameters": [
                    {
                        "description": "New chargetype",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddChargeType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/chargetypes_del": {
            "post": {
                "description": "delete chargetypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chargetypes"
                ],
                "summary": "Delete chargetypes",
                "parameters": [
                    {
                        "description": "Delete chargetypes",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/chargetypes_upd": {
            "post": {
                "description": "update chargetype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chargetypes"
                ],
                "summary": "Update chargetype",
                "parameters": [
                    {
                        "description": "Update chargetype",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ChargeType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/cities": {
            "get": {
                "description": "get city list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cities"
                ],
                "summary": "List cities",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cityname search pattern",
                        "name": "cityname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|cityname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.City_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/cities/{id}": {
            "get": {
                "description": "get city",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cities"
                ],
                "summary": "Get city",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "City by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.City_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/cities_add": {
            "post": {
                "description": "add city",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cities"
                ],
                "summary": "Add city",
                "parameters": [
                    {
                        "description": "New city",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddCity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/cities_del": {
            "post": {
                "description": "delete cities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cities"
                ],
                "summary": "Delete cities",
                "parameters": [
                    {
                        "description": "Delete cities",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/cities_upd": {
            "post": {
                "description": "update city",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cities"
                ],
                "summary": "Update city",
                "parameters": [
                    {
                        "description": "Update city",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.City"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/claimtypes": {
            "get": {
                "description": "get claimtype list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "claimtypes"
                ],
                "summary": "List claimtypes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "claimtypename search pattern",
                        "name": "claimtypename",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|claimtypename}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ClaimType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/claimtypes/{id}": {
            "get": {
                "description": "get claimtype",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "claimtypes"
                ],
                "summary": "Get claimtype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ClaimType by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ClaimType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/claimtypes_add": {
            "post": {
                "description": "add claimtype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "claimtypes"
                ],
                "summary": "Add claimtype",
                "parameters": [
                    {
                        "description": "New claimtype",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddClaimType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/claimtypes_del": {
            "post": {
                "description": "delete claimtypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "claimtypes"
                ],
                "summary": "Delete claimtypes",
                "parameters": [
                    {
                        "description": "Delete claimtypes",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/claimtypes_upd": {
            "post": {
                "description": "update claimtype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "claimtypes"
                ],
                "summary": "Update claimtype",
                "parameters": [
                    {
                        "description": "Update claimtype",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ClaimType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/conclusions": {
            "get": {
                "description": "get conclusions list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "conclusions"
                ],
                "summary": "List conclusions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "conclusionname search pattern",
                        "name": "conclusionname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|conclusionname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Conclusion_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/conclusions/{id}": {
            "get": {
                "description": "get conclusion",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "conclusions"
                ],
                "summary": "Get conclusion",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Conclusion by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Conclusion_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/conclusions_add": {
            "post": {
                "description": "add conclusion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "conclusions"
                ],
                "summary": "Add conclusion",
                "parameters": [
                    {
                        "description": "New conclusion",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddConclusion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/conclusions_del": {
            "post": {
                "description": "delete conclusions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "conclusions"
                ],
                "summary": "Delete conclusions",
                "parameters": [
                    {
                        "description": "Delete conclusions",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/conclusions_upd": {
            "post": {
                "description": "update conclusion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "conclusions"
                ],
                "summary": "Update conclusion",
                "parameters": [
                    {
                        "description": "Update conclusion",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Conclusion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/connectors": {
            "get": {
                "description": "get connector list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "connectors"
                ],
                "summary": "List connectors",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "connectorname search pattern",
                        "name": "connectorname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|connectorname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Connector_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/connectors/{id}": {
            "get": {
                "description": "get connector",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "connectors"
                ],
                "summary": "Get connector",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Connector by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Connector_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/connectors_add": {
            "post": {
                "description": "add connector",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "connectors"
                ],
                "summary": "Add connector",
                "parameters": [
                    {
                        "description": "New connector",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddConnector"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/connectors_del": {
            "post": {
                "description": "delete connectors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "connectors"
                ],
                "summary": "Delete connectors",
                "parameters": [
                    {
                        "description": "Delete connectors",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/connectors_upd": {
            "post": {
                "description": "update connector",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "connectors"
                ],
                "summary": "Update connector",
                "parameters": [
                    {
                        "description": "Update connector",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Connector"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/contractmots": {
            "get": {
                "description": "get contracts motives of termination list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract_mots"
                ],
                "summary": "List contracts motives of termination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "contractmotnameru search pattern",
                        "name": "contractmotnameru",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "contractmotnamekz search pattern",
                        "name": "contractmotnamekz",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|contractmotnameru|contractmotnamekz}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ContractMot_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/contractmots/{id}": {
            "get": {
                "description": "get contracts motive of termination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract_mots"
                ],
                "summary": "Get contracts motive of termination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Contracts motive of termination by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ContractMot_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/contractmots_add": {
            "post": {
                "description": "add contracts motive of termination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract_mots"
                ],
                "summary": "Add contracts motive of termination",
                "parameters": [
                    {
                        "description": "New contracts motive of termination",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddContractMot"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/contractmots_del": {
            "post": {
                "description": "delete contracts motives of termination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract_mots"
                ],
                "summary": "Delete contracts motives of termination",
                "parameters": [
                    {
                        "description": "Delete contracts motives of termination",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/contractmots_upd": {
            "post": {
                "description": "update contracts motive of termination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract_mots"
                ],
                "summary": "Update contracts motive of termination",
                "parameters": [
                    {
                        "description": "Update contracts motive of termination",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContractMot"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/contracts": {
            "get": {
                "description": "get contract list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "List contracts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "contractnumber search pattern",
                        "name": "contractnumber",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "personalaccount search pattern",
                        "name": "personalaccount",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "active contracts",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "customer name search pattern",
                        "name": "custname",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "customer id",
                        "name": "custid",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "customer type",
                        "name": "custtype",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "customer address search pattern",
                        "name": "custaddr",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "сonsignee name search pattern",
                        "name": "consname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "eso name search pattern",
                        "name": "esoname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "eso contract number search pattern",
                        "name": "esocn",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "area name search pattern",
                        "name": "areaname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "customer group name search pattern",
                        "name": "cgname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "motive of termination ru search pattern",
                        "name": "motru",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "motive of termination kz search pattern",
                        "name": "motkz",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {contractnumber|personalaccount|startdate|custname|esoname|enddate}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Contract_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/contracts/{id}": {
            "get": {
                "description": "get contract",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Get contract",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Contract by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Contract_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/contracts_add": {
            "post": {
                "description": "add contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Add contract",
                "parameters": [
                    {
                        "description": "New contract. Significant params: PersonalAccount, BarCode, ContractNumber, Startdate, Customer.SubId, Consignee.SubId, EsoContractNumber, Eso.Id, Area.Id, CustomerGroup.Id, Notes(n)",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddContract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/contracts_del": {
            "post": {
                "description": "close contracts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Close contracts",
                "parameters": [
                    {
                        "description": "Close contract. Significant params: Id, Enddate, ContractMot.Id, MotNotes(n)",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.IdClose"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/contracts_getobject/{id}": {
            "get": {
                "description": "get contracts objects",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Get contracts objects",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Contract by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "active objects",
                        "name": "active",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ObjContract"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/contracts_hist/{id}": {
            "get": {
                "description": "get contract history",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Contract history",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Contract history by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/contracts_upd": {
            "post": {
                "description": "update contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Update contract",
                "parameters": [
                    {
                        "description": "Update contract. Significant params: Id, ContractNumber, Startdate, Enddate(n), Customer.SubId, Consignee.SubId, EsoContractNumber, Eso.Id, Area.Id, CustomerGroup.Id, ContractMot.Id(n), Notes(n), MotNotes(n)",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Contract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/contracttypes": {
            "get": {
                "description": "get contracttype list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracttypes"
                ],
                "summary": "List contracttypes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "contracttypename search pattern",
                        "name": "contracttypename",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|contracttypename}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ContractType_count"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/contracttypes/{id}": {
            "get": {
                "description": "get contracttype",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracttypes"
                ],
                "summary": "Get contracttype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ContractType by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ContractType_count"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/contracttypes_add": {
            "post": {
                "description": "add contracttype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracttypes"
                ],
                "summary": "Add contracttype",
                "parameters": [
                    {
                        "description": "New contracttype",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddContractType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Json_id"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/contracttypes_del": {
            "post": {
                "description": "delete contracttypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracttypes"
                ],
                "summary": "Delete contracttypes",
                "parameters": [
                    {
                        "description": "Delete contracttypes",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/contracttypes_upd": {
            "post": {
                "description": "update contracttype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracttypes"
                ],
                "summary": "Update contracttype",
                "parameters": [
                    {
                        "description": "Update contracttype",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContractType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Json_id"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/customergroups": {
            "get": {
                "description": "get customergroup list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customergroups"
                ],
                "summary": "List customergroups",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "customergroupname search pattern",
                        "name": "customergroupname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|customergroupname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CustomerGroup_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/customergroups/{id}": {
            "get": {
                "description": "get customergroup",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customergroups"
                ],
                "summary": "Get customergroup",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CustomerGroup by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CustomerGroup_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/customergroups_add": {
            "post": {
                "description": "add customergroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customergroups"
                ],
                "summary": "Add customergroup",
                "parameters": [
                    {
                        "description": "New customergroup",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddCustomerGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/customergroups_del": {
            "post": {
                "description": "delete customergroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customergroups"
                ],
                "summary": "Delete customergroups",
                "parameters": [
                    {
                        "description": "Delete customergroups",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/customergroups_upd": {
            "post": {
                "description": "update customergroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customergroups"
                ],
                "summary": "Update customergroup",
                "parameters": [
                    {
                        "description": "Update customergroup",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CustomerGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/distributionzones": {
            "get": {
                "description": "get distributionzone list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "distributionzones"
                ],
                "summary": "List distributionzone",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "distributionzonename search pattern",
                        "name": "distributionzonename",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|distributionzonename}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DistributionZone_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/distributionzones/{id}": {
            "get": {
                "description": "get distributionzone",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "distributionzones"
                ],
                "summary": "Get distributionzone",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "DistributionZone by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DistributionZone_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/distributionzones_add": {
            "post": {
                "description": "add distributionzone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "distributionzones"
                ],
                "summary": "Add distributionzone",
                "parameters": [
                    {
                        "description": "New distributionzone",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddDistributionZone"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/distributionzones_del": {
            "post": {
                "description": "delete distributionzones",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "distributionzones"
                ],
                "summary": "Delete distributionzones",
                "parameters": [
                    {
                        "description": "Delete distributionzones",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/distributionzones_upd": {
            "post": {
                "description": "update distributionzone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "distributionzones"
                ],
                "summary": "Update distributionzone",
                "parameters": [
                    {
                        "description": "Update distributionzone",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DistributionZone"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/equipment": {
            "get": {
                "description": "get equipment list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment"
                ],
                "summary": "List equipment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "objectid",
                        "name": "objectid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "name search pattern",
                        "name": "objectname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|objectname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Equipment_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/equipment/{id}": {
            "get": {
                "description": "get equipment",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment"
                ],
                "summary": "Get equipment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Equipment by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Equipment_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/equipment_add": {
            "post": {
                "description": "add equipment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment"
                ],
                "summary": "Add equipment",
                "parameters": [
                    {
                        "description": "New equipment. Significant params: EquipmentType.Id, Object.Id, Qty, WorkingHours",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddEquipment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/equipment_addlist": {
            "post": {
                "description": "add equipment list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment"
                ],
                "summary": "Add equipment list",
                "parameters": [
                    {
                        "description": "Add equipment list. Old equipment delete by first value Object.Id. Significant params: EquipmentType.Id, Object.Id, Qty, WorkingHours",
                        "name": "al",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Equipment_count"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/equipment_del": {
            "post": {
                "description": "delete equipment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment"
                ],
                "summary": "Delete equipment",
                "parameters": [
                    {
                        "description": "Delete equipment",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/equipment_delobj": {
            "post": {
                "description": "delete equipment by object id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment"
                ],
                "summary": "Delete equipment by object id",
                "parameters": [
                    {
                        "description": "Delete equipment by object id",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/equipment_upd": {
            "post": {
                "description": "update equipment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment"
                ],
                "summary": "Update equipment",
                "parameters": [
                    {
                        "description": "Update equipment. Significant params: Id, EquipmentType.Id, Object.Id, Qty, WorkingHours",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Equipment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/equipmenttypes": {
            "get": {
                "description": "get equipmenttype list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment types"
                ],
                "summary": "List equipmenttypes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "equipmenttypename search pattern",
                        "name": "equipmenttypename",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|equipmenttypename}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.EquipmentType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/equipmenttypes/{id}": {
            "get": {
                "description": "get equipmenttype",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment types"
                ],
                "summary": "Get equipmenttype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "EquipmentType by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.EquipmentType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/equipmenttypes_add": {
            "post": {
                "description": "add equipmenttype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment types"
                ],
                "summary": "Add equipmenttype",
                "parameters": [
                    {
                        "description": "New equipmenttype. Significant params: EquipmentTypeName, EquipmentTypePower",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddEquipmentType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/equipmenttypes_del": {
            "post": {
                "description": "delete equipmenttypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment types"
                ],
                "summary": "Delete equipmenttypes",
                "parameters": [
                    {
                        "description": "Delete equipmenttypes",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/equipmenttypes_upd": {
            "post": {
                "description": "update equipmenttype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment types"
                ],
                "summary": "Update equipmenttype",
                "parameters": [
                    {
                        "description": "Update equipmenttype. Significant params: Id, EquipmentTypeName, EquipmentTypePower",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EquipmentType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/eso": {
            "get": {
                "description": "get eso list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "eso"
                ],
                "summary": "List eso",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "esoname search pattern",
                        "name": "esoname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|esoname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Eso_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/eso/{id}": {
            "get": {
                "description": "get eso",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "eso"
                ],
                "summary": "Get eso",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Eso by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Eso_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/eso_add": {
            "post": {
                "description": "add eso",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "eso"
                ],
                "summary": "Add eso",
                "parameters": [
                    {
                        "description": "New eso",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddEso"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/eso_del": {
            "post": {
                "description": "delete eso",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "eso"
                ],
                "summary": "Delete eso",
                "parameters": [
                    {
                        "description": "Delete eso",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/eso_upd": {
            "post": {
                "description": "update eso",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "eso"
                ],
                "summary": "Update eso",
                "parameters": [
                    {
                        "description": "Update eso",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Eso"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/form_types": {
            "get": {
                "description": "get form types",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "form types"
                ],
                "summary": "List form types",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "formtypename search pattern",
                        "name": "formtypename",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "formtypedescr search pattern",
                        "name": "formtypedescr",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {formtypename|formtypedescr}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.FormType_count"
                            }
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/form_types/{id}": {
            "get": {
                "description": "get form type",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "form types"
                ],
                "summary": "Form type",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Form type by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.FormType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/form_types_add": {
            "post": {
                "description": "add form type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "form types"
                ],
                "summary": "Add form type",
                "parameters": [
                    {
                        "description": "New FormType",
                        "name": "ft",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FormType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/form_types_del": {
            "post": {
                "description": "delete form types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "form types"
                ],
                "summary": "Delete form types",
                "parameters": [
                    {
                        "description": "Delete formtype",
                        "name": "ft",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/form_types_upd": {
            "post": {
                "description": "update form types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "form types"
                ],
                "summary": "Update form types",
                "parameters": [
                    {
                        "description": "Update formtype",
                        "name": "ft",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FormType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/grp": {
            "get": {
                "description": "get grp list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "grp"
                ],
                "summary": "List grp",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "grpname search pattern",
                        "name": "grpname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|grpname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.GRp_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/grp/{id}": {
            "get": {
                "description": "get grp",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "grp"
                ],
                "summary": "Get grp",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "GRp by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.GRp_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/grp_add": {
            "post": {
                "description": "add grp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "grp"
                ],
                "summary": "Add grp",
                "parameters": [
                    {
                        "description": "New grp",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddGRp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/grp_del": {
            "post": {
                "description": "delete grp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "grp"
                ],
                "summary": "Delete grp",
                "parameters": [
                    {
                        "description": "Delete grp",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/grp_upd": {
            "post": {
                "description": "update grp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "grp"
                ],
                "summary": "Update grp",
                "parameters": [
                    {
                        "description": "Update grp",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GRp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/houses": {
            "get": {
                "description": "get house list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "houses"
                ],
                "summary": "List houses",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "streetname search pattern",
                        "name": "streetname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "housenumber search pattern",
                        "name": "housenumber",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "streetid search pattern",
                        "name": "streetid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {housenumber|streetname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.House_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/houses/{id}": {
            "get": {
                "description": "get house",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "houses"
                ],
                "summary": "Get house",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "House by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.House_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/houses_add": {
            "post": {
                "description": "add house",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "houses"
                ],
                "summary": "Add house",
                "parameters": [
                    {
                        "description": "New house",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddHouse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/houses_del": {
            "post": {
                "description": "delete houses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "houses"
                ],
                "summary": "Delete houses",
                "parameters": [
                    {
                        "description": "Delete houses",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/houses_upd": {
            "post": {
                "description": "update house",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "houses"
                ],
                "summary": "Update house",
                "parameters": [
                    {
                        "description": "Update house",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.House"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/input_types": {
            "get": {
                "description": "get input type list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "input types"
                ],
                "summary": "List input types",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "inputtypename search pattern",
                        "name": "inputtypename",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|inputtypename}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.InputType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/input_types/{id}": {
            "get": {
                "description": "get input type",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "input types"
                ],
                "summary": "Get input type",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Input type by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.InputType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/input_types_add": {
            "post": {
                "description": "add input type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "input types"
                ],
                "summary": "Add input type",
                "parameters": [
                    {
                        "description": "New input type",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddInputType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/input_types_del": {
            "post": {
                "description": "delete input types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "input types"
                ],
                "summary": "Delete input types",
                "parameters": [
                    {
                        "description": "Delete input types",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/input_types_upd": {
            "post": {
                "description": "update input type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "input types"
                ],
                "summary": "Update input type",
                "parameters": [
                    {
                        "description": "Update input type",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InputType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/ksk": {
            "get": {
                "description": "get ksk list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ksk"
                ],
                "summary": "List ksk",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "kskname search pattern",
                        "name": "kskname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "kskaddress search pattern",
                        "name": "kskaddress",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {kskname|kskaddress}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Ksk_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/ksk/{id}": {
            "get": {
                "description": "get ksk",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ksk"
                ],
                "summary": "Get ksk",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Ksk by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Ksk_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/ksk_add": {
            "post": {
                "description": "add ksk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ksk"
                ],
                "summary": "Add ksk",
                "parameters": [
                    {
                        "description": "New ksk",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddKsk"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/ksk_del": {
            "post": {
                "description": "delete ksk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ksk"
                ],
                "summary": "Delete ksk",
                "parameters": [
                    {
                        "description": "Delete ksk",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/ksk_upd": {
            "post": {
                "description": "update ksk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ksk"
                ],
                "summary": "Update ksk",
                "parameters": [
                    {
                        "description": "Update ksk",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Ksk"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objcontracts": {
            "get": {
                "description": "get objcontract list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objcontracts"
                ],
                "summary": "List objcontracts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "object id",
                        "name": "objectid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "type id",
                        "name": "tid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "contract id",
                        "name": "contractid",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "enddate is null",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {object|contract|startdate}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ObjContract_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objcontracts/{id}": {
            "get": {
                "description": "get objcontract",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objcontracts"
                ],
                "summary": "Get objcontract",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ObjContract by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "actual date",
                        "name": "actualdate",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ObjContract_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objcontracts_add": {
            "post": {
                "description": "add objcontract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objcontracts"
                ],
                "summary": "Add objcontract",
                "parameters": [
                    {
                        "description": "New objcontract. Old objcontract of the object will be closed. Significant params: Contract.Id, Object.Id, ObjTypeId, Startdate",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddObjContract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objcontracts_del": {
            "post": {
                "description": "close objcontract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objcontracts"
                ],
                "summary": "Close objcontract",
                "parameters": [
                    {
                        "description": "Close objcontract. Significant params: Id, CloseDate",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.IdClose"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objcontracts_upd": {
            "post": {
                "description": "update objcontract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objcontracts"
                ],
                "summary": "Update objcontract",
                "parameters": [
                    {
                        "description": "Update objcontract. Significant params: Contract.Id, Object.Id, ObjTypeId, Startdate, Enddate",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ObjContract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objects": {
            "get": {
                "description": "get object list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objects"
                ],
                "summary": "List objects",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "objectname search pattern",
                        "name": "objectname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "house id search pattern",
                        "name": "houseid",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "active contract",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|objectname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Object_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objects/{id}": {
            "get": {
                "description": "get object",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objects"
                ],
                "summary": "Get object",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Object by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Object_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objects_add": {
            "post": {
                "description": "add object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objects"
                ],
                "summary": "Add object",
                "parameters": [
                    {
                        "description": "New object. Significant params: ObjectName, House.Id, FlatNumber(n), ObjType.Id, RegQty, Uzo.Id, TariffGroup.Id, CalculationType.Id, ObjStatus.Id, Notes(n), MffId(n)",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddObject"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objects_del": {
            "post": {
                "description": "delete objects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objects"
                ],
                "summary": "Delete objects",
                "parameters": [
                    {
                        "description": "Delete objects",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objects_getcontract/{id}": {
            "get": {
                "description": "get objects contract",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objects"
                ],
                "summary": "Get objects contract",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Object by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "active contracts",
                        "name": "active",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ObjContract"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objects_mff/{hid}": {
            "get": {
                "description": "get main mff object by house id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objects"
                ],
                "summary": "Get main mff object by house id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "House id",
                        "name": "hid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Object_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objects_upd": {
            "post": {
                "description": "update object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objects"
                ],
                "summary": "Update object",
                "parameters": [
                    {
                        "description": "Update object. Significant params: Id, ObjectName, House.Id, FlatNumber(n), ObjType.Id, RegQty, Uzo.Id, TariffGroup.Id, CalculationType.Id, ObjStatus.Id, Notes(n), MffId(n)",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objlines": {
            "get": {
                "description": "get objlines list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objlines"
                ],
                "summary": "List objlines",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "objectname search pattern",
                        "name": "objectname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cableresistancename search pattern",
                        "name": "cableresistancename",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|cableresistancename|objectname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ObjLine_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objlines/{id}": {
            "get": {
                "description": "get objline",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objlines"
                ],
                "summary": "Get objline",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Objline by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ObjLine_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objlines_add": {
            "post": {
                "description": "add objline",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objlines"
                ],
                "summary": "Add objline",
                "parameters": [
                    {
                        "description": "New objtranscurr. Significant params: ObjId, ObjTypeId, CableResistance.Id, LineLength, Startdate",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddObjLine"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objlines_del": {
            "post": {
                "description": "delete objlines",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objlines"
                ],
                "summary": "Delete objlines",
                "parameters": [
                    {
                        "description": "Delete objlines",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objlines_obj": {
            "get": {
                "description": "get objlines by object",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objlines"
                ],
                "summary": "Get objlines by object",
                "parameters": [
                    {
                        "type": "string",
                        "description": "obj\u0026tgu id",
                        "name": "objid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "obj\u0026tgu type id (obj - type = 0, tgu - type \u003e 0)",
                        "name": "tid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ObjLine_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objlines_upd": {
            "post": {
                "description": "update objline",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objlines"
                ],
                "summary": "Update objline",
                "parameters": [
                    {
                        "description": "Update objtranscurr. Significant params: Id, ObjId, ObjTypeId, CableResistance.Id, LineLength, Startdate, Enddate",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ObjLine"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objstatuses": {
            "get": {
                "description": "get objstatus list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objstatuses"
                ],
                "summary": "List objstatuses",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "objstatusname search pattern",
                        "name": "objstatusname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|objstatusname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ObjStatus_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objstatuses/{id}": {
            "get": {
                "description": "get objstatus",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objstatuses"
                ],
                "summary": "Get objstatus",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ObjStatus by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ObjStatus_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objstatuses_add": {
            "post": {
                "description": "add objstatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objstatuses"
                ],
                "summary": "Add objstatus",
                "parameters": [
                    {
                        "description": "New objstatus",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddObjStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objstatuses_del": {
            "post": {
                "description": "delete objstatuses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objstatuses"
                ],
                "summary": "Delete objstatuses",
                "parameters": [
                    {
                        "description": "Delete objstatuses",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objstatuses_upd": {
            "post": {
                "description": "update objstatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objstatuses"
                ],
                "summary": "Update objstatus",
                "parameters": [
                    {
                        "description": "Update objstatus",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ObjStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objtranscurr": {
            "get": {
                "description": "get objtranscurr list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objtranscurr"
                ],
                "summary": "List objtranscurr",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "objectname search pattern",
                        "name": "objectname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "transcurrname search pattern",
                        "name": "transcurrname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|objectname|transcurrname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ObjTransCurr_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objtranscurr/{id}": {
            "get": {
                "description": "get objtranscurr",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objtranscurr"
                ],
                "summary": "Get objtranscurr",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Objtranscurr by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ObjTransCurr_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objtranscurr_add": {
            "post": {
                "description": "add objtranscurr",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objtranscurr"
                ],
                "summary": "Add objtranscurr",
                "parameters": [
                    {
                        "description": "New objtranscurr. Significant params: ObjId, ObjTypeId, TransCurr.Id, Startdate",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddObjTransCurr"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objtranscurr_del": {
            "post": {
                "description": "delete objtranscurrs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objtranscurr"
                ],
                "summary": "Delete objtranscurrs",
                "parameters": [
                    {
                        "description": "Delete objtranscurrs",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objtranscurr_obj": {
            "get": {
                "description": "get objtranscurr by object",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objtranscurr"
                ],
                "summary": "Get objtranscurr by object",
                "parameters": [
                    {
                        "type": "string",
                        "description": "obj\u0026tgu id",
                        "name": "objid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "obj\u0026tgu type id (obj - type = 0, tgu - type \u003e 0)",
                        "name": "tid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ObjTransCurr_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objtranscurr_upd": {
            "post": {
                "description": "update objtranscurr",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objtranscurr"
                ],
                "summary": "Update objtranscurr",
                "parameters": [
                    {
                        "description": "Update objtranscurr. Significant params: Id, ObjId, ObjTypeId, TransCurr.Id, Startdate, Enddate",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ObjTransCurr"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objtranspwr": {
            "get": {
                "description": "get objtranspwr list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objtranspwr"
                ],
                "summary": "List objtranspwr",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "objectname search pattern",
                        "name": "objectname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "transpwrname search pattern",
                        "name": "transpwrname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|objectname|transpwrname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ObjTransPwr_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objtranspwr/{id}": {
            "get": {
                "description": "get objtranspwr",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objtranspwr"
                ],
                "summary": "Get objtranspwr",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Objtranspwr by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ObjTransPwr_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objtranspwr_add": {
            "post": {
                "description": "add objtranspwr",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objtranspwr"
                ],
                "summary": "Add objtranspwr",
                "parameters": [
                    {
                        "description": "New objtranspwr. Significant params: ObjId, ObjTypeId, TransPwr.Id, Startdate",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddObjTransPwr"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objtranspwr_del": {
            "post": {
                "description": "delete objtranspwrs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objtranspwr"
                ],
                "summary": "Delete objtranspwrs",
                "parameters": [
                    {
                        "description": "Delete objtranspwrs",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objtranspwr_obj": {
            "get": {
                "description": "get objtranspwr by object",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objtranspwr"
                ],
                "summary": "Get objtranspwr by object",
                "parameters": [
                    {
                        "type": "string",
                        "description": "obj\u0026tgu id",
                        "name": "objid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "obj\u0026tgu type id (obj - type = 0, tgu - type \u003e 0)",
                        "name": "tid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ObjTransPwr_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objtranspwr_upd": {
            "post": {
                "description": "update objtranspwr",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objtranspwr"
                ],
                "summary": "Update objtranspwr",
                "parameters": [
                    {
                        "description": "Update objtranspwr. Significant params: Id, ObjId, ObjTypeId, TransPwr.Id, Startdate, Enddate",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ObjTransPwr"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objtransvolt": {
            "get": {
                "description": "get objtransvolt list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objtransvolt"
                ],
                "summary": "List objtransvolt",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "objectname search pattern",
                        "name": "objectname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "transvoltname search pattern",
                        "name": "transvoltname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|objectname|transvoltname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ObjTransVolt_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objtransvolt/{id}": {
            "get": {
                "description": "get objtransvolt",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objtransvolt"
                ],
                "summary": "Get objtransvolt",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Objtransvolt by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ObjTransVolt_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objtransvolt_add": {
            "post": {
                "description": "add objtransvolt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objtransvolt"
                ],
                "summary": "Add objtransvolt",
                "parameters": [
                    {
                        "description": "New objtransvolt. Significant params: ObjId, ObjTypeId, TransVolt.Id, Startdate",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddObjTransVolt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objtransvolt_del": {
            "post": {
                "description": "delete objtransvolts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objtransvolt"
                ],
                "summary": "Delete objtransvolts",
                "parameters": [
                    {
                        "description": "Delete objtransvolts",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objtransvolt_obj": {
            "get": {
                "description": "get objtransvolt by object",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objtransvolt"
                ],
                "summary": "Get objtransvolt by object",
                "parameters": [
                    {
                        "type": "string",
                        "description": "obj\u0026tgu id",
                        "name": "objid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "obj\u0026tgu type id (obj - type = 0, tgu - type \u003e 0)",
                        "name": "tid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ObjTransVolt_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objtransvolt_upd": {
            "post": {
                "description": "update objtransvolt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objtransvolt"
                ],
                "summary": "Update objtransvolt",
                "parameters": [
                    {
                        "description": "Update objtransvolt. Significant params: Id, ObjId, ObjTypeId, TransVolt.Id, Startdate, Enddate",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ObjTransVolt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objtypes": {
            "get": {
                "description": "get objtype list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objtypes"
                ],
                "summary": "List objtypes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "objtypename search pattern",
                        "name": "objtypename",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|objtypename}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ObjType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objtypes/{id}": {
            "get": {
                "description": "get objtype",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objtypes"
                ],
                "summary": "Get objtype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ObjType by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ObjType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objtypes_add": {
            "post": {
                "description": "add objtype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objtypes"
                ],
                "summary": "Add objtype",
                "parameters": [
                    {
                        "description": "New objtype",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddObjType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objtypes_del": {
            "post": {
                "description": "delete objtypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objtypes"
                ],
                "summary": "Delete objtypes",
                "parameters": [
                    {
                        "description": "Delete objtypes",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/objtypes_upd": {
            "post": {
                "description": "update objtype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objtypes"
                ],
                "summary": "Update objtype",
                "parameters": [
                    {
                        "description": "Update objtype",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ObjType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/ordertypes": {
            "get": {
                "description": "get ordertype list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ordertypes"
                ],
                "summary": "List ordertypes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ordertypename search pattern",
                        "name": "ordertypename",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|ordertypename}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.OrderType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/ordertypes/{id}": {
            "get": {
                "description": "get ordertype",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ordertypes"
                ],
                "summary": "Get ordertype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "OrderType by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.OrderType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/ordertypes_add": {
            "post": {
                "description": "add ordertype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ordertypes"
                ],
                "summary": "Add ordertype",
                "parameters": [
                    {
                        "description": "New ordertype",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddOrderType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/ordertypes_del": {
            "post": {
                "description": "delete ordertypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ordertypes"
                ],
                "summary": "Delete ordertypes",
                "parameters": [
                    {
                        "description": "Delete ordertypes",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/ordertypes_upd": {
            "post": {
                "description": "update ordertype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ordertypes"
                ],
                "summary": "Update ordertype",
                "parameters": [
                    {
                        "description": "Update ordertype",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrderType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/org_info": {
            "get": {
                "description": "Get org_info list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "org_info"
                ],
                "summary": "List org_info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "oiname search pattern",
                        "name": "oiname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "oifname search pattern",
                        "name": "oifname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {oiname|oifname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.OrgInfo_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/org_info/{id}": {
            "get": {
                "description": "Get org_info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "org_info"
                ],
                "summary": "Get org_info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "OrgInfo by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.OrgInfo_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/org_info_add": {
            "post": {
                "description": "Add org_info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "org_info"
                ],
                "summary": "Add org_info",
                "parameters": [
                    {
                        "description": "New org_info",
                        "name": "ab",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddOrgInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/org_info_del": {
            "post": {
                "description": "Delete org_info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "org_info"
                ],
                "summary": "Delete org_info",
                "parameters": [
                    {
                        "description": "Delete org_info",
                        "name": "db",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/org_info_upd": {
            "post": {
                "description": "Update org_info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "org_info"
                ],
                "summary": "Update org_info",
                "parameters": [
                    {
                        "description": "Update org_info",
                        "name": "ub",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrgInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/payments": {
            "get": {
                "description": "get payments list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payments"
                ],
                "summary": "List payments",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "contractnumber search pattern",
                        "name": "contractnumber",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "object id",
                        "name": "oid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|paymentdate}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Payment_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/payments/{id}": {
            "get": {
                "description": "get payment",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payments"
                ],
                "summary": "Get payment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Payment by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Payment_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/payments_add": {
            "post": {
                "description": "add payment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payments"
                ],
                "summary": "Add payment",
                "parameters": [
                    {
                        "description": "New payment. Significant params: PaymentDate, Contract.Id, Object.Id, PaymentType.Id, ChargeType.Id, Cashdesk.Id, BundleNumber, Amount",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddPayment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/payments_del": {
            "post": {
                "description": "delete payments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payments"
                ],
                "summary": "Delete payments",
                "parameters": [
                    {
                        "description": "Delete payments",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/payments_upd": {
            "post": {
                "description": "update payment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payments"
                ],
                "summary": "Update payment",
                "parameters": [
                    {
                        "description": "Update payment. Significant params: Id, PaymentDate, Contract.Id, Object.Id, PaymentType.Id, ChargeType.Id, Cashdesk.Id, BundleNumber, Amount",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Payment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/paymenttypes": {
            "get": {
                "description": "get paymenttype list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "paymenttypes"
                ],
                "summary": "List paymenttypes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "paymenttypename search pattern",
                        "name": "paymenttypename",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|paymenttypename}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PaymentType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/paymenttypes/{id}": {
            "get": {
                "description": "get paymenttype",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "paymenttypes"
                ],
                "summary": "Get paymenttype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "PaymentType by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PaymentType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/paymenttypes_add": {
            "post": {
                "description": "add paymenttype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "paymenttypes"
                ],
                "summary": "Add paymenttype",
                "parameters": [
                    {
                        "description": "New paymenttype",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddPaymentType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/paymenttypes_del": {
            "post": {
                "description": "delete paymenttypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "paymenttypes"
                ],
                "summary": "Delete paymenttypes",
                "parameters": [
                    {
                        "description": "Delete paymenttypes",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/paymenttypes_upd": {
            "post": {
                "description": "update paymenttype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "paymenttypes"
                ],
                "summary": "Update paymenttype",
                "parameters": [
                    {
                        "description": "Update paymenttype",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PaymentType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/periods": {
            "get": {
                "description": "get period list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "periods"
                ],
                "summary": "List periods",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "periodname search pattern",
                        "name": "periodname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|periodname|startdate}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Period_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/periods/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get period",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "periods"
                ],
                "summary": "Get period",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Period by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Period_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/periods_add": {
            "post": {
                "description": "add period",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "periods"
                ],
                "summary": "Add period",
                "parameters": [
                    {
                        "description": "New period. Significant params: PeriodName, Startdate, Enddate",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddPeriod"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/periods_del": {
            "post": {
                "description": "delete periods",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "periods"
                ],
                "summary": "Delete periods",
                "parameters": [
                    {
                        "description": "Delete periods",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/periods_upd": {
            "post": {
                "description": "update period",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "periods"
                ],
                "summary": "Update period",
                "parameters": [
                    {
                        "description": "Update period. Significant params: Id, PeriodName, Startdate, Enddate",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Period"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/positions": {
            "get": {
                "description": "get positions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "positions"
                ],
                "summary": "List positions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "positionname search pattern",
                        "name": "positionname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|positionname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Position_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/positions/{id}": {
            "get": {
                "description": "get position",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "positions"
                ],
                "summary": "Get position",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Position by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Position_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/positions_add": {
            "post": {
                "description": "add position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "positions"
                ],
                "summary": "Add position",
                "parameters": [
                    {
                        "description": "New Position",
                        "name": "ap",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddPosition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/positions_del": {
            "post": {
                "description": "delete positions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "positions"
                ],
                "summary": "Delete positions",
                "parameters": [
                    {
                        "description": "Delete positions",
                        "name": "dp",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/positions_upd": {
            "post": {
                "description": "update position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "positions"
                ],
                "summary": "Update position",
                "parameters": [
                    {
                        "description": "Update position",
                        "name": "up",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Position"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/pu": {
            "get": {
                "description": "get pu list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pu"
                ],
                "summary": "List pu",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "objectname search pattern",
                        "name": "objectname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "streetname search pattern",
                        "name": "streetname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "actual date",
                        "name": "actualdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "parent id search pattern",
                        "name": "pid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "house id search pattern",
                        "name": "houseid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "except pu id",
                        "name": "exid",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "active pu",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {objectname|streetname|startdate}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Pu_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/pu/{id}": {
            "get": {
                "description": "get pu",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pu"
                ],
                "summary": "Get pu",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Pu by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Pu_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/pu_add": {
            "post": {
                "description": "add pu",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pu"
                ],
                "summary": "Add pu",
                "parameters": [
                    {
                        "description": "New pu. Significant params: Object.Id, PuObjectType, PuType.Id, PuNumber, InstallDate, CheckInterval, InitialValue, DevStopped, Startdate, Pid",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddPu"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/pu_del": {
            "post": {
                "description": "delete pu list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pu"
                ],
                "summary": "Delete pu list",
                "parameters": [
                    {
                        "description": "Delete pu list",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/pu_obj": {
            "get": {
                "description": "get pu of obj\u0026tgu list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pu"
                ],
                "summary": "List pu of obj\u0026tgu",
                "parameters": [
                    {
                        "type": "string",
                        "description": "obj\u0026tgu id",
                        "name": "objid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "obj\u0026tgu type id (obj - type = 0, tgu - type \u003e 0)",
                        "name": "tid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Pu_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/pu_upd": {
            "post": {
                "description": "update pu",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pu"
                ],
                "summary": "Update pu",
                "parameters": [
                    {
                        "description": "Update pu. Significant params: Id, Object.Id, PuObjectType, PuType.Id, PuNumber, InstallDate, CheckInterval, InitialValue, DevStopped, Startdate, Enddate, Pid",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Pu"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/putypes": {
            "get": {
                "description": "get putype list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "putypes"
                ],
                "summary": "List putypes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "putypename search pattern",
                        "name": "putypename",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|putypename}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PuType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/putypes/{id}": {
            "get": {
                "description": "get putype",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "putypes"
                ],
                "summary": "Get putype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "PuType by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PuType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/putypes_add": {
            "post": {
                "description": "add putype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "putypes"
                ],
                "summary": "Add putype",
                "parameters": [
                    {
                        "description": "New putype",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddPuType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/putypes_del": {
            "post": {
                "description": "delete putypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "putypes"
                ],
                "summary": "Delete putypes",
                "parameters": [
                    {
                        "description": "Delete putypes",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/putypes_upd": {
            "post": {
                "description": "update putype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "putypes"
                ],
                "summary": "Update putype",
                "parameters": [
                    {
                        "description": "Update putype",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PuType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/puvalues": {
            "get": {
                "description": "get pu values list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "puvalues"
                ],
                "summary": "List pu values",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "puid search pattern",
                        "name": "puid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {puid|valuedate}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PuValue_count"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/puvalues/{id}": {
            "get": {
                "description": "get pu value",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "puvalues"
                ],
                "summary": "Get pu value",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Pu value Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PuValue_count"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/puvalues_add": {
            "post": {
                "description": "add pu value",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "puvalues"
                ],
                "summary": "Add pu value",
                "parameters": [
                    {
                        "description": "New pu value. Significant params: PuId, ValueDate, PuValue",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PuValue"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Json_id"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/puvalues_askue": {
            "post": {
                "description": "load askue pu values",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "puvalues"
                ],
                "summary": "Load askue pu values",
                "parameters": [
                    {
                        "description": "Askue file to load",
                        "name": "af",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AskueFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AskueLoadRes"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/puvalues_askue_prev": {
            "post": {
                "description": "preview askue pu values",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "puvalues"
                ],
                "summary": "Preview askue pu values",
                "parameters": [
                    {
                        "description": "Askue file to preview",
                        "name": "af",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AskueFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PuValueAskue_count"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/puvalues_del": {
            "post": {
                "description": "delete pu values",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "puvalues"
                ],
                "summary": "Delete pu values",
                "parameters": [
                    {
                        "description": "Delete pu values",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/puvalues_upd": {
            "post": {
                "description": "update pu value",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "puvalues"
                ],
                "summary": "Update pu value",
                "parameters": [
                    {
                        "description": "Update pu value. Significant params: Id, ValueDate, PuValue",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PuValue"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Json_id"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/puvaluetypes": {
            "get": {
                "description": "get puvaluetype list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "puvaluetypes"
                ],
                "summary": "List puvaluetypes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "puvaluetypename search pattern",
                        "name": "puvaluetypename",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|putypename}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PuType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/puvaluetypes/{id}": {
            "get": {
                "description": "get puvaluetype",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "puvaluetypes"
                ],
                "summary": "Get puvaluetype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "PuValueType by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PuValueType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/puvaluetypes_add": {
            "post": {
                "description": "add puvaluetype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "puvaluetypes"
                ],
                "summary": "Add puvaluetype",
                "parameters": [
                    {
                        "description": "New puvaluetype",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddPuValueType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/puvaluetypes_del": {
            "post": {
                "description": "delete puvaluetypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "puvaluetypes"
                ],
                "summary": "Delete puvaluetypes",
                "parameters": [
                    {
                        "description": "Delete puvaluetypes",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/puvaluetypes_upd": {
            "post": {
                "description": "update puvaluetype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "puvaluetypes"
                ],
                "summary": "Update puvaluetype",
                "parameters": [
                    {
                        "description": "Update puvaluetype",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PuValueType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/reasons": {
            "get": {
                "description": "get reason list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reasons"
                ],
                "summary": "List reasons",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "reasonname search pattern",
                        "name": "reasonname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|reasonname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Reason_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/reasons/{id}": {
            "get": {
                "description": "get reason",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reasons"
                ],
                "summary": "Get reason",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Reason by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Reason_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/reasons_add": {
            "post": {
                "description": "add reason",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reasons"
                ],
                "summary": "Add reason",
                "parameters": [
                    {
                        "description": "New reason",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddReason"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/reasons_del": {
            "post": {
                "description": "delete reasons",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reasons"
                ],
                "summary": "Delete reasons",
                "parameters": [
                    {
                        "description": "Delete reasons",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/reasons_upd": {
            "post": {
                "description": "update reason",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reasons"
                ],
                "summary": "Update reason",
                "parameters": [
                    {
                        "description": "Update reason",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Reason"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/reliabilities": {
            "get": {
                "description": "get reliabilities",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reliabilities"
                ],
                "summary": "List reliabilities",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "reliabilityname search pattern",
                        "name": "reliabilityname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|reliabilityname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Reliability_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/reliabilities/{id}": {
            "get": {
                "description": "get reliability",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reliabilities"
                ],
                "summary": "Get reliability",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Reliability by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Reliability_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/reliabilities_add": {
            "post": {
                "description": "add reliability",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reliabilities"
                ],
                "summary": "Add reliability",
                "parameters": [
                    {
                        "description": "New reliability",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddReliability"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/reliabilities_del": {
            "post": {
                "description": "delete reliabilities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reliabilities"
                ],
                "summary": "Delete reliabilities",
                "parameters": [
                    {
                        "description": "Delete reliabilities",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/reliabilities_upd": {
            "post": {
                "description": "update reliability",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reliabilities"
                ],
                "summary": "Update reliability",
                "parameters": [
                    {
                        "description": "Update reliability",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Reliability"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/requestkinds": {
            "get": {
                "description": "get requestkind list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requestkinds"
                ],
                "summary": "List requestkinds",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "requestkindname search pattern",
                        "name": "requestkindname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|requestkindname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.RequestKind_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/requestkinds/{id}": {
            "get": {
                "description": "get requestkind",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requestkinds"
                ],
                "summary": "Get requestkind",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "RequestKind by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.RequestKind_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/requestkinds_add": {
            "post": {
                "description": "add requestkind",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requestkinds"
                ],
                "summary": "Add requestkind",
                "parameters": [
                    {
                        "description": "New requestkind",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddRequestKind"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/requestkinds_del": {
            "post": {
                "description": "delete requestkinds",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requestkinds"
                ],
                "summary": "Delete requestkinds",
                "parameters": [
                    {
                        "description": "Delete requestkinds",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/requestkinds_upd": {
            "post": {
                "description": "update requestkind",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requestkinds"
                ],
                "summary": "Update requestkind",
                "parameters": [
                    {
                        "description": "Update requestkind",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RequestKind"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/requests": {
            "get": {
                "description": "get request list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requests"
                ],
                "summary": "List of requests",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "requestnumber search pattern",
                        "name": "requestnumber",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|requestnumber}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Request_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/requests/{id}": {
            "get": {
                "description": "get request",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requests"
                ],
                "summary": "Get request",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Request by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Request_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/requests_add": {
            "post": {
                "description": "add request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requests"
                ],
                "summary": "Add request",
                "parameters": [
                    {
                        "description": "New request. Significant params: RequestNumber, RequestDate, Contract.Id(n), ServiceType.Id, RequestType.Id, RequestKind.Id, ClaimType.Id(n), TermDate, Executive, Accept, Notes(n), Result.Id, Act.Id(n), Object.Id(n)",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/requests_del": {
            "post": {
                "description": "delete requests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requests"
                ],
                "summary": "Delete requests",
                "parameters": [
                    {
                        "description": "Delete requests",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/requests_upd": {
            "post": {
                "description": "update request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requests"
                ],
                "summary": "Update request",
                "parameters": [
                    {
                        "description": "Update request. Significant params: Id, RequestNumber, RequestDate, Contract.Id(n), ServiceType.Id, RequestType.Id, RequestKind.Id, ClaimType.Id(n), TermDate, Executive, Accept, Notes(n), Result.Id, Act.Id(n), Object.Id(n)",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/requesttypes": {
            "get": {
                "description": "get requesttype list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requesttypes"
                ],
                "summary": "List requesttypes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "requesttypename search pattern",
                        "name": "requesttypename",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "request kind id search pattern",
                        "name": "rkid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|requesttypename}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.RequestType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/requesttypes/{id}": {
            "get": {
                "description": "get requesttype",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requesttypes"
                ],
                "summary": "Get requesttype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "RequestType by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.RequestType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/requesttypes_add": {
            "post": {
                "description": "add requesttype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requesttypes"
                ],
                "summary": "Add requesttype",
                "parameters": [
                    {
                        "description": "New requesttype",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddRequestType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/requesttypes_del": {
            "post": {
                "description": "delete requesttypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requesttypes"
                ],
                "summary": "Delete requesttypes",
                "parameters": [
                    {
                        "description": "Delete requesttypes",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/requesttypes_upd": {
            "post": {
                "description": "update requesttype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requesttypes"
                ],
                "summary": "Update requesttype",
                "parameters": [
                    {
                        "description": "Update requesttype",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RequestType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/results": {
            "get": {
                "description": "get result list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "results"
                ],
                "summary": "List results",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "resultname search pattern",
                        "name": "resultname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|resultname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Result_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/results/{id}": {
            "get": {
                "description": "get result",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "results"
                ],
                "summary": "Get result",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Result by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Result_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/results_add": {
            "post": {
                "description": "add result",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "results"
                ],
                "summary": "Add result",
                "parameters": [
                    {
                        "description": "New result",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddResult"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/results_del": {
            "post": {
                "description": "delete results",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "results"
                ],
                "summary": "Delete results",
                "parameters": [
                    {
                        "description": "Delete results",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/results_upd": {
            "post": {
                "description": "update result",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "results"
                ],
                "summary": "Update result",
                "parameters": [
                    {
                        "description": "Update result",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Result"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/rp": {
            "get": {
                "description": "Get rp list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rp"
                ],
                "summary": "List rp",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "rpname search pattern",
                        "name": "rpname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "invnumber search pattern",
                        "name": "invnumber",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {rpname|invnumber}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Rp_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/rp/{id}": {
            "get": {
                "description": "get rp",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rp"
                ],
                "summary": "Get rp",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Rp by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Rp_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/rp_add": {
            "post": {
                "description": "add rp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rp"
                ],
                "summary": "Add rp",
                "parameters": [
                    {
                        "description": "New rp",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddRp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/rp_del": {
            "post": {
                "description": "delete rp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rp"
                ],
                "summary": "Delete rp",
                "parameters": [
                    {
                        "description": "Delete rp",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/rp_upd": {
            "post": {
                "description": "update rp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rp"
                ],
                "summary": "Update rp",
                "parameters": [
                    {
                        "description": "Update rp",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Rp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sealcolours": {
            "get": {
                "description": "get sealcolour list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sealcolours"
                ],
                "summary": "List sealcolours",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sealcolourname search pattern",
                        "name": "sealcolourname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|sealcolourname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SealColour_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sealcolours/{id}": {
            "get": {
                "description": "get sealcolour",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sealcolours"
                ],
                "summary": "Get sealcolour",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "SealColour by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SealColour_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sealcolours_add": {
            "post": {
                "description": "add sealcolour",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sealcolours"
                ],
                "summary": "Add sealcolour",
                "parameters": [
                    {
                        "description": "New sealcolour",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddSealColour"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sealcolours_del": {
            "post": {
                "description": "delete sealcolours",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sealcolours"
                ],
                "summary": "Delete sealcolours",
                "parameters": [
                    {
                        "description": "Delete sealcolours",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sealcolours_upd": {
            "post": {
                "description": "update sealcolour",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sealcolours"
                ],
                "summary": "Update sealcolour",
                "parameters": [
                    {
                        "description": "Update sealcolour",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SealColour"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/seals": {
            "get": {
                "description": "get seal list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "seals"
                ],
                "summary": "List seals",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "packetnumber search pattern",
                        "name": "packetnumber",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|packetnumber}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Seal_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/seals/{id}": {
            "get": {
                "description": "get seal",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "seals"
                ],
                "summary": "Get seal",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Seal by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Seal_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/seals_add": {
            "post": {
                "description": "add seal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "seals"
                ],
                "summary": "Add seal",
                "parameters": [
                    {
                        "description": "New seal. Significant params: PacketNumber, Area.Id, Staff.Id, SealType.Id, SealColour.Id, SealStatus.Id, IssueDate, ReportDate",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddSeal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/seals_del": {
            "post": {
                "description": "delete seals",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "seals"
                ],
                "summary": "Delete seals",
                "parameters": [
                    {
                        "description": "Delete seals",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/seals_upd": {
            "post": {
                "description": "update seal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "seals"
                ],
                "summary": "Update seal",
                "parameters": [
                    {
                        "description": "Update seal. Significant params: Id, PacketNumber, Area.Id, Staff.Id, SealType.Id, SealColour.Id, SealStatus.Id, IssueDate, ReportDate",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Seal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sealstatuses": {
            "get": {
                "description": "get sealstatus list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sealstatuses"
                ],
                "summary": "List sealstatuses",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sealstatusname search pattern",
                        "name": "sealstatusname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|sealstatusname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SealStatus_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sealstatuses/{id}": {
            "get": {
                "description": "get sealstatus",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sealstatuses"
                ],
                "summary": "Get sealstatus",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "SealStatus by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SealStatus_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sealstatuses_add": {
            "post": {
                "description": "add sealstatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sealstatuses"
                ],
                "summary": "Add sealstatus",
                "parameters": [
                    {
                        "description": "New sealstatus",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddSealStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sealstatuses_del": {
            "post": {
                "description": "delete sealstatuses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sealstatuses"
                ],
                "summary": "Delete sealstatuses",
                "parameters": [
                    {
                        "description": "Delete sealstatuses",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sealstatuses_upd": {
            "post": {
                "description": "update sealstatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sealstatuses"
                ],
                "summary": "Update sealstatus",
                "parameters": [
                    {
                        "description": "Update sealstatus",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SealStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sealtypes": {
            "get": {
                "description": "get sealtype list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sealtypes"
                ],
                "summary": "List sealtypes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sealtypename search pattern",
                        "name": "sealtypename",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|sealtypename}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SealType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sealtypes/{id}": {
            "get": {
                "description": "get sealtype",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sealtypes"
                ],
                "summary": "Get sealtype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "SealType by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SealType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sealtypes_add": {
            "post": {
                "description": "add sealtype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sealtypes"
                ],
                "summary": "Add sealtype",
                "parameters": [
                    {
                        "description": "New sealtype",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddSealType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sealtypes_del": {
            "post": {
                "description": "delete sealtypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sealtypes"
                ],
                "summary": "Delete sealtypes",
                "parameters": [
                    {
                        "description": "Delete sealtypes",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sealtypes_upd": {
            "post": {
                "description": "update sealtype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sealtypes"
                ],
                "summary": "Update sealtype",
                "parameters": [
                    {
                        "description": "Update sealtype",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SealType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sectors": {
            "get": {
                "description": "get sector list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sectors"
                ],
                "summary": "List sectors",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sectorname search pattern",
                        "name": "sectorname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|sectorname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Sector_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sectors/{id}": {
            "get": {
                "description": "get sector",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sectors"
                ],
                "summary": "Get sector",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Sector by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Sector_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sectors_add": {
            "post": {
                "description": "add sector",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sectors"
                ],
                "summary": "Add sector",
                "parameters": [
                    {
                        "description": "New sector",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddSector"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sectors_del": {
            "post": {
                "description": "delete sectors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sectors"
                ],
                "summary": "Delete sectors",
                "parameters": [
                    {
                        "description": "Delete sectors",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sectors_upd": {
            "post": {
                "description": "update sector",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sectors"
                ],
                "summary": "Update sector",
                "parameters": [
                    {
                        "description": "Update sector",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Sector"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/servicetypes": {
            "get": {
                "description": "get servicetype list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "servicetypes"
                ],
                "summary": "List servicetypes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "servicetypename search pattern",
                        "name": "servicetypename",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|servicetypename}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ServiceType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/servicetypes/{id}": {
            "get": {
                "description": "get servicetype",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "servicetypes"
                ],
                "summary": "Get servicetype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ServiceType by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ServiceType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/servicetypes_add": {
            "post": {
                "description": "add servicetype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "servicetypes"
                ],
                "summary": "Add servicetype",
                "parameters": [
                    {
                        "description": "New servicetype",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddServiceType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/servicetypes_del": {
            "post": {
                "description": "delete servicetypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "servicetypes"
                ],
                "summary": "Delete servicetypes",
                "parameters": [
                    {
                        "description": "Delete servicetypes",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/servicetypes_upd": {
            "post": {
                "description": "update servicetype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "servicetypes"
                ],
                "summary": "Update servicetype",
                "parameters": [
                    {
                        "description": "Update servicetype",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ServiceType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/shutdowntypes": {
            "get": {
                "description": "get shutdowntype list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shutdowntypes"
                ],
                "summary": "List shutdowntypes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "shutdowntypename search pattern",
                        "name": "shutdowntypename",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|shutdowntypename}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ShutdownType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/shutdowntypes/{id}": {
            "get": {
                "description": "get shutdowntype",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shutdowntypes"
                ],
                "summary": "Get shutdowntype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ShutdownType by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ShutdownType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/shutdowntypes_add": {
            "post": {
                "description": "add shutdowntype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shutdowntypes"
                ],
                "summary": "Add shutdowntype",
                "parameters": [
                    {
                        "description": "New shutdowntype",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddShutdownType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/shutdowntypes_del": {
            "post": {
                "description": "delete shutdowntypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shutdowntypes"
                ],
                "summary": "Delete shutdowntypes",
                "parameters": [
                    {
                        "description": "Delete shutdowntypes",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/shutdowntypes_upd": {
            "post": {
                "description": "update shutdowntype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shutdowntypes"
                ],
                "summary": "Update shutdowntype",
                "parameters": [
                    {
                        "description": "Update shutdowntype",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ShutdownType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/staff": {
            "get": {
                "description": "get staff list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "List staff",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "staffname search pattern",
                        "name": "staffname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|staffname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Staff_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/staff/{id}": {
            "get": {
                "description": "get staff",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Get staff",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Staff by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Staff_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/staff_add": {
            "post": {
                "description": "add staff",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Add staff",
                "parameters": [
                    {
                        "description": "New staff",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddStaff"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/staff_del": {
            "post": {
                "description": "delete staff",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Delete staff",
                "parameters": [
                    {
                        "description": "Delete staff",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/staff_upd": {
            "post": {
                "description": "update staff",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Update staff",
                "parameters": [
                    {
                        "description": "Update staff",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Staff"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/streets": {
            "get": {
                "description": "get street list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "streets"
                ],
                "summary": "List streets",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "streetname search pattern",
                        "name": "streetname",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "cityid search pattern",
                        "name": "cityid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|streetname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Street_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/streets/{id}": {
            "get": {
                "description": "get street",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "streets"
                ],
                "summary": "Get street",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Street by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Street_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/streets_add": {
            "post": {
                "description": "add street",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "streets"
                ],
                "summary": "Add street",
                "parameters": [
                    {
                        "description": "New street",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddStreet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/streets_del": {
            "post": {
                "description": "delete street",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "streets"
                ],
                "summary": "Delete street",
                "parameters": [
                    {
                        "description": "Delete street",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StreetClose"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/streets_upd": {
            "post": {
                "description": "update street",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "streets"
                ],
                "summary": "Update street",
                "parameters": [
                    {
                        "description": "Update street",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Street"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sub_banks": {
            "get": {
                "description": "Get subject accounts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subject banks"
                ],
                "summary": "List subject accounts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "subname search pattern",
                        "name": "subname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "subid search pattern",
                        "name": "subid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "accnumber search pattern",
                        "name": "accnumber",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {subname|accnumber}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SubBank_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sub_banks/{id}": {
            "get": {
                "description": "get subject account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subject banks"
                ],
                "summary": "Get subject account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Subject account by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SubBank_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sub_banks_add": {
            "post": {
                "description": "Add subject account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subject banks"
                ],
                "summary": "Add subject account",
                "parameters": [
                    {
                        "description": "New subject account. Sets the first account of the subject active. Significant params: Sub.Id, Bank.Id, AccNumber",
                        "name": "ab",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddSubBank"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sub_banks_del": {
            "post": {
                "description": "delete subject accounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subject banks"
                ],
                "summary": "Delete subject accounts",
                "parameters": [
                    {
                        "description": "Delete subject accounts",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sub_banks_setactive/{id}": {
            "post": {
                "description": "set active subject account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subject banks"
                ],
                "summary": "Set active subject account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Sets the active account of the subject by ID, sets inactive all other accounts of the subject.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sub_banks_upd": {
            "post": {
                "description": "Update subject account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subject banks"
                ],
                "summary": "Update subject account",
                "parameters": [
                    {
                        "description": "Update subject account. Significant params: Id, Sub.Id, Bank.Id, AccNumber",
                        "name": "ub",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SubBank"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sub_types": {
            "get": {
                "description": "get subjects types",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sub types"
                ],
                "summary": "List subjects types",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "subtypename search pattern",
                        "name": "subtypename",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "subtypedescr search pattern",
                        "name": "subtypedescr",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {subtypename|subtypedescr}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SubType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sub_types/{id}": {
            "get": {
                "description": "get subject type",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sub types"
                ],
                "summary": "Subjects type",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Subjects type by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SubType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sub_types_add": {
            "post": {
                "description": "add subjects types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sub types"
                ],
                "summary": "Add subjects types",
                "parameters": [
                    {
                        "description": "New subType",
                        "name": "ast",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddSubType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sub_types_del": {
            "post": {
                "description": "delete subjects types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sub types"
                ],
                "summary": "Delete subjects types",
                "parameters": [
                    {
                        "description": "Delete subtypes",
                        "name": "dst",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/sub_types_upd": {
            "post": {
                "description": "update subjects types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sub types"
                ],
                "summary": "Update subjects types",
                "parameters": [
                    {
                        "description": "Update subtype",
                        "name": "ust",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SubType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/subjects": {
            "get": {
                "description": "get subjects",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subjects"
                ],
                "summary": "List subjects",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "subname search pattern",
                        "name": "subname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "subdescr search pattern",
                        "name": "subdescr",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "hide closed, default true",
                        "name": "hideclosed",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {subname|subdescr}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Subject_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/subjects/{id}": {
            "get": {
                "description": "get subject",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subjects"
                ],
                "summary": "Subject",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Subject by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Subject_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/subjects_add": {
            "post": {
                "description": "add subject",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subjects"
                ],
                "summary": "Add subject",
                "parameters": [
                    {
                        "description": "New Subject. Significant params: SubType.Id, SubPhys, SubDescr, SubName, SubBin, SubHeadPos.Id(n), SubHeadName(n), SubAccPos.Id(n), SubAccName(n), SubAddr, SubPhone, SubStart, SubAccNumber, Job(n), Email(n), MobPhone(n), JobPhone(n), Notes(n)",
                        "name": "asb",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddSubject"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/subjects_del": {
            "post": {
                "description": "delete subjects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subjects"
                ],
                "summary": "Delete subjects",
                "parameters": [
                    {
                        "description": "Close subject",
                        "name": "dsb",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SubjectClose"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/subjects_hist/{id}": {
            "get": {
                "description": "get subject history",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subjects"
                ],
                "summary": "Subject history",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Subject history by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/subjects_upd": {
            "post": {
                "description": "update subject",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subjects"
                ],
                "summary": "Update subject",
                "parameters": [
                    {
                        "description": "Update sybject. Significant params: SubId, SubType.Id, SubPhys, SubDescr, SubName, SubBin, SubHeadPos.Id(n), SubHeadName(n), SubAccPos.Id(n), SubAccName(n), SubAddr, SubPhone, SubStart, SubAccNumber, Job(n), Email(n), MobPhone(n), JobPhone(n), Notes(n)",
                        "name": "usb",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Subject"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/subpu": {
            "get": {
                "description": "get subpu list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subpu"
                ],
                "summary": "List subpu",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Subpu parid",
                        "name": "parid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "order by {id|punamber}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Pu_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/subpu/{id}": {
            "get": {
                "description": "get subpu",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subpu"
                ],
                "summary": "Get subpu",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "SubPu by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SubPu_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/subpu_add": {
            "post": {
                "description": "add subpu",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subpu"
                ],
                "summary": "Add subpu",
                "parameters": [
                    {
                        "description": "New subpu. Significant params: ParId, SubId",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddSubPu"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/subpu_del": {
            "post": {
                "description": "delete subpu list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subpu"
                ],
                "summary": "Delete subpu list",
                "parameters": [
                    {
                        "description": "Delete subpu list",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/subpu_prl": {
            "get": {
                "description": "get subpu list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subpu"
                ],
                "summary": "List subpu",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Subpu houseid",
                        "name": "houseid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Subpu id",
                        "name": "subpuid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "order by {id|punamber}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Pu_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/subpu_upd": {
            "post": {
                "description": "update subpu",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subpu"
                ],
                "summary": "Update subpu",
                "parameters": [
                    {
                        "description": "Update subpu. Significant params: Id, ParId, SubId",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SubPu"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/tariffgroups": {
            "get": {
                "description": "get tariffgroup list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tariffgroups"
                ],
                "summary": "List tariffgroups",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tariffgroupname search pattern",
                        "name": "tariffgroupname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|tariffgroupname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TariffGroup_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/tariffgroups/{id}": {
            "get": {
                "description": "get tariffgroup",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tariffgroups"
                ],
                "summary": "Get tariffgroup",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "TariffGroup by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TariffGroup_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/tariffgroups_add": {
            "post": {
                "description": "add tariffgroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tariffgroups"
                ],
                "summary": "Add tariffgroup",
                "parameters": [
                    {
                        "description": "New tariffgroup",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddTariffGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/tariffgroups_del": {
            "post": {
                "description": "delete tariffgroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tariffgroups"
                ],
                "summary": "Delete tariffgroups",
                "parameters": [
                    {
                        "description": "Delete tariffgroups",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/tariffgroups_upd": {
            "post": {
                "description": "update tariffgroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tariffgroups"
                ],
                "summary": "Update tariffgroup",
                "parameters": [
                    {
                        "description": "Update tariffgroup",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TariffGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/tariffs": {
            "get": {
                "description": "get tariff list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tariffs"
                ],
                "summary": "List tariffs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tariffname search pattern",
                        "name": "tariffname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|tariffname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Tariff_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/tariffs/{id}": {
            "get": {
                "description": "get tariff",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tariffs"
                ],
                "summary": "Get tariff",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tariff by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Tariff_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/tariffs_add": {
            "post": {
                "description": "add tariff",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tariffs"
                ],
                "summary": "Add tariff",
                "parameters": [
                    {
                        "description": "New tariff",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddTariff"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/tariffs_del": {
            "post": {
                "description": "delete tariffs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tariffs"
                ],
                "summary": "Delete tariffs",
                "parameters": [
                    {
                        "description": "Delete tariffs",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/tariffs_upd": {
            "post": {
                "description": "update tariff",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tariffs"
                ],
                "summary": "Update tariff",
                "parameters": [
                    {
                        "description": "Update tariff",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Tariff"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/tgu": {
            "get": {
                "description": "get tgu list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tgu"
                ],
                "summary": "List tgu",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tguname search pattern",
                        "name": "tguname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tgu type id",
                        "name": "ttid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|tguname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Tgu_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/tgu/{id}": {
            "get": {
                "description": "get tgu",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tgu"
                ],
                "summary": "Get tgu",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tgu by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Tgu_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/tgu_add": {
            "post": {
                "description": "add tgu",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tgu"
                ],
                "summary": "Add tgu",
                "parameters": [
                    {
                        "description": "New tgu",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddTgu"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/tgu_del": {
            "post": {
                "description": "delete tgu",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tgu"
                ],
                "summary": "Delete tgu",
                "parameters": [
                    {
                        "description": "Delete tgu",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/tgu_upd": {
            "post": {
                "description": "update tgu",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tgu"
                ],
                "summary": "Update tgu",
                "parameters": [
                    {
                        "description": "Update tgu",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Tgu"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/tp": {
            "get": {
                "description": "get tp list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tp"
                ],
                "summary": "List tp",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tpname search pattern",
                        "name": "tpname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|tpname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Tp_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/tp/{id}": {
            "get": {
                "description": "get tp",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tp"
                ],
                "summary": "Get tp",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tp by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Tp_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/tp_add": {
            "post": {
                "description": "add tp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tp"
                ],
                "summary": "Add tp",
                "parameters": [
                    {
                        "description": "New tp",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddTp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/tp_del": {
            "post": {
                "description": "delete tp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tp"
                ],
                "summary": "Delete tp",
                "parameters": [
                    {
                        "description": "Delete tp",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/tp_upd": {
            "post": {
                "description": "update tp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tp"
                ],
                "summary": "Update tp",
                "parameters": [
                    {
                        "description": "Update tp",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Tp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/transcurr": {
            "get": {
                "description": "get current transformers list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transcurr"
                ],
                "summary": "List current transformers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "transcurrname search pattern",
                        "name": "transcurrname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|transcurrname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TransCurr_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/transcurr/{id}": {
            "get": {
                "description": "get current transformer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transcurr"
                ],
                "summary": "Get current transformer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Current transformer by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TransCurr_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/transcurr_add": {
            "post": {
                "description": "add current transformer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transcurr"
                ],
                "summary": "Add current transformer",
                "parameters": [
                    {
                        "description": "New current transformer. Significant params: TransCurrName, TransType.Id, CheckDate(n), NextCheckDate(n), ProdDate(n), Serial1(n), Serial2(n), Serial3(n)",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddTransCurr"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/transcurr_del": {
            "post": {
                "description": "delete current transformers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transcurr"
                ],
                "summary": "Delete current transformers",
                "parameters": [
                    {
                        "description": "Delete current transformers",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/transcurr_upd": {
            "post": {
                "description": "update current transformer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transcurr"
                ],
                "summary": "Update current transformer",
                "parameters": [
                    {
                        "description": "Update current transformer. Significant params: Id, TransCurrName, TransType.Id, CheckDate(n), NextCheckDate(n), ProdDate(n), Serial1(n), Serial2(n), Serial3(n)",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TransCurr"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/transpwr": {
            "get": {
                "description": "get power transformers list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transpwr"
                ],
                "summary": "List power transformers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "transpwrname search pattern",
                        "name": "transpwrname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|transpwrname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TransPwr_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/transpwr/{id}": {
            "get": {
                "description": "get power transformer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transpwr"
                ],
                "summary": "Get power transformer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Power transformer by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TransPwr_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/transpwr_add": {
            "post": {
                "description": "add power transformer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transpwr"
                ],
                "summary": "Add power transformer",
                "parameters": [
                    {
                        "description": "New power transformer. Significant params: TransPwrName, TransPwrType.Id",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddTransPwr"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/transpwr_del": {
            "post": {
                "description": "delete power transformers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transpwr"
                ],
                "summary": "Delete power transformers",
                "parameters": [
                    {
                        "description": "Delete power transformers",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/transpwr_upd": {
            "post": {
                "description": "update power transformer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transpwr"
                ],
                "summary": "Update power transformer",
                "parameters": [
                    {
                        "description": "Update power transformer. Significant params: Id, TransPwrName, TransPwrType.Id",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TransPwr"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/transpwrtypes": {
            "get": {
                "description": "get transpwrtype list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transpwrtypes"
                ],
                "summary": "List transpwrtypes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "transpwrtypename search pattern",
                        "name": "transpwrtypename",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|transpwrtypename}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TransPwrType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/transpwrtypes/{id}": {
            "get": {
                "description": "get transpwrtype",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transpwrtypes"
                ],
                "summary": "Get transpwrtype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "TransPwrType by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TransPwrType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/transpwrtypes_add": {
            "post": {
                "description": "add transpwrtype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transpwrtypes"
                ],
                "summary": "Add transpwrtype",
                "parameters": [
                    {
                        "description": "New transpwrtype. Significant params: TransPwrTypeName, ShortCircuitPower, IdlingLossPower, NominalPower",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddTransPwrType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/transpwrtypes_del": {
            "post": {
                "description": "delete transpwrtypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transpwrtypes"
                ],
                "summary": "Delete transpwrtypes",
                "parameters": [
                    {
                        "description": "Delete transpwrtypes",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/transpwrtypes_upd": {
            "post": {
                "description": "update transpwrtype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transpwrtypes"
                ],
                "summary": "Update transpwrtype",
                "parameters": [
                    {
                        "description": "Update transpwrtype. Significant params: Id, TransPwrTypeName, ShortCircuitPower, IdlingLossPower, NominalPower",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TransPwrType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/transtypes": {
            "get": {
                "description": "get transtype list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transtypes"
                ],
                "summary": "List transtypes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "transtypename search pattern",
                        "name": "transtypename",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|transtypename}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TransType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/transtypes/{id}": {
            "get": {
                "description": "get transtype",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transtypes"
                ],
                "summary": "Get transtype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "TransType by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TransType_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/transtypes_add": {
            "post": {
                "description": "add transtype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transtypes"
                ],
                "summary": "Add transtype",
                "parameters": [
                    {
                        "description": "New transtype. Significant params: TransTypeName, Ratio, Class, MaxCurr, NomCurr",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddTransType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/transtypes_del": {
            "post": {
                "description": "delete transtypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transtypes"
                ],
                "summary": "Delete transtypes",
                "parameters": [
                    {
                        "description": "Delete transtypes",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/transtypes_upd": {
            "post": {
                "description": "update transtype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transtypes"
                ],
                "summary": "Update transtype",
                "parameters": [
                    {
                        "description": "Update transtype. Significant params: Id, TransTypeName, Ratio, Class, MaxCurr, NomCurr",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TransType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/transvolt": {
            "get": {
                "description": "get voltage transformers list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transvolt"
                ],
                "summary": "List voltage transformers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "transvoltname search pattern",
                        "name": "transvoltname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|transvoltname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TransVolt_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/transvolt/{id}": {
            "get": {
                "description": "get voltage transformer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transvolt"
                ],
                "summary": "Get voltage transformer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Voltage transformer by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TransVolt_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/transvolt_add": {
            "post": {
                "description": "add voltage transformer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transvolt"
                ],
                "summary": "Add voltage transformer",
                "parameters": [
                    {
                        "description": "New voltage transformer. Significant params: TransVoltName, TransType.Id, CheckDate(n), NextCheckDate(n), ProdDate(n), Serial1(n), Serial2(n), Serial3(n)",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddTransVolt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/transvolt_del": {
            "post": {
                "description": "delete voltage transformers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transvolt"
                ],
                "summary": "Delete voltage transformers",
                "parameters": [
                    {
                        "description": "Delete voltage transformers",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/transvolt_upd": {
            "post": {
                "description": "update voltage transformer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transvolt"
                ],
                "summary": "Update voltage transformer",
                "parameters": [
                    {
                        "description": "Update voltage transformer. Significant params: Id, TransVoltName, TransType.Id, CheckDate(n), NextCheckDate(n), ProdDate(n), Serial1(n), Serial2(n), Serial3(n)",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TransVolt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "get user list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Users list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "username search pattern",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|username}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "get user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/users_add": {
            "post": {
                "description": "add user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Add user",
                "parameters": [
                    {
                        "description": "New user. Significant params: UserName, OrgInfo.Id, Lang.Id, ChangePass, Position.Id, UserFullName, Created",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/users_del": {
            "post": {
                "description": "delete users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete users",
                "parameters": [
                    {
                        "description": "Delete users",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/users_upd": {
            "post": {
                "description": "update user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "description": "Update user. Significant params: Id, UserName, OrgInfo.Id, Lang.Id, ChangePass, Position.Id, UserFullName, Created, Closed(n)",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/uzo": {
            "get": {
                "description": "get uzo list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uzo"
                ],
                "summary": "List uzo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "uzoname search pattern",
                        "name": "uzoname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|uzoname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Uzo_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/uzo/{id}": {
            "get": {
                "description": "get uzo",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uzo"
                ],
                "summary": "Get uzo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Uzo by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Uzo_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/uzo_add": {
            "post": {
                "description": "add uzo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uzo"
                ],
                "summary": "Add uzo",
                "parameters": [
                    {
                        "description": "New uzo",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddUzo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/uzo_del": {
            "post": {
                "description": "delete uzo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uzo"
                ],
                "summary": "Delete uzo",
                "parameters": [
                    {
                        "description": "Delete uzo",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/uzo_upd": {
            "post": {
                "description": "update uzo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uzo"
                ],
                "summary": "Update uzo",
                "parameters": [
                    {
                        "description": "Update uzo",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Uzo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/violations": {
            "get": {
                "description": "get violations list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "violations"
                ],
                "summary": "List violations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "violationname search pattern",
                        "name": "violationname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|violationname}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Violation_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/violations/{id}": {
            "get": {
                "description": "get violation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "violations"
                ],
                "summary": "Get violation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Violation by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Violation_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/violations_add": {
            "post": {
                "description": "add violation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "violations"
                ],
                "summary": "Add violation",
                "parameters": [
                    {
                        "description": "New violation",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddViolation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/violations_del": {
            "post": {
                "description": "delete violations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "violations"
                ],
                "summary": "Delete violations",
                "parameters": [
                    {
                        "description": "Delete violations",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/violations_upd": {
            "post": {
                "description": "update violation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "violations"
                ],
                "summary": "Update violation",
                "parameters": [
                    {
                        "description": "Update violation",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Violation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/voltages": {
            "get": {
                "description": "get voltage list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "voltages"
                ],
                "summary": "List voltages",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "voltagename search pattern",
                        "name": "voltagename",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by {id|voltagename}",
                        "name": "ordering",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "descending order {true|false}",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Voltage_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/voltages/{id}": {
            "get": {
                "description": "get voltage",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "voltages"
                ],
                "summary": "Get voltage",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Voltage by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Voltage_count"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/voltages_add": {
            "post": {
                "description": "add voltage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "voltages"
                ],
                "summary": "Add voltage",
                "parameters": [
                    {
                        "description": "New voltage",
                        "name": "a",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddVoltage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/voltages_del": {
            "post": {
                "description": "delete voltages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "voltages"
                ],
                "summary": "Delete voltages",
                "parameters": [
                    {
                        "description": "Delete voltages",
                        "name": "d",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Json_ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_ids"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/voltages_upd": {
            "post": {
                "description": "update voltage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "voltages"
                ],
                "summary": "Update voltage",
                "parameters": [
                    {
                        "description": "Update voltage",
                        "name": "u",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Voltage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Json_id"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Act": {
            "type": "object",
            "properties": {
                "actdate": {
                    "type": "string"
                },
                "activated": {
                    "type": "string"
                },
                "actnumber": {
                    "type": "string"
                },
                "acttype": {
                    "$ref": "#/definitions/models.ActType"
                },
                "id": {
                    "type": "integer"
                },
                "notes": {
                    "type": "string"
                },
                "object": {
                    "$ref": "#/definitions/models.Object"
                },
                "staff": {
                    "$ref": "#/definitions/models.Staff"
                }
            }
        },
        "models.ActDetail": {
            "type": "object",
            "properties": {
                "act": {
                    "$ref": "#/definitions/models.Act"
                },
                "actdetaildate": {
                    "type": "string"
                },
                "adpuvalue": {
                    "type": "number"
                },
                "checkinterval": {
                    "type": "integer"
                },
                "conclusion": {
                    "$ref": "#/definitions/models.Conclusion"
                },
                "conclusionnumber": {
                    "type": "string"
                },
                "customer": {
                    "type": "string"
                },
                "customerphone": {
                    "type": "string"
                },
                "customerpos": {
                    "type": "string"
                },
                "devstopped": {
                    "type": "boolean"
                },
                "enddate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "initialvalue": {
                    "type": "integer"
                },
                "installdate": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "pid": {
                    "type": "integer"
                },
                "puid": {
                    "type": "integer"
                },
                "punumber": {
                    "type": "string"
                },
                "putype": {
                    "$ref": "#/definitions/models.PuType"
                },
                "reason": {
                    "$ref": "#/definitions/models.Reason"
                },
                "seal": {
                    "$ref": "#/definitions/models.Seal"
                },
                "sealdate": {
                    "type": "string"
                },
                "sealnumber": {
                    "type": "string"
                },
                "shutdowntype": {
                    "$ref": "#/definitions/models.ShutdownType"
                },
                "startdate": {
                    "type": "string"
                },
                "violation": {
                    "$ref": "#/definitions/models.Violation"
                }
            }
        },
        "models.ActDetail_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ActDetail"
                    }
                }
            }
        },
        "models.ActType": {
            "type": "object",
            "properties": {
                "acttypename": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.ActType_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ActType"
                    }
                }
            }
        },
        "models.Act_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Act"
                    }
                }
            }
        },
        "models.AddAct": {
            "type": "object",
            "properties": {
                "actdate": {
                    "type": "string"
                },
                "activated": {
                    "type": "string"
                },
                "actnumber": {
                    "type": "string"
                },
                "acttype": {
                    "$ref": "#/definitions/models.ActType"
                },
                "notes": {
                    "type": "string"
                },
                "object": {
                    "$ref": "#/definitions/models.Object"
                },
                "staff": {
                    "$ref": "#/definitions/models.Staff"
                }
            }
        },
        "models.AddActDetail": {
            "type": "object",
            "properties": {
                "act": {
                    "$ref": "#/definitions/models.Act"
                },
                "actdetaildate": {
                    "type": "string"
                },
                "adpuvalue": {
                    "type": "number"
                },
                "checkinterval": {
                    "type": "integer"
                },
                "conclusion": {
                    "$ref": "#/definitions/models.Conclusion"
                },
                "conclusionnumber": {
                    "type": "string"
                },
                "customer": {
                    "type": "string"
                },
                "customerphone": {
                    "type": "string"
                },
                "customerpos": {
                    "type": "string"
                },
                "devstopped": {
                    "type": "boolean"
                },
                "enddate": {
                    "type": "string"
                },
                "initialvalue": {
                    "type": "integer"
                },
                "installdate": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "pid": {
                    "type": "integer"
                },
                "puid": {
                    "type": "integer"
                },
                "punumber": {
                    "type": "string"
                },
                "putype": {
                    "$ref": "#/definitions/models.PuType"
                },
                "reason": {
                    "$ref": "#/definitions/models.Reason"
                },
                "seal": {
                    "$ref": "#/definitions/models.Seal"
                },
                "sealdate": {
                    "type": "string"
                },
                "sealnumber": {
                    "type": "string"
                },
                "shutdowntype": {
                    "$ref": "#/definitions/models.ShutdownType"
                },
                "startdate": {
                    "type": "string"
                },
                "violation": {
                    "$ref": "#/definitions/models.Violation"
                }
            }
        },
        "models.AddActType": {
            "type": "object",
            "properties": {
                "acttypename": {
                    "type": "string"
                }
            }
        },
        "models.AddArea": {
            "type": "object",
            "properties": {
                "areaname": {
                    "type": "string"
                },
                "areanumber": {
                    "type": "string"
                }
            }
        },
        "models.AddAskueType": {
            "type": "object",
            "properties": {
                "askuetypename": {
                    "type": "string"
                },
                "datecolumn": {
                    "type": "integer"
                },
                "datecolumnarray": {
                    "type": "string"
                },
                "pucolumn": {
                    "type": "integer"
                },
                "startline": {
                    "type": "integer"
                },
                "valuecolumn": {
                    "type": "integer"
                }
            }
        },
        "models.AddBank": {
            "type": "object",
            "properties": {
                "bankdescr": {
                    "type": "string"
                },
                "bankname": {
                    "type": "string"
                },
                "mfo": {
                    "type": "string"
                }
            }
        },
        "models.AddBuildingType": {
            "type": "object",
            "properties": {
                "buildingtypename": {
                    "type": "string"
                }
            }
        },
        "models.AddCableResistance": {
            "type": "object",
            "properties": {
                "cableresistancename": {
                    "type": "string"
                },
                "materialtype": {
                    "type": "boolean"
                },
                "resistance": {
                    "type": "number"
                }
            }
        },
        "models.AddCalculationType": {
            "type": "object",
            "properties": {
                "calculationtypename": {
                    "type": "string"
                }
            }
        },
        "models.AddCashdesk": {
            "type": "object",
            "properties": {
                "cashdeskname": {
                    "type": "string"
                }
            }
        },
        "models.AddCharge": {
            "type": "object",
            "properties": {
                "chargedate": {
                    "type": "string"
                },
                "chargetype": {
                    "$ref": "#/definitions/models.ChargeType"
                },
                "contract": {
                    "$ref": "#/definitions/models.Contract"
                },
                "enddate": {
                    "type": "string"
                },
                "lineloss": {
                    "type": "number"
                },
                "object": {
                    "$ref": "#/definitions/models.Object"
                },
                "objtypeid": {
                    "type": "integer"
                },
                "pu": {
                    "$ref": "#/definitions/models.Pu"
                },
                "qty": {
                    "type": "number"
                },
                "startdate": {
                    "type": "string"
                },
                "transloss": {
                    "type": "number"
                }
            }
        },
        "models.AddChargeType": {
            "type": "object",
            "properties": {
                "chargetypename": {
                    "type": "string"
                }
            }
        },
        "models.AddCity": {
            "type": "object",
            "properties": {
                "cityname": {
                    "type": "string"
                }
            }
        },
        "models.AddClaimType": {
            "type": "object",
            "properties": {
                "claimtypename": {
                    "type": "string"
                }
            }
        },
        "models.AddConclusion": {
            "type": "object",
            "properties": {
                "conclusionname": {
                    "type": "string"
                }
            }
        },
        "models.AddConnector": {
            "type": "object",
            "properties": {
                "connectorname": {
                    "type": "string"
                }
            }
        },
        "models.AddContract": {
            "type": "object",
            "properties": {
                "area": {
                    "$ref": "#/definitions/models.Area"
                },
                "barcode": {
                    "type": "string"
                },
                "consignee": {
                    "$ref": "#/definitions/models.Subject"
                },
                "contractmot": {
                    "$ref": "#/definitions/models.ContractMot"
                },
                "contractnumber": {
                    "type": "string"
                },
                "customer": {
                    "$ref": "#/definitions/models.Subject"
                },
                "customergroup": {
                    "$ref": "#/definitions/models.CustomerGroup"
                },
                "enddate": {
                    "type": "string"
                },
                "eso": {
                    "$ref": "#/definitions/models.Eso"
                },
                "esocontractnumber": {
                    "type": "string"
                },
                "motnotes": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "personalaccount": {
                    "type": "integer"
                },
                "startdate": {
                    "type": "string"
                }
            }
        },
        "models.AddContractMot": {
            "type": "object",
            "properties": {
                "ContractMotName_KZ": {
                    "type": "string"
                },
                "ContractMotName_RU": {
                    "type": "string"
                }
            }
        },
        "models.AddContractType": {
            "type": "object",
            "properties": {
                "contracttypename": {
                    "type": "string"
                }
            }
        },
        "models.AddCustomerGroup": {
            "type": "object",
            "properties": {
                "customergroupname": {
                    "type": "string"
                }
            }
        },
        "models.AddDistributionZone": {
            "type": "object",
            "properties": {
                "distributionzonename": {
                    "type": "string"
                }
            }
        },
        "models.AddEquipment": {
            "type": "object",
            "properties": {
                "equipmenttype": {
                    "$ref": "#/definitions/models.EquipmentType"
                },
                "object": {
                    "$ref": "#/definitions/models.Object"
                },
                "qty": {
                    "type": "integer"
                },
                "workinghours": {
                    "type": "number"
                }
            }
        },
        "models.AddEquipmentType": {
            "type": "object",
            "properties": {
                "equipmenttypename": {
                    "type": "string"
                },
                "equipmenttypepower": {
                    "type": "number"
                }
            }
        },
        "models.AddEso": {
            "type": "object",
            "properties": {
                "esoname": {
                    "type": "string"
                }
            }
        },
        "models.AddGRp": {
            "type": "object",
            "properties": {
                "grpname": {
                    "type": "string"
                }
            }
        },
        "models.AddHouse": {
            "type": "object",
            "properties": {
                "area": {
                    "$ref": "#/definitions/models.Area"
                },
                "buildingnumber": {
                    "type": "string"
                },
                "buildingtype": {
                    "$ref": "#/definitions/models.BuildingType"
                },
                "connector": {
                    "$ref": "#/definitions/models.Connector"
                },
                "housenumber": {
                    "type": "string"
                },
                "inputtype": {
                    "$ref": "#/definitions/models.InputType"
                },
                "ksk": {
                    "$ref": "#/definitions/models.Ksk"
                },
                "notes": {
                    "type": "string"
                },
                "reliability": {
                    "$ref": "#/definitions/models.Reliability"
                },
                "sector": {
                    "$ref": "#/definitions/models.Sector"
                },
                "street": {
                    "$ref": "#/definitions/models.Street"
                },
                "tgu": {
                    "$ref": "#/definitions/models.Rp"
                },
                "voltage": {
                    "$ref": "#/definitions/models.Voltage"
                }
            }
        },
        "models.AddInputType": {
            "type": "object",
            "properties": {
                "inputtypename": {
                    "type": "string"
                }
            }
        },
        "models.AddKsk": {
            "type": "object",
            "properties": {
                "kskaddress": {
                    "type": "string"
                },
                "kskhead": {
                    "type": "string"
                },
                "kskname": {
                    "type": "string"
                },
                "kskphone": {
                    "type": "string"
                }
            }
        },
        "models.AddObjContract": {
            "type": "object",
            "properties": {
                "contract": {
                    "$ref": "#/definitions/models.Contract"
                },
                "enddate": {
                    "type": "string"
                },
                "object": {
                    "$ref": "#/definitions/models.Object"
                },
                "objtypeid": {
                    "type": "integer"
                },
                "startdate": {
                    "type": "string"
                }
            }
        },
        "models.AddObjLine": {
            "type": "object",
            "properties": {
                "cableresistance": {
                    "$ref": "#/definitions/models.CableResistance"
                },
                "enddate": {
                    "type": "string"
                },
                "linelength": {
                    "type": "number"
                },
                "objid": {
                    "type": "integer"
                },
                "objname": {
                    "type": "string"
                },
                "objtypeid": {
                    "type": "integer"
                },
                "startdate": {
                    "type": "string"
                }
            }
        },
        "models.AddObjStatus": {
            "type": "object",
            "properties": {
                "objstatusname": {
                    "type": "string"
                }
            }
        },
        "models.AddObjTransCurr": {
            "type": "object",
            "properties": {
                "enddate": {
                    "type": "string"
                },
                "objid": {
                    "type": "integer"
                },
                "objname": {
                    "type": "string"
                },
                "objtypeid": {
                    "type": "integer"
                },
                "startdate": {
                    "type": "string"
                },
                "transcurr": {
                    "$ref": "#/definitions/models.TransCurr"
                }
            }
        },
        "models.AddObjTransPwr": {
            "type": "object",
            "properties": {
                "enddate": {
                    "type": "string"
                },
                "objid": {
                    "type": "integer"
                },
                "objname": {
                    "type": "string"
                },
                "objtypeid": {
                    "type": "integer"
                },
                "startdate": {
                    "type": "string"
                },
                "transpwr": {
                    "$ref": "#/definitions/models.TransPwr"
                }
            }
        },
        "models.AddObjTransVolt": {
            "type": "object",
            "properties": {
                "enddate": {
                    "type": "string"
                },
                "objid": {
                    "type": "integer"
                },
                "objname": {
                    "type": "string"
                },
                "objtypeid": {
                    "type": "integer"
                },
                "startdate": {
                    "type": "string"
                },
                "transvolt": {
                    "$ref": "#/definitions/models.TransVolt"
                }
            }
        },
        "models.AddObjType": {
            "type": "object",
            "properties": {
                "objtypename": {
                    "type": "string"
                }
            }
        },
        "models.AddObject": {
            "type": "object",
            "properties": {
                "calculationtype": {
                    "$ref": "#/definitions/models.CalculationType"
                },
                "flatnumber": {
                    "type": "string"
                },
                "house": {
                    "$ref": "#/definitions/models.House"
                },
                "mffid": {
                    "type": "integer"
                },
                "notes": {
                    "type": "string"
                },
                "objectname": {
                    "type": "string"
                },
                "objstatus": {
                    "$ref": "#/definitions/models.ObjStatus"
                },
                "objtype": {
                    "$ref": "#/definitions/models.ObjType"
                },
                "regqty": {
                    "type": "integer"
                },
                "tariffgroup": {
                    "$ref": "#/definitions/models.TariffGroup"
                },
                "uzo": {
                    "$ref": "#/definitions/models.Uzo"
                }
            }
        },
        "models.AddOrderType": {
            "type": "object",
            "properties": {
                "ordertypename": {
                    "type": "string"
                }
            }
        },
        "models.AddOrgInfo": {
            "type": "object",
            "properties": {
                "oiaccnumber": {
                    "type": "string"
                },
                "oiaddr": {
                    "type": "string"
                },
                "oibank": {
                    "$ref": "#/definitions/models.Bank"
                },
                "oibin": {
                    "type": "string"
                },
                "oifname": {
                    "type": "string"
                },
                "oiname": {
                    "type": "string"
                }
            }
        },
        "models.AddPayment": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "bundlenumber": {
                    "type": "integer"
                },
                "cashdesk": {
                    "$ref": "#/definitions/models.Cashdesk"
                },
                "chargetype": {
                    "$ref": "#/definitions/models.ChargeType"
                },
                "contract": {
                    "$ref": "#/definitions/models.Contract"
                },
                "object": {
                    "$ref": "#/definitions/models.Object"
                },
                "paymentdate": {
                    "type": "string"
                },
                "paymenttype": {
                    "$ref": "#/definitions/models.PaymentType"
                }
            }
        },
        "models.AddPaymentType": {
            "type": "object",
            "properties": {
                "paymenttypename": {
                    "type": "string"
                }
            }
        },
        "models.AddPeriod": {
            "type": "object",
            "properties": {
                "enddate": {
                    "type": "string"
                },
                "periodname": {
                    "type": "string"
                },
                "startdate": {
                    "type": "string"
                }
            }
        },
        "models.AddPosition": {
            "type": "object",
            "properties": {
                "positionname": {
                    "type": "string"
                }
            }
        },
        "models.AddPu": {
            "type": "object",
            "properties": {
                "checkinterval": {
                    "type": "integer"
                },
                "devstopped": {
                    "type": "boolean"
                },
                "initialvalue": {
                    "type": "integer"
                },
                "installdate": {
                    "type": "string"
                },
                "object": {
                    "$ref": "#/definitions/models.Object"
                },
                "pid": {
                    "type": "integer"
                },
                "punumber": {
                    "type": "string"
                },
                "puobjecttype": {
                    "type": "integer"
                },
                "putype": {
                    "$ref": "#/definitions/models.PuType"
                },
                "startdate": {
                    "type": "string"
                }
            }
        },
        "models.AddPuType": {
            "type": "object",
            "properties": {
                "putypename": {
                    "type": "string"
                }
            }
        },
        "models.AddPuValueType": {
            "type": "object",
            "properties": {
                "puvaluetypename": {
                    "type": "string"
                }
            }
        },
        "models.AddReason": {
            "type": "object",
            "properties": {
                "reasonname": {
                    "type": "string"
                }
            }
        },
        "models.AddReliability": {
            "type": "object",
            "properties": {
                "reliabilityname": {
                    "type": "string"
                }
            }
        },
        "models.AddRequest": {
            "type": "object",
            "properties": {
                "accept": {
                    "type": "string"
                },
                "act": {
                    "$ref": "#/definitions/models.Act"
                },
                "claimtype": {
                    "$ref": "#/definitions/models.ClaimType"
                },
                "contract": {
                    "$ref": "#/definitions/models.Contract"
                },
                "executive": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "object": {
                    "$ref": "#/definitions/models.Object"
                },
                "requestdate": {
                    "type": "string"
                },
                "requestkind": {
                    "$ref": "#/definitions/models.RequestKind"
                },
                "requestnumber": {
                    "type": "string"
                },
                "requesttype": {
                    "$ref": "#/definitions/models.RequestType"
                },
                "result": {
                    "$ref": "#/definitions/models.Result"
                },
                "servicetype": {
                    "$ref": "#/definitions/models.ServiceType"
                },
                "termdate": {
                    "type": "string"
                }
            }
        },
        "models.AddRequestKind": {
            "type": "object",
            "properties": {
                "requestkindname": {
                    "type": "string"
                }
            }
        },
        "models.AddRequestType": {
            "type": "object",
            "properties": {
                "requestkind": {
                    "$ref": "#/definitions/models.RequestKind"
                },
                "requesttypename": {
                    "type": "string"
                }
            }
        },
        "models.AddResult": {
            "type": "object",
            "properties": {
                "resultname": {
                    "type": "string"
                }
            }
        },
        "models.AddRp": {
            "type": "object",
            "properties": {
                "inputvoltage": {
                    "$ref": "#/definitions/models.Voltage"
                },
                "invnumber": {
                    "type": "string"
                },
                "outputvoltage1": {
                    "$ref": "#/definitions/models.Voltage"
                },
                "outputvoltage2": {
                    "$ref": "#/definitions/models.Voltage"
                },
                "tguname": {
                    "type": "string"
                },
                "tp": {
                    "$ref": "#/definitions/models.Tp"
                }
            }
        },
        "models.AddSeal": {
            "type": "object",
            "properties": {
                "area": {
                    "$ref": "#/definitions/models.Area"
                },
                "issuedate": {
                    "type": "string"
                },
                "packetnumber": {
                    "type": "string"
                },
                "reportdate": {
                    "type": "string"
                },
                "sealcolour": {
                    "$ref": "#/definitions/models.SealColour"
                },
                "sealstatus": {
                    "$ref": "#/definitions/models.SealStatus"
                },
                "sealtype": {
                    "$ref": "#/definitions/models.SealType"
                },
                "staff": {
                    "$ref": "#/definitions/models.Staff"
                }
            }
        },
        "models.AddSealColour": {
            "type": "object",
            "properties": {
                "sealcolourname": {
                    "type": "string"
                }
            }
        },
        "models.AddSealStatus": {
            "type": "object",
            "properties": {
                "sealstatusname": {
                    "type": "string"
                }
            }
        },
        "models.AddSealType": {
            "type": "object",
            "properties": {
                "sealtypename": {
                    "type": "string"
                }
            }
        },
        "models.AddSector": {
            "type": "object",
            "properties": {
                "sectorname": {
                    "type": "string"
                }
            }
        },
        "models.AddServiceType": {
            "type": "object",
            "properties": {
                "servicetypename": {
                    "type": "string"
                }
            }
        },
        "models.AddShutdownType": {
            "type": "object",
            "properties": {
                "shutdowntypename": {
                    "type": "string"
                }
            }
        },
        "models.AddStaff": {
            "type": "object",
            "properties": {
                "notes": {
                    "type": "string"
                },
                "orginfo": {
                    "$ref": "#/definitions/models.OrgInfo"
                },
                "phone": {
                    "type": "string"
                },
                "staffname": {
                    "type": "string"
                }
            }
        },
        "models.AddStreet": {
            "type": "object",
            "properties": {
                "city": {
                    "$ref": "#/definitions/models.City"
                },
                "created": {
                    "type": "string"
                },
                "streetname": {
                    "type": "string"
                }
            }
        },
        "models.AddSubBank": {
            "type": "object",
            "properties": {
                "accnumber": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "bank": {
                    "$ref": "#/definitions/models.Bank"
                },
                "subj": {
                    "$ref": "#/definitions/models.SB"
                }
            }
        },
        "models.AddSubPu": {
            "type": "object",
            "properties": {
                "parid": {
                    "type": "integer"
                },
                "subid": {
                    "type": "integer"
                }
            }
        },
        "models.AddSubType": {
            "type": "object",
            "properties": {
                "subtypedescr": {
                    "type": "string"
                },
                "subtypename": {
                    "type": "string"
                }
            }
        },
        "models.AddSubject": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "job": {
                    "type": "string"
                },
                "jobphone": {
                    "type": "string"
                },
                "mobphone": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "subaccname": {
                    "type": "string"
                },
                "subaccnumber": {
                    "type": "string"
                },
                "subaccpos": {
                    "$ref": "#/definitions/models.Position"
                },
                "subaddr": {
                    "type": "string"
                },
                "subbin": {
                    "type": "string"
                },
                "subdescr": {
                    "type": "string"
                },
                "subheadname": {
                    "type": "string"
                },
                "subheadpos": {
                    "$ref": "#/definitions/models.Position"
                },
                "subname": {
                    "type": "string"
                },
                "subphone": {
                    "type": "string"
                },
                "subphys": {
                    "type": "boolean"
                },
                "substart": {
                    "type": "string"
                },
                "subtype": {
                    "$ref": "#/definitions/models.SubType"
                }
            }
        },
        "models.AddTariff": {
            "type": "object",
            "properties": {
                "norma": {
                    "type": "number"
                },
                "startdate": {
                    "type": "string"
                },
                "tariff": {
                    "type": "number"
                },
                "tariffgroup": {
                    "$ref": "#/definitions/models.TariffGroup"
                },
                "tariffname": {
                    "type": "string"
                }
            }
        },
        "models.AddTariffGroup": {
            "type": "object",
            "properties": {
                "tariffgroupname": {
                    "type": "string"
                }
            }
        },
        "models.AddTgu": {
            "type": "object",
            "properties": {
                "inputvoltage": {
                    "$ref": "#/definitions/models.Voltage"
                },
                "invnumber": {
                    "type": "string"
                },
                "outputvoltage1": {
                    "$ref": "#/definitions/models.Voltage"
                },
                "outputvoltage2": {
                    "$ref": "#/definitions/models.Voltage"
                },
                "pid": {
                    "type": "integer"
                },
                "tguname": {
                    "type": "string"
                },
                "tgutype": {
                    "$ref": "#/definitions/models.TguType"
                }
            }
        },
        "models.AddTp": {
            "type": "object",
            "properties": {
                "grp": {
                    "$ref": "#/definitions/models.GRp"
                },
                "tpname": {
                    "type": "string"
                }
            }
        },
        "models.AddTransCurr": {
            "type": "object",
            "properties": {
                "checkdate": {
                    "type": "string"
                },
                "nextcheckdate": {
                    "type": "string"
                },
                "proddate": {
                    "type": "string"
                },
                "serial1": {
                    "type": "string"
                },
                "serial2": {
                    "type": "string"
                },
                "serial3": {
                    "type": "string"
                },
                "transcurrname": {
                    "type": "string"
                },
                "transtype": {
                    "$ref": "#/definitions/models.TransType"
                }
            }
        },
        "models.AddTransPwr": {
            "type": "object",
            "properties": {
                "tranpwrstype": {
                    "$ref": "#/definitions/models.TransPwrType"
                },
                "transpwrname": {
                    "type": "string"
                }
            }
        },
        "models.AddTransPwrType": {
            "type": "object",
            "properties": {
                "idlinglosspower": {
                    "type": "number"
                },
                "nominalpower": {
                    "type": "integer"
                },
                "shortcircuitpower": {
                    "type": "number"
                },
                "transpwrtypename": {
                    "type": "string"
                }
            }
        },
        "models.AddTransType": {
            "type": "object",
            "properties": {
                "class": {
                    "type": "integer"
                },
                "maxcurr": {
                    "type": "integer"
                },
                "nomcurr": {
                    "type": "integer"
                },
                "ratio": {
                    "type": "integer"
                },
                "transtypename": {
                    "type": "string"
                }
            }
        },
        "models.AddTransVolt": {
            "type": "object",
            "properties": {
                "checkdate": {
                    "type": "string"
                },
                "nextcheckdate": {
                    "type": "string"
                },
                "proddate": {
                    "type": "string"
                },
                "serial1": {
                    "type": "string"
                },
                "serial2": {
                    "type": "string"
                },
                "serial3": {
                    "type": "string"
                },
                "transtype": {
                    "$ref": "#/definitions/models.TransType"
                },
                "transvoltname": {
                    "type": "string"
                }
            }
        },
        "models.AddUser": {
            "type": "object",
            "properties": {
                "changepass": {
                    "type": "boolean"
                },
                "closed": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "lang": {
                    "$ref": "#/definitions/models.Lang"
                },
                "orginfo": {
                    "$ref": "#/definitions/models.OrgInfo"
                },
                "position": {
                    "$ref": "#/definitions/models.Position"
                },
                "userfullname": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.AddUzo": {
            "type": "object",
            "properties": {
                "uzoname": {
                    "type": "string"
                },
                "uzovalue": {
                    "type": "integer"
                }
            }
        },
        "models.AddViolation": {
            "type": "object",
            "properties": {
                "violationname": {
                    "type": "string"
                }
            }
        },
        "models.AddVoltage": {
            "type": "object",
            "properties": {
                "voltagename": {
                    "type": "string"
                },
                "voltagevalue": {
                    "type": "integer"
                }
            }
        },
        "models.Area": {
            "type": "object",
            "properties": {
                "areaname": {
                    "type": "string"
                },
                "areanumber": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.Area_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Area"
                    }
                }
            }
        },
        "models.AskueFile": {
            "type": "object",
            "properties": {
                "askuefile": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "askuetype": {
                    "type": "integer"
                },
                "sheet": {
                    "type": "string"
                }
            }
        },
        "models.AskueLoadRes": {
            "type": "object",
            "properties": {
                "denied": {
                    "type": "integer"
                },
                "processed": {
                    "type": "integer"
                }
            }
        },
        "models.AskueType": {
            "type": "object",
            "properties": {
                "askuetypename": {
                    "type": "string"
                },
                "datecolumn": {
                    "type": "integer"
                },
                "datecolumnarray": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "pucolumn": {
                    "type": "integer"
                },
                "startline": {
                    "type": "integer"
                },
                "valuecolumn": {
                    "type": "integer"
                }
            }
        },
        "models.AskueType_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AskueType"
                    }
                }
            }
        },
        "models.Auth": {
            "type": "object",
            "properties": {
                "acttypes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "create": {
                    "type": "boolean"
                },
                "delete": {
                    "type": "boolean"
                },
                "read": {
                    "type": "boolean"
                },
                "update": {
                    "type": "boolean"
                }
            }
        },
        "models.Balance": {
            "type": "object",
            "properties": {
                "bname": {
                    "type": "string"
                },
                "btypeid": {
                    "type": "integer"
                },
                "btypename": {
                    "type": "string"
                },
                "childcount": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "pid": {
                    "type": "integer"
                },
                "reqid": {
                    "type": "string"
                }
            }
        },
        "models.BalanceTab": {
            "type": "object",
            "properties": {
                "bname": {
                    "type": "string"
                },
                "btypeid": {
                    "type": "integer"
                },
                "btypename": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "pid": {
                    "type": "integer"
                },
                "reqid": {
                    "type": "string"
                },
                "sum": {
                    "type": "number"
                }
            }
        },
        "models.BalanceTab_sum": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "insum": {
                    "type": "number"
                },
                "outsum": {
                    "type": "number"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BalanceTab"
                    }
                }
            }
        },
        "models.Bank": {
            "type": "object",
            "properties": {
                "bankdescr": {
                    "type": "string"
                },
                "bankname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mfo": {
                    "type": "string"
                }
            }
        },
        "models.Bank_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Bank"
                    }
                }
            }
        },
        "models.BuildingType": {
            "type": "object",
            "properties": {
                "buildingtypename": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.BuildingType_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BuildingType"
                    }
                }
            }
        },
        "models.CableResistance": {
            "type": "object",
            "properties": {
                "cableresistancename": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "materialtype": {
                    "type": "boolean"
                },
                "resistance": {
                    "type": "number"
                }
            }
        },
        "models.CableResistance_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CableResistance"
                    }
                }
            }
        },
        "models.CalculationType": {
            "type": "object",
            "properties": {
                "calculationtypename": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.CalculationType_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CalculationType"
                    }
                }
            }
        },
        "models.Cashdesk": {
            "type": "object",
            "properties": {
                "cashdeskname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.Cashdesk_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Cashdesk"
                    }
                }
            }
        },
        "models.Charge": {
            "type": "object",
            "properties": {
                "chargedate": {
                    "type": "string"
                },
                "chargetype": {
                    "$ref": "#/definitions/models.ChargeType"
                },
                "contract": {
                    "$ref": "#/definitions/models.Contract"
                },
                "enddate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lineloss": {
                    "type": "number"
                },
                "object": {
                    "$ref": "#/definitions/models.Object"
                },
                "objtypeid": {
                    "type": "integer"
                },
                "pu": {
                    "$ref": "#/definitions/models.Pu"
                },
                "qty": {
                    "type": "number"
                },
                "startdate": {
                    "type": "string"
                },
                "transloss": {
                    "type": "number"
                }
            }
        },
        "models.ChargeType": {
            "type": "object",
            "properties": {
                "chargetypename": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.ChargeType_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ChargeType"
                    }
                }
            }
        },
        "models.Charge_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Charge"
                    }
                }
            }
        },
        "models.City": {
            "type": "object",
            "properties": {
                "cityname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.City_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.City"
                    }
                }
            }
        },
        "models.ClaimType": {
            "type": "object",
            "properties": {
                "claimtypename": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.ClaimType_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ClaimType"
                    }
                }
            }
        },
        "models.Conclusion": {
            "type": "object",
            "properties": {
                "conclusionname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.Conclusion_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Conclusion"
                    }
                }
            }
        },
        "models.Connector": {
            "type": "object",
            "properties": {
                "connectorname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.Connector_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Connector"
                    }
                }
            }
        },
        "models.Contract": {
            "type": "object",
            "properties": {
                "area": {
                    "$ref": "#/definitions/models.Area"
                },
                "barcode": {
                    "type": "string"
                },
                "consignee": {
                    "$ref": "#/definitions/models.Subject"
                },
                "contractmot": {
                    "$ref": "#/definitions/models.ContractMot"
                },
                "contractnumber": {
                    "type": "string"
                },
                "customer": {
                    "$ref": "#/definitions/models.Subject"
                },
                "customergroup": {
                    "$ref": "#/definitions/models.CustomerGroup"
                },
                "enddate": {
                    "type": "string"
                },
                "eso": {
                    "$ref": "#/definitions/models.Eso"
                },
                "esocontractnumber": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "motnotes": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "personalaccount": {
                    "type": "integer"
                },
                "startdate": {
                    "type": "string"
                }
            }
        },
        "models.ContractMot": {
            "type": "object",
            "properties": {
                "ContractMotName_KZ": {
                    "type": "string"
                },
                "ContractMotName_RU": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.ContractMot_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ContractMot"
                    }
                }
            }
        },
        "models.ContractType": {
            "type": "object",
            "properties": {
                "contracttypename": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.ContractType_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ContractType"
                    }
                }
            }
        },
        "models.Contract_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Contract"
                    }
                }
            }
        },
        "models.CustomerGroup": {
            "type": "object",
            "properties": {
                "customergroupname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.CustomerGroup_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CustomerGroup"
                    }
                }
            }
        },
        "models.DistributionZone": {
            "type": "object",
            "properties": {
                "distributionzonename": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.DistributionZone_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DistributionZone"
                    }
                }
            }
        },
        "models.Equipment": {
            "type": "object",
            "properties": {
                "equipmenttype": {
                    "$ref": "#/definitions/models.EquipmentType"
                },
                "id": {
                    "type": "integer"
                },
                "object": {
                    "$ref": "#/definitions/models.Object"
                },
                "qty": {
                    "type": "integer"
                },
                "workinghours": {
                    "type": "number"
                }
            }
        },
        "models.EquipmentType": {
            "type": "object",
            "properties": {
                "equipmenttypename": {
                    "type": "string"
                },
                "equipmenttypepower": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.EquipmentType_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EquipmentType"
                    }
                }
            }
        },
        "models.Equipment_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Equipment"
                    }
                }
            }
        },
        "models.Eso": {
            "type": "object",
            "properties": {
                "esoname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.Eso_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Eso"
                    }
                }
            }
        },
        "models.FormType": {
            "type": "object",
            "properties": {
                "formtypedescr": {
                    "type": "string"
                },
                "formtypename": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.FormType_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.FormType"
                    }
                }
            }
        },
        "models.GRp": {
            "type": "object",
            "properties": {
                "grpname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.GRp_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GRp"
                    }
                }
            }
        },
        "models.House": {
            "type": "object",
            "properties": {
                "area": {
                    "$ref": "#/definitions/models.Area"
                },
                "buildingnumber": {
                    "type": "string"
                },
                "buildingtype": {
                    "$ref": "#/definitions/models.BuildingType"
                },
                "connector": {
                    "$ref": "#/definitions/models.Connector"
                },
                "housenumber": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "inputtype": {
                    "$ref": "#/definitions/models.InputType"
                },
                "ksk": {
                    "$ref": "#/definitions/models.Ksk"
                },
                "notes": {
                    "type": "string"
                },
                "reliability": {
                    "$ref": "#/definitions/models.Reliability"
                },
                "sector": {
                    "$ref": "#/definitions/models.Sector"
                },
                "street": {
                    "$ref": "#/definitions/models.Street"
                },
                "tgu": {
                    "$ref": "#/definitions/models.Rp"
                },
                "voltage": {
                    "$ref": "#/definitions/models.Voltage"
                }
            }
        },
        "models.House_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.House"
                    }
                }
            }
        },
        "models.IdClose": {
            "type": "object",
            "properties": {
                "closedate": {
                    "type": "string"
                },
                "contractmot": {
                    "$ref": "#/definitions/models.ContractMot"
                },
                "id": {
                    "type": "integer"
                },
                "motnotes": {
                    "type": "string"
                }
            }
        },
        "models.InputType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "inputtypename": {
                    "type": "string"
                }
            }
        },
        "models.InputType_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.InputType"
                    }
                }
            }
        },
        "models.Json_id": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.Json_ids": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "models.Json_sum": {
            "type": "object",
            "properties": {
                "sum": {
                    "type": "number"
                }
            }
        },
        "models.Ksk": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "kskaddress": {
                    "type": "string"
                },
                "kskhead": {
                    "type": "string"
                },
                "kskname": {
                    "type": "string"
                },
                "kskphone": {
                    "type": "string"
                }
            }
        },
        "models.Ksk_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Ksk"
                    }
                }
            }
        },
        "models.Lang": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "langdescr": {
                    "type": "string"
                },
                "langname": {
                    "type": "string"
                }
            }
        },
        "models.ObjContract": {
            "type": "object",
            "properties": {
                "contract": {
                    "$ref": "#/definitions/models.Contract"
                },
                "enddate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "object": {
                    "$ref": "#/definitions/models.Object"
                },
                "objtypeid": {
                    "type": "integer"
                },
                "startdate": {
                    "type": "string"
                }
            }
        },
        "models.ObjContract_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ObjContract"
                    }
                }
            }
        },
        "models.ObjLine": {
            "type": "object",
            "properties": {
                "cableresistance": {
                    "$ref": "#/definitions/models.CableResistance"
                },
                "enddate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "linelength": {
                    "type": "number"
                },
                "objid": {
                    "type": "integer"
                },
                "objname": {
                    "type": "string"
                },
                "objtypeid": {
                    "type": "integer"
                },
                "startdate": {
                    "type": "string"
                }
            }
        },
        "models.ObjLine_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ObjLine"
                    }
                }
            }
        },
        "models.ObjStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "objstatusname": {
                    "type": "string"
                }
            }
        },
        "models.ObjStatus_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ObjStatus"
                    }
                }
            }
        },
        "models.ObjTransCurr": {
            "type": "object",
            "properties": {
                "enddate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "objid": {
                    "type": "integer"
                },
                "objname": {
                    "type": "string"
                },
                "objtypeid": {
                    "type": "integer"
                },
                "startdate": {
                    "type": "string"
                },
                "transcurr": {
                    "$ref": "#/definitions/models.TransCurr"
                }
            }
        },
        "models.ObjTransCurr_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ObjTransCurr"
                    }
                }
            }
        },
        "models.ObjTransPwr": {
            "type": "object",
            "properties": {
                "enddate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "objid": {
                    "type": "integer"
                },
                "objname": {
                    "type": "string"
                },
                "objtypeid": {
                    "type": "integer"
                },
                "startdate": {
                    "type": "string"
                },
                "transpwr": {
                    "$ref": "#/definitions/models.TransPwr"
                }
            }
        },
        "models.ObjTransPwr_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ObjTransPwr"
                    }
                }
            }
        },
        "models.ObjTransVolt": {
            "type": "object",
            "properties": {
                "enddate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "objid": {
                    "type": "integer"
                },
                "objname": {
                    "type": "string"
                },
                "objtypeid": {
                    "type": "integer"
                },
                "startdate": {
                    "type": "string"
                },
                "transvolt": {
                    "$ref": "#/definitions/models.TransVolt"
                }
            }
        },
        "models.ObjTransVolt_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ObjTransVolt"
                    }
                }
            }
        },
        "models.ObjType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "objtypename": {
                    "type": "string"
                }
            }
        },
        "models.ObjType_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ObjType"
                    }
                }
            }
        },
        "models.Object": {
            "type": "object",
            "properties": {
                "calculationtype": {
                    "$ref": "#/definitions/models.CalculationType"
                },
                "flatnumber": {
                    "type": "string"
                },
                "house": {
                    "$ref": "#/definitions/models.House"
                },
                "id": {
                    "type": "integer"
                },
                "mffid": {
                    "type": "integer"
                },
                "notes": {
                    "type": "string"
                },
                "objectname": {
                    "type": "string"
                },
                "objstatus": {
                    "$ref": "#/definitions/models.ObjStatus"
                },
                "objtype": {
                    "$ref": "#/definitions/models.ObjType"
                },
                "regqty": {
                    "type": "integer"
                },
                "tariffgroup": {
                    "$ref": "#/definitions/models.TariffGroup"
                },
                "uzo": {
                    "$ref": "#/definitions/models.Uzo"
                }
            }
        },
        "models.Object_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Object"
                    }
                }
            }
        },
        "models.OrderType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "ordertypename": {
                    "type": "string"
                }
            }
        },
        "models.OrderType_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.OrderType"
                    }
                }
            }
        },
        "models.OrgInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "oiaccnumber": {
                    "type": "string"
                },
                "oiaddr": {
                    "type": "string"
                },
                "oibank": {
                    "$ref": "#/definitions/models.Bank"
                },
                "oibin": {
                    "type": "string"
                },
                "oifname": {
                    "type": "string"
                },
                "oiname": {
                    "type": "string"
                }
            }
        },
        "models.OrgInfo_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.OrgInfo"
                    }
                }
            }
        },
        "models.Payment": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "bundlenumber": {
                    "type": "integer"
                },
                "cashdesk": {
                    "$ref": "#/definitions/models.Cashdesk"
                },
                "chargetype": {
                    "$ref": "#/definitions/models.ChargeType"
                },
                "contract": {
                    "$ref": "#/definitions/models.Contract"
                },
                "id": {
                    "type": "integer"
                },
                "object": {
                    "$ref": "#/definitions/models.Object"
                },
                "paymentdate": {
                    "type": "string"
                },
                "paymenttype": {
                    "$ref": "#/definitions/models.PaymentType"
                }
            }
        },
        "models.PaymentType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "paymenttypename": {
                    "type": "string"
                }
            }
        },
        "models.PaymentType_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PaymentType"
                    }
                }
            }
        },
        "models.Payment_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Payment"
                    }
                }
            }
        },
        "models.Period": {
            "type": "object",
            "properties": {
                "enddate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "periodname": {
                    "type": "string"
                },
                "startdate": {
                    "type": "string"
                }
            }
        },
        "models.Period_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Period"
                    }
                }
            }
        },
        "models.Position": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "positionname": {
                    "type": "string"
                }
            }
        },
        "models.Position_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Position"
                    }
                }
            }
        },
        "models.Pu": {
            "type": "object",
            "properties": {
                "checkinterval": {
                    "type": "integer"
                },
                "devstopped": {
                    "type": "boolean"
                },
                "enddate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "initialvalue": {
                    "type": "integer"
                },
                "installdate": {
                    "type": "string"
                },
                "object": {
                    "$ref": "#/definitions/models.Object"
                },
                "pid": {
                    "type": "integer"
                },
                "punumber": {
                    "type": "string"
                },
                "puobjecttype": {
                    "type": "integer"
                },
                "putype": {
                    "$ref": "#/definitions/models.PuType"
                },
                "startdate": {
                    "type": "string"
                }
            }
        },
        "models.PuType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "putypename": {
                    "type": "string"
                }
            }
        },
        "models.PuType_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PuType"
                    }
                }
            }
        },
        "models.PuValue": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "puid": {
                    "type": "integer"
                },
                "puvalue": {
                    "description": "PuValue   float32 ` + "`" + `json:\"puvalue,string\"` + "`" + ` //float32-\u003estring, struct-\u003ejson",
                    "type": "string"
                },
                "valuedate": {
                    "type": "string"
                }
            }
        },
        "models.PuValueAskue": {
            "type": "object",
            "properties": {
                "notes": {
                    "type": "string"
                },
                "puid": {
                    "type": "integer"
                },
                "punumber": {
                    "type": "string"
                },
                "puvalue": {
                    "type": "number"
                },
                "valid": {
                    "type": "boolean"
                },
                "valuedate": {
                    "type": "string"
                }
            }
        },
        "models.PuValueAskue_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PuValueAskue"
                    }
                }
            }
        },
        "models.PuValueType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "puvaluetypename": {
                    "type": "string"
                }
            }
        },
        "models.PuValueType_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PuValueType"
                    }
                }
            }
        },
        "models.PuValue_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PuValue"
                    }
                }
            }
        },
        "models.Pu_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Pu"
                    }
                }
            }
        },
        "models.Reason": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "reasonname": {
                    "type": "string"
                }
            }
        },
        "models.Reason_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Reason"
                    }
                }
            }
        },
        "models.Reliability": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "reliabilityname": {
                    "type": "string"
                }
            }
        },
        "models.Reliability_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Reliability"
                    }
                }
            }
        },
        "models.Request": {
            "type": "object",
            "properties": {
                "accept": {
                    "type": "string"
                },
                "act": {
                    "$ref": "#/definitions/models.Act"
                },
                "claimtype": {
                    "$ref": "#/definitions/models.ClaimType"
                },
                "contract": {
                    "$ref": "#/definitions/models.Contract"
                },
                "executive": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "notes": {
                    "type": "string"
                },
                "object": {
                    "$ref": "#/definitions/models.Object"
                },
                "requestdate": {
                    "type": "string"
                },
                "requestkind": {
                    "$ref": "#/definitions/models.RequestKind"
                },
                "requestnumber": {
                    "type": "string"
                },
                "requesttype": {
                    "$ref": "#/definitions/models.RequestType"
                },
                "result": {
                    "$ref": "#/definitions/models.Result"
                },
                "servicetype": {
                    "$ref": "#/definitions/models.ServiceType"
                },
                "termdate": {
                    "type": "string"
                }
            }
        },
        "models.RequestKind": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "requestkindname": {
                    "type": "string"
                }
            }
        },
        "models.RequestKind_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RequestKind"
                    }
                }
            }
        },
        "models.RequestType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "requestkind": {
                    "$ref": "#/definitions/models.RequestKind"
                },
                "requesttypename": {
                    "type": "string"
                }
            }
        },
        "models.RequestType_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RequestType"
                    }
                }
            }
        },
        "models.Request_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Request"
                    }
                }
            }
        },
        "models.Result": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "resultname": {
                    "type": "string"
                }
            }
        },
        "models.Result_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Result"
                    }
                }
            }
        },
        "models.Rp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "inputvoltage": {
                    "$ref": "#/definitions/models.Voltage"
                },
                "invnumber": {
                    "type": "string"
                },
                "outputvoltage1": {
                    "$ref": "#/definitions/models.Voltage"
                },
                "outputvoltage2": {
                    "$ref": "#/definitions/models.Voltage"
                },
                "tguname": {
                    "type": "string"
                },
                "tp": {
                    "$ref": "#/definitions/models.Tp"
                }
            }
        },
        "models.Rp_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Rp"
                    }
                }
            }
        },
        "models.SB": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "subname": {
                    "type": "string"
                }
            }
        },
        "models.Seal": {
            "type": "object",
            "properties": {
                "area": {
                    "$ref": "#/definitions/models.Area"
                },
                "id": {
                    "type": "integer"
                },
                "issuedate": {
                    "type": "string"
                },
                "packetnumber": {
                    "type": "string"
                },
                "reportdate": {
                    "type": "string"
                },
                "sealcolour": {
                    "$ref": "#/definitions/models.SealColour"
                },
                "sealstatus": {
                    "$ref": "#/definitions/models.SealStatus"
                },
                "sealtype": {
                    "$ref": "#/definitions/models.SealType"
                },
                "staff": {
                    "$ref": "#/definitions/models.Staff"
                }
            }
        },
        "models.SealColour": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "sealcolourname": {
                    "type": "string"
                }
            }
        },
        "models.SealColour_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SealColour"
                    }
                }
            }
        },
        "models.SealStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "sealstatusname": {
                    "type": "string"
                }
            }
        },
        "models.SealStatus_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SealStatus"
                    }
                }
            }
        },
        "models.SealType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "sealtypename": {
                    "type": "string"
                }
            }
        },
        "models.SealType_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SealType"
                    }
                }
            }
        },
        "models.Seal_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Seal"
                    }
                }
            }
        },
        "models.Sector": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "sectorname": {
                    "type": "string"
                }
            }
        },
        "models.Sector_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Sector"
                    }
                }
            }
        },
        "models.ServiceType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "servicetypename": {
                    "type": "string"
                }
            }
        },
        "models.ServiceType_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ServiceType"
                    }
                }
            }
        },
        "models.ShutdownType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "shutdowntypename": {
                    "type": "string"
                }
            }
        },
        "models.ShutdownType_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ShutdownType"
                    }
                }
            }
        },
        "models.Staff": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "notes": {
                    "type": "string"
                },
                "orginfo": {
                    "$ref": "#/definitions/models.OrgInfo"
                },
                "phone": {
                    "type": "string"
                },
                "staffname": {
                    "type": "string"
                }
            }
        },
        "models.Staff_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Staff"
                    }
                }
            }
        },
        "models.Street": {
            "type": "object",
            "properties": {
                "city": {
                    "$ref": "#/definitions/models.City"
                },
                "closed": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "streetname": {
                    "type": "string"
                }
            }
        },
        "models.StreetClose": {
            "type": "object",
            "properties": {
                "close": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.Street_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Street"
                    }
                }
            }
        },
        "models.SubBank": {
            "type": "object",
            "properties": {
                "accnumber": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "bank": {
                    "$ref": "#/definitions/models.Bank"
                },
                "id": {
                    "type": "integer"
                },
                "subj": {
                    "$ref": "#/definitions/models.SB"
                }
            }
        },
        "models.SubBank_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SubBank"
                    }
                }
            }
        },
        "models.SubPu": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "parid": {
                    "type": "integer"
                },
                "subid": {
                    "type": "integer"
                }
            }
        },
        "models.SubPu_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SubPu"
                    }
                }
            }
        },
        "models.SubType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "subtypedescr": {
                    "type": "string"
                },
                "subtypename": {
                    "type": "string"
                }
            }
        },
        "models.SubType_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SubType"
                    }
                }
            }
        },
        "models.Subject": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "job": {
                    "type": "string"
                },
                "jobphone": {
                    "type": "string"
                },
                "mobphone": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "subaccname": {
                    "type": "string"
                },
                "subaccnumber": {
                    "type": "string"
                },
                "subaccpos": {
                    "$ref": "#/definitions/models.Position"
                },
                "subaddr": {
                    "type": "string"
                },
                "subbin": {
                    "type": "string"
                },
                "subdescr": {
                    "type": "string"
                },
                "subheadname": {
                    "type": "string"
                },
                "subheadpos": {
                    "$ref": "#/definitions/models.Position"
                },
                "subname": {
                    "type": "string"
                },
                "subphone": {
                    "type": "string"
                },
                "subphys": {
                    "type": "boolean"
                },
                "substart": {
                    "type": "string"
                },
                "subtype": {
                    "$ref": "#/definitions/models.SubType"
                }
            }
        },
        "models.SubjectClose": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "subclose": {
                    "type": "string"
                }
            }
        },
        "models.Subject_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Subject"
                    }
                }
            }
        },
        "models.Tariff": {
            "type": "object",
            "properties": {
                "enddate": {
                    "description": "*string correct scan null data!",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "norma": {
                    "type": "number"
                },
                "startdate": {
                    "type": "string"
                },
                "tariff": {
                    "type": "number"
                },
                "tariffgroup": {
                    "$ref": "#/definitions/models.TariffGroup"
                },
                "tariffname": {
                    "type": "string"
                }
            }
        },
        "models.TariffGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "tariffgroupname": {
                    "type": "string"
                }
            }
        },
        "models.TariffGroup_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TariffGroup"
                    }
                }
            }
        },
        "models.Tariff_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tariff"
                    }
                }
            }
        },
        "models.Tgu": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "inputvoltage": {
                    "$ref": "#/definitions/models.Voltage"
                },
                "invnumber": {
                    "type": "string"
                },
                "outputvoltage1": {
                    "$ref": "#/definitions/models.Voltage"
                },
                "outputvoltage2": {
                    "$ref": "#/definitions/models.Voltage"
                },
                "pid": {
                    "type": "integer"
                },
                "tguname": {
                    "type": "string"
                },
                "tgutype": {
                    "$ref": "#/definitions/models.TguType"
                }
            }
        },
        "models.TguType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "tgutypename": {
                    "type": "string"
                }
            }
        },
        "models.Tgu_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tgu"
                    }
                }
            }
        },
        "models.Tp": {
            "type": "object",
            "properties": {
                "grp": {
                    "$ref": "#/definitions/models.GRp"
                },
                "id": {
                    "type": "integer"
                },
                "tpname": {
                    "type": "string"
                }
            }
        },
        "models.Tp_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tp"
                    }
                }
            }
        },
        "models.TransCurr": {
            "type": "object",
            "properties": {
                "checkdate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nextcheckdate": {
                    "type": "string"
                },
                "proddate": {
                    "type": "string"
                },
                "serial1": {
                    "type": "string"
                },
                "serial2": {
                    "type": "string"
                },
                "serial3": {
                    "type": "string"
                },
                "transcurrname": {
                    "type": "string"
                },
                "transtype": {
                    "$ref": "#/definitions/models.TransType"
                }
            }
        },
        "models.TransCurr_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TransCurr"
                    }
                }
            }
        },
        "models.TransPwr": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "tranpwrstype": {
                    "$ref": "#/definitions/models.TransPwrType"
                },
                "transpwrname": {
                    "type": "string"
                }
            }
        },
        "models.TransPwrType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "idlinglosspower": {
                    "type": "number"
                },
                "nominalpower": {
                    "type": "integer"
                },
                "shortcircuitpower": {
                    "type": "number"
                },
                "transpwrtypename": {
                    "type": "string"
                }
            }
        },
        "models.TransPwrType_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TransPwrType"
                    }
                }
            }
        },
        "models.TransPwr_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TransPwr"
                    }
                }
            }
        },
        "models.TransType": {
            "type": "object",
            "properties": {
                "class": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "maxcurr": {
                    "type": "integer"
                },
                "nomcurr": {
                    "type": "integer"
                },
                "ratio": {
                    "type": "integer"
                },
                "transtypename": {
                    "type": "string"
                }
            }
        },
        "models.TransType_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TransType"
                    }
                }
            }
        },
        "models.TransVolt": {
            "type": "object",
            "properties": {
                "checkdate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nextcheckdate": {
                    "type": "string"
                },
                "proddate": {
                    "type": "string"
                },
                "serial1": {
                    "type": "string"
                },
                "serial2": {
                    "type": "string"
                },
                "serial3": {
                    "type": "string"
                },
                "transtype": {
                    "$ref": "#/definitions/models.TransType"
                },
                "transvoltname": {
                    "type": "string"
                }
            }
        },
        "models.TransVolt_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TransVolt"
                    }
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "changepass": {
                    "type": "boolean"
                },
                "closed": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lang": {
                    "$ref": "#/definitions/models.Lang"
                },
                "orginfo": {
                    "$ref": "#/definitions/models.OrgInfo"
                },
                "position": {
                    "$ref": "#/definitions/models.Position"
                },
                "userfullname": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.User_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                }
            }
        },
        "models.Uzo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "uzoname": {
                    "type": "string"
                },
                "uzovalue": {
                    "type": "integer"
                }
            }
        },
        "models.Uzo_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Uzo"
                    }
                }
            }
        },
        "models.Violation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "violationname": {
                    "type": "string"
                }
            }
        },
        "models.Violation_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Violation"
                    }
                }
            }
        },
        "models.Voltage": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "voltagename": {
                    "type": "string"
                },
                "voltagevalue": {
                    "type": "integer"
                }
            }
        },
        "models.Voltage_count": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/models.Auth"
                },
                "count": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Voltage"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InVzZXIxIiwicGFzc3dvcmQiOiJ1c2VyMSJ9.-qgJjYhayo7CT1YD1xLB36Xytf1HprRBeLbi5tZcOPE",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Billing Backend Server",
	Description:      "This is a backend server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
