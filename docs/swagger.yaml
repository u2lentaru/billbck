basePath: /
definitions:
  models.Act:
    properties:
      actdate:
        type: string
      activated:
        type: string
      actnumber:
        type: string
      acttype:
        $ref: '#/definitions/models.ActType'
      id:
        type: integer
      notes:
        type: string
      object:
        $ref: '#/definitions/models.Object'
      staff:
        $ref: '#/definitions/models.Staff'
    type: object
  models.Act_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Act'
        type: array
    type: object
  models.ActDetail:
    properties:
      act:
        $ref: '#/definitions/models.Act'
      actdetaildate:
        type: string
      adpuvalue:
        type: number
      checkinterval:
        type: integer
      conclusion:
        $ref: '#/definitions/models.Conclusion'
      conclusionnumber:
        type: string
      customer:
        type: string
      customerphone:
        type: string
      customerpos:
        type: string
      devstopped:
        type: boolean
      enddate:
        type: string
      id:
        type: integer
      initialvalue:
        type: integer
      installdate:
        type: string
      notes:
        type: string
      pid:
        type: integer
      puid:
        type: integer
      punumber:
        type: string
      putype:
        $ref: '#/definitions/models.PuType'
      reason:
        $ref: '#/definitions/models.Reason'
      seal:
        $ref: '#/definitions/models.Seal'
      sealdate:
        type: string
      sealnumber:
        type: string
      shutdowntype:
        $ref: '#/definitions/models.ShutdownType'
      startdate:
        type: string
      violation:
        $ref: '#/definitions/models.Violation'
    type: object
  models.ActDetail_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.ActDetail'
        type: array
    type: object
  models.ActType:
    properties:
      acttypename:
        type: string
      id:
        type: integer
    type: object
  models.ActType_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.ActType'
        type: array
    type: object
  models.AddAct:
    properties:
      actdate:
        type: string
      activated:
        type: string
      actnumber:
        type: string
      acttype:
        $ref: '#/definitions/models.ActType'
      notes:
        type: string
      object:
        $ref: '#/definitions/models.Object'
      staff:
        $ref: '#/definitions/models.Staff'
    type: object
  models.AddActDetail:
    properties:
      act:
        $ref: '#/definitions/models.Act'
      actdetaildate:
        type: string
      adpuvalue:
        type: number
      checkinterval:
        type: integer
      conclusion:
        $ref: '#/definitions/models.Conclusion'
      conclusionnumber:
        type: string
      customer:
        type: string
      customerphone:
        type: string
      customerpos:
        type: string
      devstopped:
        type: boolean
      enddate:
        type: string
      initialvalue:
        type: integer
      installdate:
        type: string
      notes:
        type: string
      pid:
        type: integer
      puid:
        type: integer
      punumber:
        type: string
      putype:
        $ref: '#/definitions/models.PuType'
      reason:
        $ref: '#/definitions/models.Reason'
      seal:
        $ref: '#/definitions/models.Seal'
      sealdate:
        type: string
      sealnumber:
        type: string
      shutdowntype:
        $ref: '#/definitions/models.ShutdownType'
      startdate:
        type: string
      violation:
        $ref: '#/definitions/models.Violation'
    type: object
  models.AddActType:
    properties:
      acttypename:
        type: string
    type: object
  models.AddArea:
    properties:
      areaname:
        type: string
      areanumber:
        type: string
    type: object
  models.AddAskueType:
    properties:
      askuetypename:
        type: string
      datecolumn:
        type: integer
      datecolumnarray:
        type: string
      pucolumn:
        type: integer
      startline:
        type: integer
      valuecolumn:
        type: integer
    type: object
  models.AddBank:
    properties:
      bankdescr:
        type: string
      bankname:
        type: string
      mfo:
        type: string
    type: object
  models.AddBuildingType:
    properties:
      buildingtypename:
        type: string
    type: object
  models.AddCableResistance:
    properties:
      cableresistancename:
        type: string
      materialtype:
        type: boolean
      resistance:
        type: number
    type: object
  models.AddCalculationType:
    properties:
      calculationtypename:
        type: string
    type: object
  models.AddCashdesk:
    properties:
      cashdeskname:
        type: string
    type: object
  models.AddCharge:
    properties:
      chargedate:
        type: string
      chargetype:
        $ref: '#/definitions/models.ChargeType'
      contract:
        $ref: '#/definitions/models.Contract'
      enddate:
        type: string
      lineloss:
        type: number
      object:
        $ref: '#/definitions/models.Object'
      objtypeid:
        type: integer
      pu:
        $ref: '#/definitions/models.Pu'
      qty:
        type: number
      startdate:
        type: string
      transloss:
        type: number
    type: object
  models.AddChargeType:
    properties:
      chargetypename:
        type: string
    type: object
  models.AddCity:
    properties:
      cityname:
        type: string
    type: object
  models.AddClaimType:
    properties:
      claimtypename:
        type: string
    type: object
  models.AddConclusion:
    properties:
      conclusionname:
        type: string
    type: object
  models.AddConnector:
    properties:
      connectorname:
        type: string
    type: object
  models.AddContract:
    properties:
      area:
        $ref: '#/definitions/models.Area'
      barcode:
        type: string
      consignee:
        $ref: '#/definitions/models.Subject'
      contractmot:
        $ref: '#/definitions/models.ContractMot'
      contractnumber:
        type: string
      customer:
        $ref: '#/definitions/models.Subject'
      customergroup:
        $ref: '#/definitions/models.CustomerGroup'
      enddate:
        type: string
      eso:
        $ref: '#/definitions/models.Eso'
      esocontractnumber:
        type: string
      motnotes:
        type: string
      notes:
        type: string
      personalaccount:
        type: integer
      startdate:
        type: string
    type: object
  models.AddContractMot:
    properties:
      ContractMotName_KZ:
        type: string
      ContractMotName_RU:
        type: string
    type: object
  models.AddContractType:
    properties:
      contracttypename:
        type: string
    type: object
  models.AddCustomerGroup:
    properties:
      customergroupname:
        type: string
    type: object
  models.AddDistributionZone:
    properties:
      distributionzonename:
        type: string
    type: object
  models.AddEquipment:
    properties:
      equipmenttype:
        $ref: '#/definitions/models.EquipmentType'
      object:
        $ref: '#/definitions/models.Object'
      qty:
        type: integer
      workinghours:
        type: number
    type: object
  models.AddEquipmentType:
    properties:
      equipmenttypename:
        type: string
      equipmenttypepower:
        type: number
    type: object
  models.AddEso:
    properties:
      esoname:
        type: string
    type: object
  models.AddGRp:
    properties:
      grpname:
        type: string
    type: object
  models.AddHouse:
    properties:
      area:
        $ref: '#/definitions/models.Area'
      buildingnumber:
        type: string
      buildingtype:
        $ref: '#/definitions/models.BuildingType'
      connector:
        $ref: '#/definitions/models.Connector'
      housenumber:
        type: string
      inputtype:
        $ref: '#/definitions/models.InputType'
      ksk:
        $ref: '#/definitions/models.Ksk'
      notes:
        type: string
      reliability:
        $ref: '#/definitions/models.Reliability'
      sector:
        $ref: '#/definitions/models.Sector'
      street:
        $ref: '#/definitions/models.Street'
      tgu:
        $ref: '#/definitions/models.Rp'
      voltage:
        $ref: '#/definitions/models.Voltage'
    type: object
  models.AddInputType:
    properties:
      inputtypename:
        type: string
    type: object
  models.AddKsk:
    properties:
      kskaddress:
        type: string
      kskhead:
        type: string
      kskname:
        type: string
      kskphone:
        type: string
    type: object
  models.AddObjContract:
    properties:
      contract:
        $ref: '#/definitions/models.Contract'
      enddate:
        type: string
      object:
        $ref: '#/definitions/models.Object'
      objtypeid:
        type: integer
      startdate:
        type: string
    type: object
  models.AddObjLine:
    properties:
      cableresistance:
        $ref: '#/definitions/models.CableResistance'
      enddate:
        type: string
      linelength:
        type: number
      objid:
        type: integer
      objname:
        type: string
      objtypeid:
        type: integer
      startdate:
        type: string
    type: object
  models.AddObjStatus:
    properties:
      objstatusname:
        type: string
    type: object
  models.AddObjTransCurr:
    properties:
      enddate:
        type: string
      objid:
        type: integer
      objname:
        type: string
      objtypeid:
        type: integer
      startdate:
        type: string
      transcurr:
        $ref: '#/definitions/models.TransCurr'
    type: object
  models.AddObjTransPwr:
    properties:
      enddate:
        type: string
      objid:
        type: integer
      objname:
        type: string
      objtypeid:
        type: integer
      startdate:
        type: string
      transpwr:
        $ref: '#/definitions/models.TransPwr'
    type: object
  models.AddObjTransVolt:
    properties:
      enddate:
        type: string
      objid:
        type: integer
      objname:
        type: string
      objtypeid:
        type: integer
      startdate:
        type: string
      transvolt:
        $ref: '#/definitions/models.TransVolt'
    type: object
  models.AddObjType:
    properties:
      objtypename:
        type: string
    type: object
  models.AddObject:
    properties:
      calculationtype:
        $ref: '#/definitions/models.CalculationType'
      flatnumber:
        type: string
      house:
        $ref: '#/definitions/models.House'
      mffid:
        type: integer
      notes:
        type: string
      objectname:
        type: string
      objstatus:
        $ref: '#/definitions/models.ObjStatus'
      objtype:
        $ref: '#/definitions/models.ObjType'
      regqty:
        type: integer
      tariffgroup:
        $ref: '#/definitions/models.TariffGroup'
      uzo:
        $ref: '#/definitions/models.Uzo'
    type: object
  models.AddOrderType:
    properties:
      ordertypename:
        type: string
    type: object
  models.AddOrgInfo:
    properties:
      oiaccnumber:
        type: string
      oiaddr:
        type: string
      oibank:
        $ref: '#/definitions/models.Bank'
      oibin:
        type: string
      oifname:
        type: string
      oiname:
        type: string
    type: object
  models.AddPayment:
    properties:
      amount:
        type: number
      bundlenumber:
        type: integer
      cashdesk:
        $ref: '#/definitions/models.Cashdesk'
      chargetype:
        $ref: '#/definitions/models.ChargeType'
      contract:
        $ref: '#/definitions/models.Contract'
      object:
        $ref: '#/definitions/models.Object'
      paymentdate:
        type: string
      paymenttype:
        $ref: '#/definitions/models.PaymentType'
    type: object
  models.AddPaymentType:
    properties:
      paymenttypename:
        type: string
    type: object
  models.AddPeriod:
    properties:
      enddate:
        type: string
      periodname:
        type: string
      startdate:
        type: string
    type: object
  models.AddPosition:
    properties:
      positionname:
        type: string
    type: object
  models.AddPu:
    properties:
      checkinterval:
        type: integer
      devstopped:
        type: boolean
      initialvalue:
        type: integer
      installdate:
        type: string
      object:
        $ref: '#/definitions/models.Object'
      pid:
        type: integer
      punumber:
        type: string
      puobjecttype:
        type: integer
      putype:
        $ref: '#/definitions/models.PuType'
      startdate:
        type: string
    type: object
  models.AddPuType:
    properties:
      putypename:
        type: string
    type: object
  models.AddPuValueType:
    properties:
      puvaluetypename:
        type: string
    type: object
  models.AddReason:
    properties:
      reasonname:
        type: string
    type: object
  models.AddReliability:
    properties:
      reliabilityname:
        type: string
    type: object
  models.AddRequest:
    properties:
      accept:
        type: string
      act:
        $ref: '#/definitions/models.Act'
      claimtype:
        $ref: '#/definitions/models.ClaimType'
      contract:
        $ref: '#/definitions/models.Contract'
      executive:
        type: string
      notes:
        type: string
      object:
        $ref: '#/definitions/models.Object'
      requestdate:
        type: string
      requestkind:
        $ref: '#/definitions/models.RequestKind'
      requestnumber:
        type: string
      requesttype:
        $ref: '#/definitions/models.RequestType'
      result:
        $ref: '#/definitions/models.Result'
      servicetype:
        $ref: '#/definitions/models.ServiceType'
      termdate:
        type: string
    type: object
  models.AddRequestKind:
    properties:
      requestkindname:
        type: string
    type: object
  models.AddRequestType:
    properties:
      requestkind:
        $ref: '#/definitions/models.RequestKind'
      requesttypename:
        type: string
    type: object
  models.AddResult:
    properties:
      resultname:
        type: string
    type: object
  models.AddRp:
    properties:
      inputvoltage:
        $ref: '#/definitions/models.Voltage'
      invnumber:
        type: string
      outputvoltage1:
        $ref: '#/definitions/models.Voltage'
      outputvoltage2:
        $ref: '#/definitions/models.Voltage'
      tguname:
        type: string
      tp:
        $ref: '#/definitions/models.Tp'
    type: object
  models.AddSeal:
    properties:
      area:
        $ref: '#/definitions/models.Area'
      issuedate:
        type: string
      packetnumber:
        type: string
      reportdate:
        type: string
      sealcolour:
        $ref: '#/definitions/models.SealColour'
      sealstatus:
        $ref: '#/definitions/models.SealStatus'
      sealtype:
        $ref: '#/definitions/models.SealType'
      staff:
        $ref: '#/definitions/models.Staff'
    type: object
  models.AddSealColour:
    properties:
      sealcolourname:
        type: string
    type: object
  models.AddSealStatus:
    properties:
      sealstatusname:
        type: string
    type: object
  models.AddSealType:
    properties:
      sealtypename:
        type: string
    type: object
  models.AddSector:
    properties:
      sectorname:
        type: string
    type: object
  models.AddServiceType:
    properties:
      servicetypename:
        type: string
    type: object
  models.AddShutdownType:
    properties:
      shutdowntypename:
        type: string
    type: object
  models.AddStaff:
    properties:
      notes:
        type: string
      orginfo:
        $ref: '#/definitions/models.OrgInfo'
      phone:
        type: string
      staffname:
        type: string
    type: object
  models.AddStreet:
    properties:
      city:
        $ref: '#/definitions/models.City'
      created:
        type: string
      streetname:
        type: string
    type: object
  models.AddSubBank:
    properties:
      accnumber:
        type: string
      active:
        type: boolean
      bank:
        $ref: '#/definitions/models.Bank'
      subj:
        $ref: '#/definitions/models.SB'
    type: object
  models.AddSubPu:
    properties:
      parid:
        type: integer
      subid:
        type: integer
    type: object
  models.AddSubType:
    properties:
      subtypedescr:
        type: string
      subtypename:
        type: string
    type: object
  models.AddSubject:
    properties:
      email:
        type: string
      job:
        type: string
      jobphone:
        type: string
      mobphone:
        type: string
      notes:
        type: string
      subaccname:
        type: string
      subaccnumber:
        type: string
      subaccpos:
        $ref: '#/definitions/models.Position'
      subaddr:
        type: string
      subbin:
        type: string
      subdescr:
        type: string
      subheadname:
        type: string
      subheadpos:
        $ref: '#/definitions/models.Position'
      subname:
        type: string
      subphone:
        type: string
      subphys:
        type: boolean
      substart:
        type: string
      subtype:
        $ref: '#/definitions/models.SubType'
    type: object
  models.AddTariff:
    properties:
      norma:
        type: number
      startdate:
        type: string
      tariff:
        type: number
      tariffgroup:
        $ref: '#/definitions/models.TariffGroup'
      tariffname:
        type: string
    type: object
  models.AddTariffGroup:
    properties:
      tariffgroupname:
        type: string
    type: object
  models.AddTgu:
    properties:
      inputvoltage:
        $ref: '#/definitions/models.Voltage'
      invnumber:
        type: string
      outputvoltage1:
        $ref: '#/definitions/models.Voltage'
      outputvoltage2:
        $ref: '#/definitions/models.Voltage'
      pid:
        type: integer
      tguname:
        type: string
      tgutype:
        $ref: '#/definitions/models.TguType'
    type: object
  models.AddTp:
    properties:
      grp:
        $ref: '#/definitions/models.GRp'
      tpname:
        type: string
    type: object
  models.AddTransCurr:
    properties:
      checkdate:
        type: string
      nextcheckdate:
        type: string
      proddate:
        type: string
      serial1:
        type: string
      serial2:
        type: string
      serial3:
        type: string
      transcurrname:
        type: string
      transtype:
        $ref: '#/definitions/models.TransType'
    type: object
  models.AddTransPwr:
    properties:
      tranpwrstype:
        $ref: '#/definitions/models.TransPwrType'
      transpwrname:
        type: string
    type: object
  models.AddTransPwrType:
    properties:
      idlinglosspower:
        type: number
      nominalpower:
        type: integer
      shortcircuitpower:
        type: number
      transpwrtypename:
        type: string
    type: object
  models.AddTransType:
    properties:
      class:
        type: integer
      maxcurr:
        type: integer
      nomcurr:
        type: integer
      ratio:
        type: integer
      transtypename:
        type: string
    type: object
  models.AddTransVolt:
    properties:
      checkdate:
        type: string
      nextcheckdate:
        type: string
      proddate:
        type: string
      serial1:
        type: string
      serial2:
        type: string
      serial3:
        type: string
      transtype:
        $ref: '#/definitions/models.TransType'
      transvoltname:
        type: string
    type: object
  models.AddUser:
    properties:
      changepass:
        type: boolean
      closed:
        type: string
      created:
        type: string
      lang:
        $ref: '#/definitions/models.Lang'
      orginfo:
        $ref: '#/definitions/models.OrgInfo'
      position:
        $ref: '#/definitions/models.Position'
      userfullname:
        type: string
      username:
        type: string
    type: object
  models.AddUzo:
    properties:
      uzoname:
        type: string
      uzovalue:
        type: integer
    type: object
  models.AddViolation:
    properties:
      violationname:
        type: string
    type: object
  models.AddVoltage:
    properties:
      voltagename:
        type: string
      voltagevalue:
        type: integer
    type: object
  models.Area:
    properties:
      areaname:
        type: string
      areanumber:
        type: string
      id:
        type: integer
    type: object
  models.Area_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Area'
        type: array
    type: object
  models.AskueFile:
    properties:
      askuefile:
        items:
          type: integer
        type: array
      askuetype:
        type: integer
      sheet:
        type: string
    type: object
  models.AskueLoadRes:
    properties:
      denied:
        type: integer
      processed:
        type: integer
    type: object
  models.AskueType:
    properties:
      askuetypename:
        type: string
      datecolumn:
        type: integer
      datecolumnarray:
        type: string
      id:
        type: integer
      pucolumn:
        type: integer
      startline:
        type: integer
      valuecolumn:
        type: integer
    type: object
  models.AskueType_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.AskueType'
        type: array
    type: object
  models.Auth:
    properties:
      acttypes:
        items:
          type: integer
        type: array
      create:
        type: boolean
      delete:
        type: boolean
      read:
        type: boolean
      update:
        type: boolean
    type: object
  models.Balance:
    properties:
      bname:
        type: string
      btypeid:
        type: integer
      btypename:
        type: string
      childcount:
        type: integer
      id:
        type: integer
      pid:
        type: integer
      reqid:
        type: string
    type: object
  models.BalanceTab:
    properties:
      bname:
        type: string
      btypeid:
        type: integer
      btypename:
        type: string
      id:
        type: integer
      pid:
        type: integer
      reqid:
        type: string
      sum:
        type: number
    type: object
  models.BalanceTab_sum:
    properties:
      count:
        type: integer
      insum:
        type: number
      outsum:
        type: number
      values:
        items:
          $ref: '#/definitions/models.BalanceTab'
        type: array
    type: object
  models.Bank:
    properties:
      bankdescr:
        type: string
      bankname:
        type: string
      id:
        type: integer
      mfo:
        type: string
    type: object
  models.Bank_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Bank'
        type: array
    type: object
  models.BuildingType:
    properties:
      buildingtypename:
        type: string
      id:
        type: integer
    type: object
  models.BuildingType_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.BuildingType'
        type: array
    type: object
  models.CableResistance:
    properties:
      cableresistancename:
        type: string
      id:
        type: integer
      materialtype:
        type: boolean
      resistance:
        type: number
    type: object
  models.CableResistance_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.CableResistance'
        type: array
    type: object
  models.CalculationType:
    properties:
      calculationtypename:
        type: string
      id:
        type: integer
    type: object
  models.CalculationType_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.CalculationType'
        type: array
    type: object
  models.Cashdesk:
    properties:
      cashdeskname:
        type: string
      id:
        type: integer
    type: object
  models.Cashdesk_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Cashdesk'
        type: array
    type: object
  models.Charge:
    properties:
      chargedate:
        type: string
      chargetype:
        $ref: '#/definitions/models.ChargeType'
      contract:
        $ref: '#/definitions/models.Contract'
      enddate:
        type: string
      id:
        type: integer
      lineloss:
        type: number
      object:
        $ref: '#/definitions/models.Object'
      objtypeid:
        type: integer
      pu:
        $ref: '#/definitions/models.Pu'
      qty:
        type: number
      startdate:
        type: string
      transloss:
        type: number
    type: object
  models.Charge_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Charge'
        type: array
    type: object
  models.ChargeType:
    properties:
      chargetypename:
        type: string
      id:
        type: integer
    type: object
  models.ChargeType_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.ChargeType'
        type: array
    type: object
  models.City:
    properties:
      cityname:
        type: string
      id:
        type: integer
    type: object
  models.City_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.City'
        type: array
    type: object
  models.ClaimType:
    properties:
      claimtypename:
        type: string
      id:
        type: integer
    type: object
  models.ClaimType_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.ClaimType'
        type: array
    type: object
  models.Conclusion:
    properties:
      conclusionname:
        type: string
      id:
        type: integer
    type: object
  models.Conclusion_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Conclusion'
        type: array
    type: object
  models.Connector:
    properties:
      connectorname:
        type: string
      id:
        type: integer
    type: object
  models.Connector_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Connector'
        type: array
    type: object
  models.Contract:
    properties:
      area:
        $ref: '#/definitions/models.Area'
      barcode:
        type: string
      consignee:
        $ref: '#/definitions/models.Subject'
      contractmot:
        $ref: '#/definitions/models.ContractMot'
      contractnumber:
        type: string
      customer:
        $ref: '#/definitions/models.Subject'
      customergroup:
        $ref: '#/definitions/models.CustomerGroup'
      enddate:
        type: string
      eso:
        $ref: '#/definitions/models.Eso'
      esocontractnumber:
        type: string
      id:
        type: integer
      motnotes:
        type: string
      notes:
        type: string
      personalaccount:
        type: integer
      startdate:
        type: string
    type: object
  models.Contract_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Contract'
        type: array
    type: object
  models.ContractMot:
    properties:
      ContractMotName_KZ:
        type: string
      ContractMotName_RU:
        type: string
      id:
        type: integer
    type: object
  models.ContractMot_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.ContractMot'
        type: array
    type: object
  models.ContractType:
    properties:
      contracttypename:
        type: string
      id:
        type: integer
    type: object
  models.ContractType_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.ContractType'
        type: array
    type: object
  models.CustomerGroup:
    properties:
      customergroupname:
        type: string
      id:
        type: integer
    type: object
  models.CustomerGroup_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.CustomerGroup'
        type: array
    type: object
  models.DistributionZone:
    properties:
      distributionzonename:
        type: string
      id:
        type: integer
    type: object
  models.DistributionZone_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.DistributionZone'
        type: array
    type: object
  models.Equipment:
    properties:
      equipmenttype:
        $ref: '#/definitions/models.EquipmentType'
      id:
        type: integer
      object:
        $ref: '#/definitions/models.Object'
      qty:
        type: integer
      workinghours:
        type: number
    type: object
  models.Equipment_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Equipment'
        type: array
    type: object
  models.EquipmentType:
    properties:
      equipmenttypename:
        type: string
      equipmenttypepower:
        type: number
      id:
        type: integer
    type: object
  models.EquipmentType_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.EquipmentType'
        type: array
    type: object
  models.Eso:
    properties:
      esoname:
        type: string
      id:
        type: integer
    type: object
  models.Eso_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Eso'
        type: array
    type: object
  models.FormType:
    properties:
      formtypedescr:
        type: string
      formtypename:
        type: string
      id:
        type: integer
    type: object
  models.FormType_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.FormType'
        type: array
    type: object
  models.GRp:
    properties:
      grpname:
        type: string
      id:
        type: integer
    type: object
  models.GRp_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.GRp'
        type: array
    type: object
  models.House:
    properties:
      area:
        $ref: '#/definitions/models.Area'
      buildingnumber:
        type: string
      buildingtype:
        $ref: '#/definitions/models.BuildingType'
      connector:
        $ref: '#/definitions/models.Connector'
      housenumber:
        type: string
      id:
        type: integer
      inputtype:
        $ref: '#/definitions/models.InputType'
      ksk:
        $ref: '#/definitions/models.Ksk'
      notes:
        type: string
      reliability:
        $ref: '#/definitions/models.Reliability'
      sector:
        $ref: '#/definitions/models.Sector'
      street:
        $ref: '#/definitions/models.Street'
      tgu:
        $ref: '#/definitions/models.Rp'
      voltage:
        $ref: '#/definitions/models.Voltage'
    type: object
  models.House_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.House'
        type: array
    type: object
  models.IdClose:
    properties:
      closedate:
        type: string
      contractmot:
        $ref: '#/definitions/models.ContractMot'
      id:
        type: integer
      motnotes:
        type: string
    type: object
  models.InputType:
    properties:
      id:
        type: integer
      inputtypename:
        type: string
    type: object
  models.InputType_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.InputType'
        type: array
    type: object
  models.Json_id:
    properties:
      id:
        type: integer
    type: object
  models.Json_ids:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  models.Json_sum:
    properties:
      sum:
        type: number
    type: object
  models.Ksk:
    properties:
      id:
        type: integer
      kskaddress:
        type: string
      kskhead:
        type: string
      kskname:
        type: string
      kskphone:
        type: string
    type: object
  models.Ksk_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Ksk'
        type: array
    type: object
  models.Lang:
    properties:
      id:
        type: integer
      langdescr:
        type: string
      langname:
        type: string
    type: object
  models.ObjContract:
    properties:
      contract:
        $ref: '#/definitions/models.Contract'
      enddate:
        type: string
      id:
        type: integer
      object:
        $ref: '#/definitions/models.Object'
      objtypeid:
        type: integer
      startdate:
        type: string
    type: object
  models.ObjContract_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.ObjContract'
        type: array
    type: object
  models.ObjLine:
    properties:
      cableresistance:
        $ref: '#/definitions/models.CableResistance'
      enddate:
        type: string
      id:
        type: integer
      linelength:
        type: number
      objid:
        type: integer
      objname:
        type: string
      objtypeid:
        type: integer
      startdate:
        type: string
    type: object
  models.ObjLine_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.ObjLine'
        type: array
    type: object
  models.ObjStatus:
    properties:
      id:
        type: integer
      objstatusname:
        type: string
    type: object
  models.ObjStatus_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.ObjStatus'
        type: array
    type: object
  models.ObjTransCurr:
    properties:
      enddate:
        type: string
      id:
        type: integer
      objid:
        type: integer
      objname:
        type: string
      objtypeid:
        type: integer
      startdate:
        type: string
      transcurr:
        $ref: '#/definitions/models.TransCurr'
    type: object
  models.ObjTransCurr_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.ObjTransCurr'
        type: array
    type: object
  models.ObjTransPwr:
    properties:
      enddate:
        type: string
      id:
        type: integer
      objid:
        type: integer
      objname:
        type: string
      objtypeid:
        type: integer
      startdate:
        type: string
      transpwr:
        $ref: '#/definitions/models.TransPwr'
    type: object
  models.ObjTransPwr_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.ObjTransPwr'
        type: array
    type: object
  models.ObjTransVolt:
    properties:
      enddate:
        type: string
      id:
        type: integer
      objid:
        type: integer
      objname:
        type: string
      objtypeid:
        type: integer
      startdate:
        type: string
      transvolt:
        $ref: '#/definitions/models.TransVolt'
    type: object
  models.ObjTransVolt_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.ObjTransVolt'
        type: array
    type: object
  models.ObjType:
    properties:
      id:
        type: integer
      objtypename:
        type: string
    type: object
  models.ObjType_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.ObjType'
        type: array
    type: object
  models.Object:
    properties:
      calculationtype:
        $ref: '#/definitions/models.CalculationType'
      flatnumber:
        type: string
      house:
        $ref: '#/definitions/models.House'
      id:
        type: integer
      mffid:
        type: integer
      notes:
        type: string
      objectname:
        type: string
      objstatus:
        $ref: '#/definitions/models.ObjStatus'
      objtype:
        $ref: '#/definitions/models.ObjType'
      regqty:
        type: integer
      tariffgroup:
        $ref: '#/definitions/models.TariffGroup'
      uzo:
        $ref: '#/definitions/models.Uzo'
    type: object
  models.Object_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Object'
        type: array
    type: object
  models.OrderType:
    properties:
      id:
        type: integer
      ordertypename:
        type: string
    type: object
  models.OrderType_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.OrderType'
        type: array
    type: object
  models.OrgInfo:
    properties:
      id:
        type: integer
      oiaccnumber:
        type: string
      oiaddr:
        type: string
      oibank:
        $ref: '#/definitions/models.Bank'
      oibin:
        type: string
      oifname:
        type: string
      oiname:
        type: string
    type: object
  models.OrgInfo_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.OrgInfo'
        type: array
    type: object
  models.Payment:
    properties:
      amount:
        type: number
      bundlenumber:
        type: integer
      cashdesk:
        $ref: '#/definitions/models.Cashdesk'
      chargetype:
        $ref: '#/definitions/models.ChargeType'
      contract:
        $ref: '#/definitions/models.Contract'
      id:
        type: integer
      object:
        $ref: '#/definitions/models.Object'
      paymentdate:
        type: string
      paymenttype:
        $ref: '#/definitions/models.PaymentType'
    type: object
  models.Payment_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Payment'
        type: array
    type: object
  models.PaymentType:
    properties:
      id:
        type: integer
      paymenttypename:
        type: string
    type: object
  models.PaymentType_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.PaymentType'
        type: array
    type: object
  models.Period:
    properties:
      enddate:
        type: string
      id:
        type: integer
      periodname:
        type: string
      startdate:
        type: string
    type: object
  models.Period_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Period'
        type: array
    type: object
  models.Position:
    properties:
      id:
        type: integer
      positionname:
        type: string
    type: object
  models.Position_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Position'
        type: array
    type: object
  models.Pu:
    properties:
      checkinterval:
        type: integer
      devstopped:
        type: boolean
      enddate:
        type: string
      id:
        type: integer
      initialvalue:
        type: integer
      installdate:
        type: string
      object:
        $ref: '#/definitions/models.Object'
      pid:
        type: integer
      punumber:
        type: string
      puobjecttype:
        type: integer
      putype:
        $ref: '#/definitions/models.PuType'
      startdate:
        type: string
    type: object
  models.Pu_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Pu'
        type: array
    type: object
  models.PuType:
    properties:
      id:
        type: integer
      putypename:
        type: string
    type: object
  models.PuType_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.PuType'
        type: array
    type: object
  models.PuValue:
    properties:
      id:
        type: integer
      puid:
        type: integer
      puvalue:
        description: PuValue   float32 `json:"puvalue,string"` //float32->string,
          struct->json
        type: string
      valuedate:
        type: string
    type: object
  models.PuValue_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.PuValue'
        type: array
    type: object
  models.PuValueAskue:
    properties:
      notes:
        type: string
      puid:
        type: integer
      punumber:
        type: string
      puvalue:
        type: number
      valid:
        type: boolean
      valuedate:
        type: string
    type: object
  models.PuValueAskue_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.PuValueAskue'
        type: array
    type: object
  models.PuValueType:
    properties:
      id:
        type: integer
      puvaluetypename:
        type: string
    type: object
  models.PuValueType_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.PuValueType'
        type: array
    type: object
  models.Reason:
    properties:
      id:
        type: integer
      reasonname:
        type: string
    type: object
  models.Reason_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Reason'
        type: array
    type: object
  models.Reliability:
    properties:
      id:
        type: integer
      reliabilityname:
        type: string
    type: object
  models.Reliability_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Reliability'
        type: array
    type: object
  models.Request:
    properties:
      accept:
        type: string
      act:
        $ref: '#/definitions/models.Act'
      claimtype:
        $ref: '#/definitions/models.ClaimType'
      contract:
        $ref: '#/definitions/models.Contract'
      executive:
        type: string
      id:
        type: integer
      notes:
        type: string
      object:
        $ref: '#/definitions/models.Object'
      requestdate:
        type: string
      requestkind:
        $ref: '#/definitions/models.RequestKind'
      requestnumber:
        type: string
      requesttype:
        $ref: '#/definitions/models.RequestType'
      result:
        $ref: '#/definitions/models.Result'
      servicetype:
        $ref: '#/definitions/models.ServiceType'
      termdate:
        type: string
    type: object
  models.Request_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Request'
        type: array
    type: object
  models.RequestKind:
    properties:
      id:
        type: integer
      requestkindname:
        type: string
    type: object
  models.RequestKind_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.RequestKind'
        type: array
    type: object
  models.RequestType:
    properties:
      id:
        type: integer
      requestkind:
        $ref: '#/definitions/models.RequestKind'
      requesttypename:
        type: string
    type: object
  models.RequestType_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.RequestType'
        type: array
    type: object
  models.Result:
    properties:
      id:
        type: integer
      resultname:
        type: string
    type: object
  models.Result_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Result'
        type: array
    type: object
  models.Rp:
    properties:
      id:
        type: integer
      inputvoltage:
        $ref: '#/definitions/models.Voltage'
      invnumber:
        type: string
      outputvoltage1:
        $ref: '#/definitions/models.Voltage'
      outputvoltage2:
        $ref: '#/definitions/models.Voltage'
      tguname:
        type: string
      tp:
        $ref: '#/definitions/models.Tp'
    type: object
  models.Rp_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Rp'
        type: array
    type: object
  models.SB:
    properties:
      id:
        type: integer
      subname:
        type: string
    type: object
  models.Seal:
    properties:
      area:
        $ref: '#/definitions/models.Area'
      id:
        type: integer
      issuedate:
        type: string
      packetnumber:
        type: string
      reportdate:
        type: string
      sealcolour:
        $ref: '#/definitions/models.SealColour'
      sealstatus:
        $ref: '#/definitions/models.SealStatus'
      sealtype:
        $ref: '#/definitions/models.SealType'
      staff:
        $ref: '#/definitions/models.Staff'
    type: object
  models.Seal_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Seal'
        type: array
    type: object
  models.SealColour:
    properties:
      id:
        type: integer
      sealcolourname:
        type: string
    type: object
  models.SealColour_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.SealColour'
        type: array
    type: object
  models.SealStatus:
    properties:
      id:
        type: integer
      sealstatusname:
        type: string
    type: object
  models.SealStatus_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.SealStatus'
        type: array
    type: object
  models.SealType:
    properties:
      id:
        type: integer
      sealtypename:
        type: string
    type: object
  models.SealType_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.SealType'
        type: array
    type: object
  models.Sector:
    properties:
      id:
        type: integer
      sectorname:
        type: string
    type: object
  models.Sector_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Sector'
        type: array
    type: object
  models.ServiceType:
    properties:
      id:
        type: integer
      servicetypename:
        type: string
    type: object
  models.ServiceType_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.ServiceType'
        type: array
    type: object
  models.ShutdownType:
    properties:
      id:
        type: integer
      shutdowntypename:
        type: string
    type: object
  models.ShutdownType_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.ShutdownType'
        type: array
    type: object
  models.Staff:
    properties:
      id:
        type: integer
      notes:
        type: string
      orginfo:
        $ref: '#/definitions/models.OrgInfo'
      phone:
        type: string
      staffname:
        type: string
    type: object
  models.Staff_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Staff'
        type: array
    type: object
  models.Street:
    properties:
      city:
        $ref: '#/definitions/models.City'
      closed:
        type: string
      created:
        type: string
      id:
        type: integer
      streetname:
        type: string
    type: object
  models.Street_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Street'
        type: array
    type: object
  models.StreetClose:
    properties:
      close:
        type: string
      id:
        type: integer
    type: object
  models.SubBank:
    properties:
      accnumber:
        type: string
      active:
        type: boolean
      bank:
        $ref: '#/definitions/models.Bank'
      id:
        type: integer
      subj:
        $ref: '#/definitions/models.SB'
    type: object
  models.SubBank_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.SubBank'
        type: array
    type: object
  models.SubPu:
    properties:
      id:
        type: integer
      parid:
        type: integer
      subid:
        type: integer
    type: object
  models.SubPu_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.SubPu'
        type: array
    type: object
  models.SubType:
    properties:
      id:
        type: integer
      subtypedescr:
        type: string
      subtypename:
        type: string
    type: object
  models.SubType_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.SubType'
        type: array
    type: object
  models.Subject:
    properties:
      email:
        type: string
      id:
        type: integer
      job:
        type: string
      jobphone:
        type: string
      mobphone:
        type: string
      notes:
        type: string
      subaccname:
        type: string
      subaccnumber:
        type: string
      subaccpos:
        $ref: '#/definitions/models.Position'
      subaddr:
        type: string
      subbin:
        type: string
      subdescr:
        type: string
      subheadname:
        type: string
      subheadpos:
        $ref: '#/definitions/models.Position'
      subname:
        type: string
      subphone:
        type: string
      subphys:
        type: boolean
      substart:
        type: string
      subtype:
        $ref: '#/definitions/models.SubType'
    type: object
  models.Subject_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Subject'
        type: array
    type: object
  models.SubjectClose:
    properties:
      id:
        type: integer
      subclose:
        type: string
    type: object
  models.Tariff:
    properties:
      enddate:
        description: '*string correct scan null data!'
        type: string
      id:
        type: integer
      norma:
        type: number
      startdate:
        type: string
      tariff:
        type: number
      tariffgroup:
        $ref: '#/definitions/models.TariffGroup'
      tariffname:
        type: string
    type: object
  models.Tariff_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Tariff'
        type: array
    type: object
  models.TariffGroup:
    properties:
      id:
        type: integer
      tariffgroupname:
        type: string
    type: object
  models.TariffGroup_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.TariffGroup'
        type: array
    type: object
  models.Tgu:
    properties:
      id:
        type: integer
      inputvoltage:
        $ref: '#/definitions/models.Voltage'
      invnumber:
        type: string
      outputvoltage1:
        $ref: '#/definitions/models.Voltage'
      outputvoltage2:
        $ref: '#/definitions/models.Voltage'
      pid:
        type: integer
      tguname:
        type: string
      tgutype:
        $ref: '#/definitions/models.TguType'
    type: object
  models.Tgu_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Tgu'
        type: array
    type: object
  models.TguType:
    properties:
      id:
        type: integer
      tgutypename:
        type: string
    type: object
  models.Tp:
    properties:
      grp:
        $ref: '#/definitions/models.GRp'
      id:
        type: integer
      tpname:
        type: string
    type: object
  models.Tp_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Tp'
        type: array
    type: object
  models.TransCurr:
    properties:
      checkdate:
        type: string
      id:
        type: integer
      nextcheckdate:
        type: string
      proddate:
        type: string
      serial1:
        type: string
      serial2:
        type: string
      serial3:
        type: string
      transcurrname:
        type: string
      transtype:
        $ref: '#/definitions/models.TransType'
    type: object
  models.TransCurr_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.TransCurr'
        type: array
    type: object
  models.TransPwr:
    properties:
      id:
        type: integer
      tranpwrstype:
        $ref: '#/definitions/models.TransPwrType'
      transpwrname:
        type: string
    type: object
  models.TransPwr_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.TransPwr'
        type: array
    type: object
  models.TransPwrType:
    properties:
      id:
        type: integer
      idlinglosspower:
        type: number
      nominalpower:
        type: integer
      shortcircuitpower:
        type: number
      transpwrtypename:
        type: string
    type: object
  models.TransPwrType_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.TransPwrType'
        type: array
    type: object
  models.TransType:
    properties:
      class:
        type: integer
      id:
        type: integer
      maxcurr:
        type: integer
      nomcurr:
        type: integer
      ratio:
        type: integer
      transtypename:
        type: string
    type: object
  models.TransType_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.TransType'
        type: array
    type: object
  models.TransVolt:
    properties:
      checkdate:
        type: string
      id:
        type: integer
      nextcheckdate:
        type: string
      proddate:
        type: string
      serial1:
        type: string
      serial2:
        type: string
      serial3:
        type: string
      transtype:
        $ref: '#/definitions/models.TransType'
      transvoltname:
        type: string
    type: object
  models.TransVolt_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.TransVolt'
        type: array
    type: object
  models.User:
    properties:
      changepass:
        type: boolean
      closed:
        type: string
      created:
        type: string
      id:
        type: integer
      lang:
        $ref: '#/definitions/models.Lang'
      orginfo:
        $ref: '#/definitions/models.OrgInfo'
      position:
        $ref: '#/definitions/models.Position'
      userfullname:
        type: string
      username:
        type: string
    type: object
  models.User_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
  models.Uzo:
    properties:
      id:
        type: integer
      uzoname:
        type: string
      uzovalue:
        type: integer
    type: object
  models.Uzo_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Uzo'
        type: array
    type: object
  models.Violation:
    properties:
      id:
        type: integer
      violationname:
        type: string
    type: object
  models.Violation_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Violation'
        type: array
    type: object
  models.Voltage:
    properties:
      id:
        type: integer
      voltagename:
        type: string
      voltagevalue:
        type: integer
    type: object
  models.Voltage_count:
    properties:
      auth:
        $ref: '#/definitions/models.Auth'
      count:
        type: integer
      values:
        items:
          $ref: '#/definitions/models.Voltage'
        type: array
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a backend server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Billing Backend Server
  version: "1.0"
paths:
  /actdetails:
    get:
      description: get act details list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: actid search pattern
        in: query
        name: actid
        type: integer
      - description: order by {punumber|installdate}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ActDetail_count'
            type: array
        "500":
          description: ""
      summary: List act details
      tags:
      - actdetails
  /actdetails/{id}:
    get:
      description: get act detail
      parameters:
      - description: Act detail by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ActDetail_count'
            type: array
        "500":
          description: ""
      summary: Get act detail
      tags:
      - actdetails
  /actdetails_add:
    post:
      consumes:
      - application/json
      description: add act detail
      parameters:
      - description: 'New act detail. Significant params: Act.Id, PuId, SealNumber,
          AdPuValue, ActDetailDate, PuNumber, InstallDate, CheckInterval, InitialValue,
          DevStopped, Startdate, Enddate, Pid, Seal.Id, SealDate, Notes, PuType.Id,
          Conclusion.Id, ConclusionNumber, ShutdownType.Id, CustomerPhone, CustomerPos,
          Reason.Id, Violation.Id, Customer'
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddActDetail'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add act detail
      tags:
      - actdetails
  /actdetails_del:
    post:
      consumes:
      - application/json
      description: delete act details
      parameters:
      - description: Delete act details
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete act details
      tags:
      - actdetails
  /actdetails_upd:
    post:
      consumes:
      - application/json
      description: update act detail
      parameters:
      - description: 'Update act detail. Significant params: Id, Act.Id, PuId, SealNumber,
          AdPuValue, ActDetailDate, PuNumber, InstallDate, CheckInterval, InitialValue,
          DevStopped, Startdate, Enddate, Pid, Seal.Id, SealDate, Notes, PuType.Id,
          Conclusion.Id, ConclusionNumber, ShutdownType.Id, CustomerPhone, CustomerPos,
          Reason.Id, Violation.Id, Customer'
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.ActDetail'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update act detail
      tags:
      - actdetails
  /acts:
    get:
      description: get act list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: actnumber search pattern
        in: query
        name: actnumber
        type: string
      - description: objectname search pattern
        in: query
        name: objectname
        type: string
      - description: objectid search pattern
        in: query
        name: objectid
        type: integer
      - description: order by {actnumber|objectname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Act_count'
            type: array
        "500":
          description: ""
      summary: List acts
      tags:
      - acts
  /acts/{id}:
    get:
      description: get act
      parameters:
      - description: Act by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Act_count'
            type: array
        "500":
          description: ""
      summary: Get act
      tags:
      - acts
  /acts_activate:
    get:
      description: act activation
      parameters:
      - description: actid
        in: query
        name: actid
        required: true
        type: integer
      - description: activation date
        in: query
        name: activationdate
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Act activation
      tags:
      - acts
  /acts_add:
    post:
      consumes:
      - application/json
      description: add act
      parameters:
      - description: 'New act. Significant params: ActType.Id, ActNumber, ActDate,
          Object.Id, Staff.Id, Notes'
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddAct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add act
      tags:
      - acts
  /acts_del:
    post:
      consumes:
      - application/json
      description: delete acts
      parameters:
      - description: Delete acts
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete acts
      tags:
      - acts
  /acts_upd:
    post:
      consumes:
      - application/json
      description: update act
      parameters:
      - description: 'Update act. Significant params: Id, ActType.Id, ActNumber, ActDate,
          Object.Id, Staff.Id, Notes'
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Act'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update act
      tags:
      - acts
  /acttypes:
    get:
      description: get acttype list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: acttypename search pattern
        in: query
        name: acttypename
        type: string
      - description: order by {id|acttypename}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ActType_count'
            type: array
        "500":
          description: ""
      summary: List acttypes
      tags:
      - acttypes
  /acttypes/{id}:
    get:
      description: get acttype
      parameters:
      - description: ActType by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ActType_count'
            type: array
        "500":
          description: ""
      summary: Get acttype
      tags:
      - acttypes
  /acttypes_add:
    post:
      consumes:
      - application/json
      description: add acttype
      parameters:
      - description: New acttype
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddActType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add acttype
      tags:
      - acttypes
  /acttypes_del:
    post:
      consumes:
      - application/json
      description: delete acttypes
      parameters:
      - description: Delete acttypes
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete acttypes
      tags:
      - acttypes
  /acttypes_upd:
    post:
      consumes:
      - application/json
      description: update acttype
      parameters:
      - description: Update acttype
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.ActType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update acttype
      tags:
      - acttypes
  /areas:
    get:
      description: get areas
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: areanumber search pattern
        in: query
        name: areanumber
        type: string
      - description: areaname search pattern
        in: query
        name: areaname
        type: string
      - description: order by {areanumber|areaname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Area_count'
            type: array
        "500":
          description: ""
      summary: List areas
      tags:
      - areas
  /areas/{id}:
    get:
      description: get area
      parameters:
      - description: Area by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Area_count'
            type: array
        "500":
          description: ""
      summary: Get area
      tags:
      - areas
  /areas_add:
    post:
      consumes:
      - application/json
      description: add area
      parameters:
      - description: New area
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddArea'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add area
      tags:
      - areas
  /areas_del:
    post:
      consumes:
      - application/json
      description: delete areas
      parameters:
      - description: Delete areas
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete areas
      tags:
      - areas
  /areas_upd:
    post:
      consumes:
      - application/json
      description: update area
      parameters:
      - description: Update area
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Area'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update area
      tags:
      - areas
  /askuetypes:
    get:
      description: get askuetypes list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: askuetypename search pattern
        in: query
        name: askuetypename
        type: string
      - description: order by {id|askuetypename}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CableResistance_count'
            type: array
        "500":
          description: ""
      summary: List askuetypes
      tags:
      - askuetypes
  /askuetypes/{id}:
    get:
      description: get askuetype
      parameters:
      - description: AskueType by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.AskueType_count'
            type: array
        "500":
          description: ""
      summary: Get askuetype
      tags:
      - askuetypes
  /askuetypes_add:
    post:
      consumes:
      - application/json
      description: add askuetype
      parameters:
      - description: 'New askuetype. Significant params: AskueTypeName, StartLine,
          PuColumn, ValueColumn, DateColumn, DateColumnArray(n)'
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddAskueType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add askuetype
      tags:
      - askuetypes
  /askuetypes_del:
    post:
      consumes:
      - application/json
      description: delete askuetypes
      parameters:
      - description: Delete askuetypes
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete askuetypes
      tags:
      - askuetypes
  /askuetypes_upd:
    post:
      consumes:
      - application/json
      description: update askuetype
      parameters:
      - description: 'Update askuetype. Significant params: Id, AskueTypeName, StartLine,
          PuColumn, ValueColumn, DateColumn, DateColumnArray(n)'
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.AskueType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update askuetype
      tags:
      - askuetypes
  /balance:
    get:
      description: get balance nodes
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: Balance nodes by pid
        in: query
        name: pid
        required: true
        type: integer
      - description: Balance node type id
        in: query
        name: tid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Balance'
            type: array
        "500":
          description: ""
      summary: Get balance nodes
      tags:
      - balance
  /balance/{id}/{tid}:
    get:
      description: get balance node
      parameters:
      - description: Balance node by id
        in: path
        name: id
        required: true
        type: integer
      - description: Balance node type id
        in: path
        name: tid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Balance'
            type: array
        "500":
          description: ""
      summary: Get balance node
      tags:
      - balance
  /balance_branch:
    get:
      description: get Get branch by node id and type
      parameters:
      - description: Node id
        in: query
        name: id
        required: true
        type: integer
      - description: Node type id
        in: query
        name: tid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.BalanceTab_sum'
            type: array
      summary: Get branch by node id and type
      tags:
      - balance
  /balance_sum:
    get:
      description: get balance by node id, type and period
      parameters:
      - description: Balance node id
        in: query
        name: id
        required: true
        type: integer
      - description: Balance node type id
        in: query
        name: tid
        required: true
        type: integer
      - description: Balance startdate. Default first day of previous month
        in: query
        name: sd
        type: string
      - description: Balance enddate. Default last day of previous month
        in: query
        name: ed
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_sum'
            type: array
      summary: Get balance by node id, type and period
      tags:
      - balance
  /balance_sum0:
    get:
      description: get endpoints balance by node id, type and period
      parameters:
      - description: Main node id
        in: query
        name: id
        required: true
        type: integer
      - description: Main node type id
        in: query
        name: tid
        required: true
        type: integer
      - description: Balance startdate. Default first day of previous month
        in: query
        name: sd
        type: string
      - description: Balance enddate. Default last day of previous month
        in: query
        name: ed
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_sum'
            type: array
      summary: Get endpoints balance by node id, type and period
      tags:
      - balance
  /balance_sum1:
    get:
      description: get balance 1 level down by node id, type and period
      parameters:
      - description: Main node id
        in: query
        name: id
        required: true
        type: integer
      - description: Main node type id
        in: query
        name: tid
        required: true
        type: integer
      - description: Balance startdate. Default first day of previous month
        in: query
        name: sd
        type: string
      - description: Balance enddate. Default last day of previous month
        in: query
        name: ed
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_sum'
            type: array
      summary: Get balance 1 level down by node id, type and period
      tags:
      - balance
  /balance_tab0:
    get:
      description: get endpoints balance table by node id, type and period
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: Main node id
        in: query
        name: id
        required: true
        type: integer
      - description: Main node type id
        in: query
        name: tid
        required: true
        type: integer
      - description: Balance startdate. Default first day of previous month
        in: query
        name: sd
        type: string
      - description: Balance enddate. Default last day of previous month
        in: query
        name: ed
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.BalanceTab_sum'
            type: array
      summary: Get endpoints balance table by node id, type and period
      tags:
      - balance
  /balance_tab1:
    get:
      description: get balance table 1 level down by node id, type and period
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: Main node id
        in: query
        name: id
        required: true
        type: integer
      - description: Main node type id
        in: query
        name: tid
        required: true
        type: integer
      - description: Balance startdate. Default first day of previous month
        in: query
        name: sd
        type: string
      - description: Balance enddate. Default last day of previous month
        in: query
        name: ed
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.BalanceTab_sum'
            type: array
      summary: Get balance table 1 level down by node id, type and period
      tags:
      - balance
  /banks:
    get:
      description: Get banks
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: bankname search pattern
        in: query
        name: bankname
        type: string
      - description: bankdescr search pattern
        in: query
        name: bankdescr
        type: string
      - description: order by {bankname|bankdescr}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Bank_count'
            type: array
        "500":
          description: ""
      summary: List banks
      tags:
      - banks
  /banks/{id}:
    get:
      description: Get bank
      parameters:
      - description: Bank by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Bank_count'
            type: array
        "500":
          description: ""
      summary: Get bank
      tags:
      - banks
  /banks_add:
    post:
      consumes:
      - application/json
      description: Add bank
      parameters:
      - description: New bank
        in: body
        name: ab
        required: true
        schema:
          $ref: '#/definitions/models.AddBank'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add bank
      tags:
      - banks
  /banks_del:
    post:
      consumes:
      - application/json
      description: Delete banks
      parameters:
      - description: Delete banks
        in: body
        name: db
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete banks
      tags:
      - banks
  /banks_upd:
    post:
      consumes:
      - application/json
      description: Update bank
      parameters:
      - description: Update bank
        in: body
        name: ub
        required: true
        schema:
          $ref: '#/definitions/models.Bank'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update bank
      tags:
      - banks
  /building_types:
    get:
      description: get building types
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: buildingtypename search pattern
        in: query
        name: buildingtypename
        type: string
      - description: order by {id|buildingtypename}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.BuildingType_count'
            type: array
        "500":
          description: ""
      summary: List building types
      tags:
      - building types
  /building_types/{id}:
    get:
      description: get building type
      parameters:
      - description: Building type by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.BuildingType_count'
            type: array
        "500":
          description: ""
      summary: Get building type
      tags:
      - building types
  /building_types_add:
    post:
      consumes:
      - application/json
      description: add building type
      parameters:
      - description: New building type
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddBuildingType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add building type
      tags:
      - building types
  /building_types_del:
    post:
      consumes:
      - application/json
      description: delete building types
      parameters:
      - description: Delete building types
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete building types
      tags:
      - building types
  /building_types_upd:
    post:
      consumes:
      - application/json
      description: update building type
      parameters:
      - description: Update building type
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.BuildingType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update building type
      tags:
      - building types
  /cableresistances:
    get:
      description: get cableresistance list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: cableresistancename search pattern
        in: query
        name: cableresistancename
        type: string
      - description: order by {id|cableresistancename}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CableResistance_count'
        "500":
          description: ""
      summary: List cableresistances
      tags:
      - cableresistances
  /cableresistances/{id}:
    get:
      description: get cableresistance
      parameters:
      - description: CableResistance by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CableResistance_count'
        "500":
          description: ""
      summary: Get cableresistance
      tags:
      - cableresistances
  /cableresistances_add:
    post:
      consumes:
      - application/json
      description: add cableresistance
      parameters:
      - description: New cableresistance
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddCableResistance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Json_id'
        "500":
          description: ""
      summary: Add cableresistance
      tags:
      - cableresistances
  /cableresistances_del:
    post:
      consumes:
      - application/json
      description: delete cableresistances
      parameters:
      - description: Delete cableresistances
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Json_ids'
        "500":
          description: ""
      summary: Delete cableresistances
      tags:
      - cableresistances
  /cableresistances_upd:
    post:
      consumes:
      - application/json
      description: update cableresistance
      parameters:
      - description: Update cableresistance
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.CableResistance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Json_id'
        "500":
          description: ""
      summary: Update cableresistance
      tags:
      - cableresistances
  /calculationtypes:
    get:
      description: get calculationtype list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: calculationtypename search pattern
        in: query
        name: calculationtypename
        type: string
      - description: order by {id|calculationtypename}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CalculationType_count'
            type: array
        "500":
          description: ""
      summary: List calculationtypes
      tags:
      - calculationtypes
  /calculationtypes/{id}:
    get:
      description: get calculationtype
      parameters:
      - description: CalculationType by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CalculationType_count'
            type: array
        "500":
          description: ""
      summary: Get calculationtype
      tags:
      - calculationtypes
  /calculationtypes_add:
    post:
      consumes:
      - application/json
      description: add calculationtype
      parameters:
      - description: New calculationtype
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddCalculationType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add calculationtype
      tags:
      - calculationtypes
  /calculationtypes_del:
    post:
      consumes:
      - application/json
      description: delete calculationtypes
      parameters:
      - description: Delete calculationtypes
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete calculationtypes
      tags:
      - calculationtypes
  /calculationtypes_upd:
    post:
      consumes:
      - application/json
      description: update calculationtype
      parameters:
      - description: Update calculationtype
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.CalculationType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update calculationtype
      tags:
      - calculationtypes
  /cashdesks:
    get:
      description: get cashdesk list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: cashdeskname search pattern
        in: query
        name: cashdeskname
        type: string
      - description: order by {id|cashdeskname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Cashdesk_count'
            type: array
        "500":
          description: ""
      summary: List cashdesks
      tags:
      - cashdesks
  /cashdesks/{id}:
    get:
      description: get cashdesk
      parameters:
      - description: Cashdesk by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Cashdesk_count'
            type: array
        "500":
          description: ""
      summary: Get cashdesk
      tags:
      - cashdesks
  /cashdesks_add:
    post:
      consumes:
      - application/json
      description: add cashdesk
      parameters:
      - description: New cashdesk
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddCashdesk'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add cashdesk
      tags:
      - cashdesks
  /cashdesks_del:
    post:
      consumes:
      - application/json
      description: delete cashdesks
      parameters:
      - description: Delete cashdesks
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete cashdesks
      tags:
      - cashdesks
  /cashdesks_upd:
    post:
      consumes:
      - application/json
      description: update cashdesk
      parameters:
      - description: Update cashdesk
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Cashdesk'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update cashdesk
      tags:
      - cashdesks
  /charges:
    get:
      description: get charge list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: contractnumber search pattern
        in: query
        name: contractnumber
        type: string
      - description: object id
        in: query
        name: oid
        type: string
      - description: order by {id|chargedate}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Charge_count'
            type: array
        "500":
          description: ""
      summary: List charges
      tags:
      - charges
  /charges/{id}:
    get:
      description: get charge
      parameters:
      - description: Charge by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Charge_count'
            type: array
        "500":
          description: ""
      summary: Get charge
      tags:
      - charges
  /charges_add:
    post:
      consumes:
      - application/json
      description: add charge
      parameters:
      - description: 'New charge. Significant params: ChargeDate, Contract.Id, Object.Id,
          ObjTypeId, Pu.Id, ChargeType.Id, Qty, TransLoss, Lineloss, Startdate, Enddate'
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddCharge'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add charge
      tags:
      - charges
  /charges_del:
    post:
      consumes:
      - application/json
      description: delete charges
      parameters:
      - description: Delete charges
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete charges
      tags:
      - charges
  /charges_run/{id}:
    get:
      description: charge run
      parameters:
      - description: Charge run by period id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Charge run by period id
      tags:
      - charges
  /charges_upd:
    post:
      consumes:
      - application/json
      description: update charge
      parameters:
      - description: 'Update charge. Significant params: Id, ChargeDate, Contract.Id,
          Object.Id, ObjTypeId, Pu.Id, ChargeType.Id, Qty, TransLoss, Lineloss, Startdate,
          Enddate'
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Charge'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update charge
      tags:
      - charges
  /chargetypes:
    get:
      description: get chargetype list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: chargetypename search pattern
        in: query
        name: chargetypename
        type: string
      - description: order by {id|chargetypename}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ChargeType_count'
            type: array
        "500":
          description: ""
      summary: List chargetypes
      tags:
      - chargetypes
  /chargetypes/{id}:
    get:
      description: get chargetype
      parameters:
      - description: ChargeType by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ChargeType_count'
            type: array
        "500":
          description: ""
      summary: Get chargetype
      tags:
      - chargetypes
  /chargetypes_add:
    post:
      consumes:
      - application/json
      description: add chargetype
      parameters:
      - description: New chargetype
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddChargeType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add chargetype
      tags:
      - chargetypes
  /chargetypes_del:
    post:
      consumes:
      - application/json
      description: delete chargetypes
      parameters:
      - description: Delete chargetypes
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete chargetypes
      tags:
      - chargetypes
  /chargetypes_upd:
    post:
      consumes:
      - application/json
      description: update chargetype
      parameters:
      - description: Update chargetype
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.ChargeType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update chargetype
      tags:
      - chargetypes
  /cities:
    get:
      description: get city list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: cityname search pattern
        in: query
        name: cityname
        type: string
      - description: order by {id|cityname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.City_count'
            type: array
        "500":
          description: ""
      summary: List cities
      tags:
      - cities
  /cities/{id}:
    get:
      description: get city
      parameters:
      - description: City by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.City_count'
            type: array
        "500":
          description: ""
      summary: Get city
      tags:
      - cities
  /cities_add:
    post:
      consumes:
      - application/json
      description: add city
      parameters:
      - description: New city
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddCity'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add city
      tags:
      - cities
  /cities_del:
    post:
      consumes:
      - application/json
      description: delete cities
      parameters:
      - description: Delete cities
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete cities
      tags:
      - cities
  /cities_upd:
    post:
      consumes:
      - application/json
      description: update city
      parameters:
      - description: Update city
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.City'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update city
      tags:
      - cities
  /claimtypes:
    get:
      description: get claimtype list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: claimtypename search pattern
        in: query
        name: claimtypename
        type: string
      - description: order by {id|claimtypename}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ClaimType_count'
            type: array
        "500":
          description: ""
      summary: List claimtypes
      tags:
      - claimtypes
  /claimtypes/{id}:
    get:
      description: get claimtype
      parameters:
      - description: ClaimType by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ClaimType_count'
            type: array
        "500":
          description: ""
      summary: Get claimtype
      tags:
      - claimtypes
  /claimtypes_add:
    post:
      consumes:
      - application/json
      description: add claimtype
      parameters:
      - description: New claimtype
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddClaimType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add claimtype
      tags:
      - claimtypes
  /claimtypes_del:
    post:
      consumes:
      - application/json
      description: delete claimtypes
      parameters:
      - description: Delete claimtypes
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete claimtypes
      tags:
      - claimtypes
  /claimtypes_upd:
    post:
      consumes:
      - application/json
      description: update claimtype
      parameters:
      - description: Update claimtype
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.ClaimType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update claimtype
      tags:
      - claimtypes
  /conclusions:
    get:
      description: get conclusions list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: conclusionname search pattern
        in: query
        name: conclusionname
        type: string
      - description: order by {id|conclusionname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Conclusion_count'
            type: array
        "500":
          description: ""
      summary: List conclusions
      tags:
      - conclusions
  /conclusions/{id}:
    get:
      description: get conclusion
      parameters:
      - description: Conclusion by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Conclusion_count'
            type: array
        "500":
          description: ""
      summary: Get conclusion
      tags:
      - conclusions
  /conclusions_add:
    post:
      consumes:
      - application/json
      description: add conclusion
      parameters:
      - description: New conclusion
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddConclusion'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add conclusion
      tags:
      - conclusions
  /conclusions_del:
    post:
      consumes:
      - application/json
      description: delete conclusions
      parameters:
      - description: Delete conclusions
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete conclusions
      tags:
      - conclusions
  /conclusions_upd:
    post:
      consumes:
      - application/json
      description: update conclusion
      parameters:
      - description: Update conclusion
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Conclusion'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update conclusion
      tags:
      - conclusions
  /connectors:
    get:
      description: get connector list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: connectorname search pattern
        in: query
        name: connectorname
        type: string
      - description: order by {id|connectorname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Connector_count'
            type: array
        "500":
          description: ""
      summary: List connectors
      tags:
      - connectors
  /connectors/{id}:
    get:
      description: get connector
      parameters:
      - description: Connector by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Connector_count'
            type: array
        "500":
          description: ""
      summary: Get connector
      tags:
      - connectors
  /connectors_add:
    post:
      consumes:
      - application/json
      description: add connector
      parameters:
      - description: New connector
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddConnector'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add connector
      tags:
      - connectors
  /connectors_del:
    post:
      consumes:
      - application/json
      description: delete connectors
      parameters:
      - description: Delete connectors
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete connectors
      tags:
      - connectors
  /connectors_upd:
    post:
      consumes:
      - application/json
      description: update connector
      parameters:
      - description: Update connector
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Connector'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update connector
      tags:
      - connectors
  /contractmots:
    get:
      description: get contracts motives of termination list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: contractmotnameru search pattern
        in: query
        name: contractmotnameru
        type: string
      - description: contractmotnamekz search pattern
        in: query
        name: contractmotnamekz
        type: string
      - description: order by {id|contractmotnameru|contractmotnamekz}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ContractMot_count'
            type: array
        "500":
          description: ""
      summary: List contracts motives of termination
      tags:
      - contract_mots
  /contractmots/{id}:
    get:
      description: get contracts motive of termination
      parameters:
      - description: Contracts motive of termination by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ContractMot_count'
            type: array
        "500":
          description: ""
      summary: Get contracts motive of termination
      tags:
      - contract_mots
  /contractmots_add:
    post:
      consumes:
      - application/json
      description: add contracts motive of termination
      parameters:
      - description: New contracts motive of termination
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddContractMot'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add contracts motive of termination
      tags:
      - contract_mots
  /contractmots_del:
    post:
      consumes:
      - application/json
      description: delete contracts motives of termination
      parameters:
      - description: Delete contracts motives of termination
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete contracts motives of termination
      tags:
      - contract_mots
  /contractmots_upd:
    post:
      consumes:
      - application/json
      description: update contracts motive of termination
      parameters:
      - description: Update contracts motive of termination
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.ContractMot'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update contracts motive of termination
      tags:
      - contract_mots
  /contracts:
    get:
      description: get contract list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: contractnumber search pattern
        in: query
        name: contractnumber
        type: string
      - description: personalaccount search pattern
        in: query
        name: personalaccount
        type: string
      - description: active contracts
        in: query
        name: active
        type: boolean
      - description: customer name search pattern
        in: query
        name: custname
        type: string
      - description: customer id
        in: query
        name: custid
        type: integer
      - description: customer type
        in: query
        name: custtype
        type: integer
      - description: customer address search pattern
        in: query
        name: custaddr
        type: string
      - description: сonsignee name search pattern
        in: query
        name: consname
        type: string
      - description: eso name search pattern
        in: query
        name: esoname
        type: string
      - description: eso contract number search pattern
        in: query
        name: esocn
        type: string
      - description: area name search pattern
        in: query
        name: areaname
        type: string
      - description: customer group name search pattern
        in: query
        name: cgname
        type: string
      - description: motive of termination ru search pattern
        in: query
        name: motru
        type: string
      - description: motive of termination kz search pattern
        in: query
        name: motkz
        type: string
      - description: order by {contractnumber|personalaccount|startdate|custname|esoname|enddate}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Contract_count'
            type: array
        "500":
          description: ""
      summary: List contracts
      tags:
      - contracts
  /contracts/{id}:
    get:
      description: get contract
      parameters:
      - description: Contract by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Contract_count'
            type: array
        "500":
          description: ""
      summary: Get contract
      tags:
      - contracts
  /contracts_add:
    post:
      consumes:
      - application/json
      description: add contract
      parameters:
      - description: 'New contract. Significant params: PersonalAccount, BarCode,
          ContractNumber, Startdate, Customer.SubId, Consignee.SubId, EsoContractNumber,
          Eso.Id, Area.Id, CustomerGroup.Id, Notes(n)'
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddContract'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add contract
      tags:
      - contracts
  /contracts_del:
    post:
      consumes:
      - application/json
      description: close contracts
      parameters:
      - description: 'Close contract. Significant params: Id, Enddate, ContractMot.Id,
          MotNotes(n)'
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.IdClose'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Close contracts
      tags:
      - contracts
  /contracts_getobject/{id}:
    get:
      description: get contracts objects
      parameters:
      - description: Contract by id
        in: path
        name: id
        required: true
        type: integer
      - description: active objects
        in: query
        name: active
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ObjContract'
            type: array
        "500":
          description: ""
      summary: Get contracts objects
      tags:
      - contracts
  /contracts_hist/{id}:
    get:
      description: get contract history
      parameters:
      - description: Contract history by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "500":
          description: ""
      summary: Contract history
      tags:
      - contracts
  /contracts_upd:
    post:
      consumes:
      - application/json
      description: update contract
      parameters:
      - description: 'Update contract. Significant params: Id, ContractNumber, Startdate,
          Enddate(n), Customer.SubId, Consignee.SubId, EsoContractNumber, Eso.Id,
          Area.Id, CustomerGroup.Id, ContractMot.Id(n), Notes(n), MotNotes(n)'
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Contract'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update contract
      tags:
      - contracts
  /contracttypes:
    get:
      description: get contracttype list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: contracttypename search pattern
        in: query
        name: contracttypename
        type: string
      - description: order by {id|contracttypename}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ContractType_count'
        "500":
          description: ""
      summary: List contracttypes
      tags:
      - contracttypes
  /contracttypes/{id}:
    get:
      description: get contracttype
      parameters:
      - description: ContractType by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ContractType_count'
        "500":
          description: ""
      summary: Get contracttype
      tags:
      - contracttypes
  /contracttypes_add:
    post:
      consumes:
      - application/json
      description: add contracttype
      parameters:
      - description: New contracttype
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddContractType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Json_id'
        "500":
          description: ""
      summary: Add contracttype
      tags:
      - contracttypes
  /contracttypes_del:
    post:
      consumes:
      - application/json
      description: delete contracttypes
      parameters:
      - description: Delete contracttypes
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Json_ids'
        "500":
          description: ""
      summary: Delete contracttypes
      tags:
      - contracttypes
  /contracttypes_upd:
    post:
      consumes:
      - application/json
      description: update contracttype
      parameters:
      - description: Update contracttype
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.ContractType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Json_id'
        "500":
          description: ""
      summary: Update contracttype
      tags:
      - contracttypes
  /customergroups:
    get:
      description: get customergroup list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: customergroupname search pattern
        in: query
        name: customergroupname
        type: string
      - description: order by {id|customergroupname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CustomerGroup_count'
            type: array
        "500":
          description: ""
      summary: List customergroups
      tags:
      - customergroups
  /customergroups/{id}:
    get:
      description: get customergroup
      parameters:
      - description: CustomerGroup by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CustomerGroup_count'
            type: array
        "500":
          description: ""
      summary: Get customergroup
      tags:
      - customergroups
  /customergroups_add:
    post:
      consumes:
      - application/json
      description: add customergroup
      parameters:
      - description: New customergroup
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddCustomerGroup'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add customergroup
      tags:
      - customergroups
  /customergroups_del:
    post:
      consumes:
      - application/json
      description: delete customergroups
      parameters:
      - description: Delete customergroups
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete customergroups
      tags:
      - customergroups
  /customergroups_upd:
    post:
      consumes:
      - application/json
      description: update customergroup
      parameters:
      - description: Update customergroup
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.CustomerGroup'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update customergroup
      tags:
      - customergroups
  /distributionzones:
    get:
      description: get distributionzone list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: distributionzonename search pattern
        in: query
        name: distributionzonename
        type: string
      - description: order by {id|distributionzonename}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.DistributionZone_count'
            type: array
        "500":
          description: ""
      summary: List distributionzone
      tags:
      - distributionzones
  /distributionzones/{id}:
    get:
      description: get distributionzone
      parameters:
      - description: DistributionZone by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.DistributionZone_count'
            type: array
        "500":
          description: ""
      summary: Get distributionzone
      tags:
      - distributionzones
  /distributionzones_add:
    post:
      consumes:
      - application/json
      description: add distributionzone
      parameters:
      - description: New distributionzone
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddDistributionZone'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add distributionzone
      tags:
      - distributionzones
  /distributionzones_del:
    post:
      consumes:
      - application/json
      description: delete distributionzones
      parameters:
      - description: Delete distributionzones
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete distributionzones
      tags:
      - distributionzones
  /distributionzones_upd:
    post:
      consumes:
      - application/json
      description: update distributionzone
      parameters:
      - description: Update distributionzone
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.DistributionZone'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update distributionzone
      tags:
      - distributionzones
  /equipment:
    get:
      description: get equipment list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: objectid
        in: query
        name: objectid
        type: integer
      - description: name search pattern
        in: query
        name: objectname
        type: string
      - description: order by {id|objectname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Equipment_count'
            type: array
        "500":
          description: ""
      summary: List equipment
      tags:
      - equipment
  /equipment/{id}:
    get:
      description: get equipment
      parameters:
      - description: Equipment by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Equipment_count'
            type: array
        "500":
          description: ""
      summary: Get equipment
      tags:
      - equipment
  /equipment_add:
    post:
      consumes:
      - application/json
      description: add equipment
      parameters:
      - description: 'New equipment. Significant params: EquipmentType.Id, Object.Id,
          Qty, WorkingHours'
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddEquipment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add equipment
      tags:
      - equipment
  /equipment_addlist:
    post:
      consumes:
      - application/json
      description: add equipment list
      parameters:
      - description: 'Add equipment list. Old equipment delete by first value Object.Id.
          Significant params: EquipmentType.Id, Object.Id, Qty, WorkingHours'
        in: body
        name: al
        required: true
        schema:
          $ref: '#/definitions/models.Equipment_count'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Add equipment list
      tags:
      - equipment
  /equipment_del:
    post:
      consumes:
      - application/json
      description: delete equipment
      parameters:
      - description: Delete equipment
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete equipment
      tags:
      - equipment
  /equipment_delobj:
    post:
      consumes:
      - application/json
      description: delete equipment by object id
      parameters:
      - description: Delete equipment by object id
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete equipment by object id
      tags:
      - equipment
  /equipment_upd:
    post:
      consumes:
      - application/json
      description: update equipment
      parameters:
      - description: 'Update equipment. Significant params: Id, EquipmentType.Id,
          Object.Id, Qty, WorkingHours'
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Equipment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update equipment
      tags:
      - equipment
  /equipmenttypes:
    get:
      description: get equipmenttype list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: equipmenttypename search pattern
        in: query
        name: equipmenttypename
        type: string
      - description: order by {id|equipmenttypename}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.EquipmentType_count'
            type: array
        "500":
          description: ""
      summary: List equipmenttypes
      tags:
      - equipment types
  /equipmenttypes/{id}:
    get:
      description: get equipmenttype
      parameters:
      - description: EquipmentType by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.EquipmentType_count'
            type: array
        "500":
          description: ""
      summary: Get equipmenttype
      tags:
      - equipment types
  /equipmenttypes_add:
    post:
      consumes:
      - application/json
      description: add equipmenttype
      parameters:
      - description: 'New equipmenttype. Significant params: EquipmentTypeName, EquipmentTypePower'
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddEquipmentType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add equipmenttype
      tags:
      - equipment types
  /equipmenttypes_del:
    post:
      consumes:
      - application/json
      description: delete equipmenttypes
      parameters:
      - description: Delete equipmenttypes
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete equipmenttypes
      tags:
      - equipment types
  /equipmenttypes_upd:
    post:
      consumes:
      - application/json
      description: update equipmenttype
      parameters:
      - description: 'Update equipmenttype. Significant params: Id, EquipmentTypeName,
          EquipmentTypePower'
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.EquipmentType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update equipmenttype
      tags:
      - equipment types
  /eso:
    get:
      description: get eso list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: esoname search pattern
        in: query
        name: esoname
        type: string
      - description: order by {id|esoname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Eso_count'
            type: array
        "500":
          description: ""
      summary: List eso
      tags:
      - eso
  /eso/{id}:
    get:
      description: get eso
      parameters:
      - description: Eso by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Eso_count'
            type: array
        "500":
          description: ""
      summary: Get eso
      tags:
      - eso
  /eso_add:
    post:
      consumes:
      - application/json
      description: add eso
      parameters:
      - description: New eso
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddEso'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add eso
      tags:
      - eso
  /eso_del:
    post:
      consumes:
      - application/json
      description: delete eso
      parameters:
      - description: Delete eso
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete eso
      tags:
      - eso
  /eso_upd:
    post:
      consumes:
      - application/json
      description: update eso
      parameters:
      - description: Update eso
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Eso'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update eso
      tags:
      - eso
  /form_types:
    get:
      description: get form types
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: formtypename search pattern
        in: query
        name: formtypename
        type: string
      - description: formtypedescr search pattern
        in: query
        name: formtypedescr
        type: string
      - description: order by {formtypename|formtypedescr}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.FormType_count'
            type: array
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: List form types
      tags:
      - form types
  /form_types/{id}:
    get:
      description: get form type
      parameters:
      - description: Form type by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.FormType_count'
            type: array
        "500":
          description: ""
      summary: Form type
      tags:
      - form types
  /form_types_add:
    post:
      consumes:
      - application/json
      description: add form type
      parameters:
      - description: New FormType
        in: body
        name: ft
        required: true
        schema:
          $ref: '#/definitions/models.FormType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Add form type
      tags:
      - form types
  /form_types_del:
    post:
      consumes:
      - application/json
      description: delete form types
      parameters:
      - description: Delete formtype
        in: body
        name: ft
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete form types
      tags:
      - form types
  /form_types_upd:
    post:
      consumes:
      - application/json
      description: update form types
      parameters:
      - description: Update formtype
        in: body
        name: ft
        required: true
        schema:
          $ref: '#/definitions/models.FormType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update form types
      tags:
      - form types
  /grp:
    get:
      description: get grp list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: grpname search pattern
        in: query
        name: grpname
        type: string
      - description: order by {id|grpname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.GRp_count'
            type: array
        "500":
          description: ""
      summary: List grp
      tags:
      - grp
  /grp/{id}:
    get:
      description: get grp
      parameters:
      - description: GRp by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.GRp_count'
            type: array
        "500":
          description: ""
      summary: Get grp
      tags:
      - grp
  /grp_add:
    post:
      consumes:
      - application/json
      description: add grp
      parameters:
      - description: New grp
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddGRp'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add grp
      tags:
      - grp
  /grp_del:
    post:
      consumes:
      - application/json
      description: delete grp
      parameters:
      - description: Delete grp
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete grp
      tags:
      - grp
  /grp_upd:
    post:
      consumes:
      - application/json
      description: update grp
      parameters:
      - description: Update grp
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.GRp'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update grp
      tags:
      - grp
  /houses:
    get:
      description: get house list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: streetname search pattern
        in: query
        name: streetname
        type: string
      - description: housenumber search pattern
        in: query
        name: housenumber
        type: string
      - description: streetid search pattern
        in: query
        name: streetid
        type: integer
      - description: order by {housenumber|streetname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.House_count'
            type: array
        "500":
          description: ""
      summary: List houses
      tags:
      - houses
  /houses/{id}:
    get:
      description: get house
      parameters:
      - description: House by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.House_count'
            type: array
        "500":
          description: ""
      summary: Get house
      tags:
      - houses
  /houses_add:
    post:
      consumes:
      - application/json
      description: add house
      parameters:
      - description: New house
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddHouse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add house
      tags:
      - houses
  /houses_del:
    post:
      consumes:
      - application/json
      description: delete houses
      parameters:
      - description: Delete houses
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete houses
      tags:
      - houses
  /houses_upd:
    post:
      consumes:
      - application/json
      description: update house
      parameters:
      - description: Update house
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.House'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update house
      tags:
      - houses
  /input_types:
    get:
      description: get input type list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: inputtypename search pattern
        in: query
        name: inputtypename
        type: string
      - description: order by {id|inputtypename}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.InputType_count'
            type: array
        "500":
          description: ""
      summary: List input types
      tags:
      - input types
  /input_types/{id}:
    get:
      description: get input type
      parameters:
      - description: Input type by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.InputType_count'
            type: array
        "500":
          description: ""
      summary: Get input type
      tags:
      - input types
  /input_types_add:
    post:
      consumes:
      - application/json
      description: add input type
      parameters:
      - description: New input type
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddInputType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add input type
      tags:
      - input types
  /input_types_del:
    post:
      consumes:
      - application/json
      description: delete input types
      parameters:
      - description: Delete input types
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete input types
      tags:
      - input types
  /input_types_upd:
    post:
      consumes:
      - application/json
      description: update input type
      parameters:
      - description: Update input type
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.InputType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update input type
      tags:
      - input types
  /ksk:
    get:
      description: get ksk list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: kskname search pattern
        in: query
        name: kskname
        type: string
      - description: kskaddress search pattern
        in: query
        name: kskaddress
        type: string
      - description: order by {kskname|kskaddress}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Ksk_count'
            type: array
        "500":
          description: ""
      summary: List ksk
      tags:
      - ksk
  /ksk/{id}:
    get:
      description: get ksk
      parameters:
      - description: Ksk by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Ksk_count'
            type: array
        "500":
          description: ""
      summary: Get ksk
      tags:
      - ksk
  /ksk_add:
    post:
      consumes:
      - application/json
      description: add ksk
      parameters:
      - description: New ksk
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddKsk'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add ksk
      tags:
      - ksk
  /ksk_del:
    post:
      consumes:
      - application/json
      description: delete ksk
      parameters:
      - description: Delete ksk
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete ksk
      tags:
      - ksk
  /ksk_upd:
    post:
      consumes:
      - application/json
      description: update ksk
      parameters:
      - description: Update ksk
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Ksk'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update ksk
      tags:
      - ksk
  /objcontracts:
    get:
      description: get objcontract list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: object id
        in: query
        name: objectid
        type: string
      - description: type id
        in: query
        name: tid
        type: string
      - description: contract id
        in: query
        name: contractid
        type: string
      - description: enddate is null
        in: query
        name: active
        type: boolean
      - description: order by {object|contract|startdate}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ObjContract_count'
            type: array
        "500":
          description: ""
      summary: List objcontracts
      tags:
      - objcontracts
  /objcontracts/{id}:
    get:
      description: get objcontract
      parameters:
      - description: ObjContract by id
        in: path
        name: id
        required: true
        type: integer
      - description: actual date
        in: query
        name: actualdate
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ObjContract_count'
            type: array
        "500":
          description: ""
      summary: Get objcontract
      tags:
      - objcontracts
  /objcontracts_add:
    post:
      consumes:
      - application/json
      description: add objcontract
      parameters:
      - description: 'New objcontract. Old objcontract of the object will be closed.
          Significant params: Contract.Id, Object.Id, ObjTypeId, Startdate'
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddObjContract'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add objcontract
      tags:
      - objcontracts
  /objcontracts_del:
    post:
      consumes:
      - application/json
      description: close objcontract
      parameters:
      - description: 'Close objcontract. Significant params: Id, CloseDate'
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.IdClose'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Close objcontract
      tags:
      - objcontracts
  /objcontracts_upd:
    post:
      consumes:
      - application/json
      description: update objcontract
      parameters:
      - description: 'Update objcontract. Significant params: Contract.Id, Object.Id,
          ObjTypeId, Startdate, Enddate'
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.ObjContract'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update objcontract
      tags:
      - objcontracts
  /objects:
    get:
      description: get object list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: objectname search pattern
        in: query
        name: objectname
        type: string
      - description: house id search pattern
        in: query
        name: houseid
        type: string
      - description: active contract
        in: query
        name: active
        type: boolean
      - description: order by {id|objectname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Object_count'
            type: array
        "500":
          description: ""
      summary: List objects
      tags:
      - objects
  /objects/{id}:
    get:
      description: get object
      parameters:
      - description: Object by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Object_count'
            type: array
        "500":
          description: ""
      summary: Get object
      tags:
      - objects
  /objects_add:
    post:
      consumes:
      - application/json
      description: add object
      parameters:
      - description: 'New object. Significant params: ObjectName, House.Id, FlatNumber(n),
          ObjType.Id, RegQty, Uzo.Id, TariffGroup.Id, CalculationType.Id, ObjStatus.Id,
          Notes(n), MffId(n)'
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddObject'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add object
      tags:
      - objects
  /objects_del:
    post:
      consumes:
      - application/json
      description: delete objects
      parameters:
      - description: Delete objects
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete objects
      tags:
      - objects
  /objects_getcontract/{id}:
    get:
      description: get objects contract
      parameters:
      - description: Object by id
        in: path
        name: id
        required: true
        type: integer
      - description: active contracts
        in: query
        name: active
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ObjContract'
            type: array
        "500":
          description: ""
      summary: Get objects contract
      tags:
      - objects
  /objects_mff/{hid}:
    get:
      description: get main mff object by house id
      parameters:
      - description: House id
        in: path
        name: hid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Object_count'
            type: array
        "500":
          description: ""
      summary: Get main mff object by house id
      tags:
      - objects
  /objects_upd:
    post:
      consumes:
      - application/json
      description: update object
      parameters:
      - description: 'Update object. Significant params: Id, ObjectName, House.Id,
          FlatNumber(n), ObjType.Id, RegQty, Uzo.Id, TariffGroup.Id, CalculationType.Id,
          ObjStatus.Id, Notes(n), MffId(n)'
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Object'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update object
      tags:
      - objects
  /objlines:
    get:
      description: get objlines list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: objectname search pattern
        in: query
        name: objectname
        type: string
      - description: cableresistancename search pattern
        in: query
        name: cableresistancename
        type: string
      - description: order by {id|cableresistancename|objectname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ObjLine_count'
            type: array
        "500":
          description: ""
      summary: List objlines
      tags:
      - objlines
  /objlines/{id}:
    get:
      description: get objline
      parameters:
      - description: Objline by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ObjLine_count'
            type: array
        "500":
          description: ""
      summary: Get objline
      tags:
      - objlines
  /objlines_add:
    post:
      consumes:
      - application/json
      description: add objline
      parameters:
      - description: 'New objtranscurr. Significant params: ObjId, ObjTypeId, CableResistance.Id,
          LineLength, Startdate'
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddObjLine'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add objline
      tags:
      - objlines
  /objlines_del:
    post:
      consumes:
      - application/json
      description: delete objlines
      parameters:
      - description: Delete objlines
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete objlines
      tags:
      - objlines
  /objlines_obj:
    get:
      description: get objlines by object
      parameters:
      - description: obj&tgu id
        in: query
        name: objid
        type: string
      - description: obj&tgu type id (obj - type = 0, tgu - type > 0)
        in: query
        name: tid
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ObjLine_count'
            type: array
        "500":
          description: ""
      summary: Get objlines by object
      tags:
      - objlines
  /objlines_upd:
    post:
      consumes:
      - application/json
      description: update objline
      parameters:
      - description: 'Update objtranscurr. Significant params: Id, ObjId, ObjTypeId,
          CableResistance.Id, LineLength, Startdate, Enddate'
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.ObjLine'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update objline
      tags:
      - objlines
  /objstatuses:
    get:
      description: get objstatus list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: objstatusname search pattern
        in: query
        name: objstatusname
        type: string
      - description: order by {id|objstatusname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ObjStatus_count'
            type: array
        "500":
          description: ""
      summary: List objstatuses
      tags:
      - objstatuses
  /objstatuses/{id}:
    get:
      description: get objstatus
      parameters:
      - description: ObjStatus by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ObjStatus_count'
            type: array
        "500":
          description: ""
      summary: Get objstatus
      tags:
      - objstatuses
  /objstatuses_add:
    post:
      consumes:
      - application/json
      description: add objstatus
      parameters:
      - description: New objstatus
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddObjStatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add objstatus
      tags:
      - objstatuses
  /objstatuses_del:
    post:
      consumes:
      - application/json
      description: delete objstatuses
      parameters:
      - description: Delete objstatuses
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete objstatuses
      tags:
      - objstatuses
  /objstatuses_upd:
    post:
      consumes:
      - application/json
      description: update objstatus
      parameters:
      - description: Update objstatus
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.ObjStatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update objstatus
      tags:
      - objstatuses
  /objtranscurr:
    get:
      description: get objtranscurr list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: objectname search pattern
        in: query
        name: objectname
        type: string
      - description: transcurrname search pattern
        in: query
        name: transcurrname
        type: string
      - description: order by {id|objectname|transcurrname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ObjTransCurr_count'
            type: array
        "500":
          description: ""
      summary: List objtranscurr
      tags:
      - objtranscurr
  /objtranscurr/{id}:
    get:
      description: get objtranscurr
      parameters:
      - description: Objtranscurr by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ObjTransCurr_count'
            type: array
        "500":
          description: ""
      summary: Get objtranscurr
      tags:
      - objtranscurr
  /objtranscurr_add:
    post:
      consumes:
      - application/json
      description: add objtranscurr
      parameters:
      - description: 'New objtranscurr. Significant params: ObjId, ObjTypeId, TransCurr.Id,
          Startdate'
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddObjTransCurr'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add objtranscurr
      tags:
      - objtranscurr
  /objtranscurr_del:
    post:
      consumes:
      - application/json
      description: delete objtranscurrs
      parameters:
      - description: Delete objtranscurrs
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete objtranscurrs
      tags:
      - objtranscurr
  /objtranscurr_obj:
    get:
      description: get objtranscurr by object
      parameters:
      - description: obj&tgu id
        in: query
        name: objid
        type: string
      - description: obj&tgu type id (obj - type = 0, tgu - type > 0)
        in: query
        name: tid
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ObjTransCurr_count'
            type: array
        "500":
          description: ""
      summary: Get objtranscurr by object
      tags:
      - objtranscurr
  /objtranscurr_upd:
    post:
      consumes:
      - application/json
      description: update objtranscurr
      parameters:
      - description: 'Update objtranscurr. Significant params: Id, ObjId, ObjTypeId,
          TransCurr.Id, Startdate, Enddate'
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.ObjTransCurr'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update objtranscurr
      tags:
      - objtranscurr
  /objtranspwr:
    get:
      description: get objtranspwr list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: objectname search pattern
        in: query
        name: objectname
        type: string
      - description: transpwrname search pattern
        in: query
        name: transpwrname
        type: string
      - description: order by {id|objectname|transpwrname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ObjTransPwr_count'
            type: array
        "500":
          description: ""
      summary: List objtranspwr
      tags:
      - objtranspwr
  /objtranspwr/{id}:
    get:
      description: get objtranspwr
      parameters:
      - description: Objtranspwr by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ObjTransPwr_count'
            type: array
        "500":
          description: ""
      summary: Get objtranspwr
      tags:
      - objtranspwr
  /objtranspwr_add:
    post:
      consumes:
      - application/json
      description: add objtranspwr
      parameters:
      - description: 'New objtranspwr. Significant params: ObjId, ObjTypeId, TransPwr.Id,
          Startdate'
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddObjTransPwr'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add objtranspwr
      tags:
      - objtranspwr
  /objtranspwr_del:
    post:
      consumes:
      - application/json
      description: delete objtranspwrs
      parameters:
      - description: Delete objtranspwrs
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete objtranspwrs
      tags:
      - objtranspwr
  /objtranspwr_obj:
    get:
      description: get objtranspwr by object
      parameters:
      - description: obj&tgu id
        in: query
        name: objid
        type: string
      - description: obj&tgu type id (obj - type = 0, tgu - type > 0)
        in: query
        name: tid
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ObjTransPwr_count'
            type: array
        "500":
          description: ""
      summary: Get objtranspwr by object
      tags:
      - objtranspwr
  /objtranspwr_upd:
    post:
      consumes:
      - application/json
      description: update objtranspwr
      parameters:
      - description: 'Update objtranspwr. Significant params: Id, ObjId, ObjTypeId,
          TransPwr.Id, Startdate, Enddate'
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.ObjTransPwr'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update objtranspwr
      tags:
      - objtranspwr
  /objtransvolt:
    get:
      description: get objtransvolt list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: objectname search pattern
        in: query
        name: objectname
        type: string
      - description: transvoltname search pattern
        in: query
        name: transvoltname
        type: string
      - description: order by {id|objectname|transvoltname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ObjTransVolt_count'
            type: array
        "500":
          description: ""
      summary: List objtransvolt
      tags:
      - objtransvolt
  /objtransvolt/{id}:
    get:
      description: get objtransvolt
      parameters:
      - description: Objtransvolt by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ObjTransVolt_count'
            type: array
        "500":
          description: ""
      summary: Get objtransvolt
      tags:
      - objtransvolt
  /objtransvolt_add:
    post:
      consumes:
      - application/json
      description: add objtransvolt
      parameters:
      - description: 'New objtransvolt. Significant params: ObjId, ObjTypeId, TransVolt.Id,
          Startdate'
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddObjTransVolt'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add objtransvolt
      tags:
      - objtransvolt
  /objtransvolt_del:
    post:
      consumes:
      - application/json
      description: delete objtransvolts
      parameters:
      - description: Delete objtransvolts
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete objtransvolts
      tags:
      - objtransvolt
  /objtransvolt_obj:
    get:
      description: get objtransvolt by object
      parameters:
      - description: obj&tgu id
        in: query
        name: objid
        type: string
      - description: obj&tgu type id (obj - type = 0, tgu - type > 0)
        in: query
        name: tid
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ObjTransVolt_count'
            type: array
        "500":
          description: ""
      summary: Get objtransvolt by object
      tags:
      - objtransvolt
  /objtransvolt_upd:
    post:
      consumes:
      - application/json
      description: update objtransvolt
      parameters:
      - description: 'Update objtransvolt. Significant params: Id, ObjId, ObjTypeId,
          TransVolt.Id, Startdate, Enddate'
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.ObjTransVolt'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update objtransvolt
      tags:
      - objtransvolt
  /objtypes:
    get:
      description: get objtype list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: objtypename search pattern
        in: query
        name: objtypename
        type: string
      - description: order by {id|objtypename}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ObjType_count'
            type: array
        "500":
          description: ""
      summary: List objtypes
      tags:
      - objtypes
  /objtypes/{id}:
    get:
      description: get objtype
      parameters:
      - description: ObjType by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ObjType_count'
            type: array
        "500":
          description: ""
      summary: Get objtype
      tags:
      - objtypes
  /objtypes_add:
    post:
      consumes:
      - application/json
      description: add objtype
      parameters:
      - description: New objtype
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddObjType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add objtype
      tags:
      - objtypes
  /objtypes_del:
    post:
      consumes:
      - application/json
      description: delete objtypes
      parameters:
      - description: Delete objtypes
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete objtypes
      tags:
      - objtypes
  /objtypes_upd:
    post:
      consumes:
      - application/json
      description: update objtype
      parameters:
      - description: Update objtype
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.ObjType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update objtype
      tags:
      - objtypes
  /ordertypes:
    get:
      description: get ordertype list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: ordertypename search pattern
        in: query
        name: ordertypename
        type: string
      - description: order by {id|ordertypename}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.OrderType_count'
            type: array
        "500":
          description: ""
      summary: List ordertypes
      tags:
      - ordertypes
  /ordertypes/{id}:
    get:
      description: get ordertype
      parameters:
      - description: OrderType by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.OrderType_count'
            type: array
        "500":
          description: ""
      summary: Get ordertype
      tags:
      - ordertypes
  /ordertypes_add:
    post:
      consumes:
      - application/json
      description: add ordertype
      parameters:
      - description: New ordertype
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddOrderType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add ordertype
      tags:
      - ordertypes
  /ordertypes_del:
    post:
      consumes:
      - application/json
      description: delete ordertypes
      parameters:
      - description: Delete ordertypes
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete ordertypes
      tags:
      - ordertypes
  /ordertypes_upd:
    post:
      consumes:
      - application/json
      description: update ordertype
      parameters:
      - description: Update ordertype
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.OrderType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update ordertype
      tags:
      - ordertypes
  /org_info:
    get:
      description: Get org_info list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: oiname search pattern
        in: query
        name: oiname
        type: string
      - description: oifname search pattern
        in: query
        name: oifname
        type: string
      - description: order by {oiname|oifname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.OrgInfo_count'
            type: array
        "500":
          description: ""
      summary: List org_info
      tags:
      - org_info
  /org_info/{id}:
    get:
      description: Get org_info
      parameters:
      - description: OrgInfo by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.OrgInfo_count'
            type: array
        "500":
          description: ""
      summary: Get org_info
      tags:
      - org_info
  /org_info_add:
    post:
      consumes:
      - application/json
      description: Add org_info
      parameters:
      - description: New org_info
        in: body
        name: ab
        required: true
        schema:
          $ref: '#/definitions/models.AddOrgInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add org_info
      tags:
      - org_info
  /org_info_del:
    post:
      consumes:
      - application/json
      description: Delete org_info
      parameters:
      - description: Delete org_info
        in: body
        name: db
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Delete org_info
      tags:
      - org_info
  /org_info_upd:
    post:
      consumes:
      - application/json
      description: Update org_info
      parameters:
      - description: Update org_info
        in: body
        name: ub
        required: true
        schema:
          $ref: '#/definitions/models.OrgInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update org_info
      tags:
      - org_info
  /payments:
    get:
      description: get payments list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: contractnumber search pattern
        in: query
        name: contractnumber
        type: string
      - description: object id
        in: query
        name: oid
        type: string
      - description: order by {id|paymentdate}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Payment_count'
            type: array
        "500":
          description: ""
      summary: List payments
      tags:
      - payments
  /payments/{id}:
    get:
      description: get payment
      parameters:
      - description: Payment by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Payment_count'
            type: array
        "500":
          description: ""
      summary: Get payment
      tags:
      - payments
  /payments_add:
    post:
      consumes:
      - application/json
      description: add payment
      parameters:
      - description: 'New payment. Significant params: PaymentDate, Contract.Id, Object.Id,
          PaymentType.Id, ChargeType.Id, Cashdesk.Id, BundleNumber, Amount'
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddPayment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add payment
      tags:
      - payments
  /payments_del:
    post:
      consumes:
      - application/json
      description: delete payments
      parameters:
      - description: Delete payments
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete payments
      tags:
      - payments
  /payments_upd:
    post:
      consumes:
      - application/json
      description: update payment
      parameters:
      - description: 'Update payment. Significant params: Id, PaymentDate, Contract.Id,
          Object.Id, PaymentType.Id, ChargeType.Id, Cashdesk.Id, BundleNumber, Amount'
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Payment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update payment
      tags:
      - payments
  /paymenttypes:
    get:
      description: get paymenttype list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: paymenttypename search pattern
        in: query
        name: paymenttypename
        type: string
      - description: order by {id|paymenttypename}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.PaymentType_count'
            type: array
        "500":
          description: ""
      summary: List paymenttypes
      tags:
      - paymenttypes
  /paymenttypes/{id}:
    get:
      description: get paymenttype
      parameters:
      - description: PaymentType by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.PaymentType_count'
            type: array
        "500":
          description: ""
      summary: Get paymenttype
      tags:
      - paymenttypes
  /paymenttypes_add:
    post:
      consumes:
      - application/json
      description: add paymenttype
      parameters:
      - description: New paymenttype
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddPaymentType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add paymenttype
      tags:
      - paymenttypes
  /paymenttypes_del:
    post:
      consumes:
      - application/json
      description: delete paymenttypes
      parameters:
      - description: Delete paymenttypes
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete paymenttypes
      tags:
      - paymenttypes
  /paymenttypes_upd:
    post:
      consumes:
      - application/json
      description: update paymenttype
      parameters:
      - description: Update paymenttype
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.PaymentType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update paymenttype
      tags:
      - paymenttypes
  /periods:
    get:
      description: get period list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: periodname search pattern
        in: query
        name: periodname
        type: string
      - description: order by {id|periodname|startdate}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Period_count'
            type: array
        "500":
          description: ""
      summary: List periods
      tags:
      - periods
  /periods/{id}:
    get:
      description: get period
      parameters:
      - description: Period by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Period_count'
            type: array
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Get period
      tags:
      - periods
  /periods_add:
    post:
      consumes:
      - application/json
      description: add period
      parameters:
      - description: 'New period. Significant params: PeriodName, Startdate, Enddate'
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddPeriod'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add period
      tags:
      - periods
  /periods_del:
    post:
      consumes:
      - application/json
      description: delete periods
      parameters:
      - description: Delete periods
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete periods
      tags:
      - periods
  /periods_upd:
    post:
      consumes:
      - application/json
      description: update period
      parameters:
      - description: 'Update period. Significant params: Id, PeriodName, Startdate,
          Enddate'
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Period'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update period
      tags:
      - periods
  /positions:
    get:
      description: get positions
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: positionname search pattern
        in: query
        name: positionname
        type: string
      - description: order by {id|positionname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Position_count'
            type: array
        "500":
          description: ""
      summary: List positions
      tags:
      - positions
  /positions/{id}:
    get:
      description: get position
      parameters:
      - description: Position by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Position_count'
            type: array
        "500":
          description: ""
      summary: Get position
      tags:
      - positions
  /positions_add:
    post:
      consumes:
      - application/json
      description: add position
      parameters:
      - description: New Position
        in: body
        name: ap
        required: true
        schema:
          $ref: '#/definitions/models.AddPosition'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add position
      tags:
      - positions
  /positions_del:
    post:
      consumes:
      - application/json
      description: delete positions
      parameters:
      - description: Delete positions
        in: body
        name: dp
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete positions
      tags:
      - positions
  /positions_upd:
    post:
      consumes:
      - application/json
      description: update position
      parameters:
      - description: Update position
        in: body
        name: up
        required: true
        schema:
          $ref: '#/definitions/models.Position'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update position
      tags:
      - positions
  /pu:
    get:
      description: get pu list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: objectname search pattern
        in: query
        name: objectname
        type: string
      - description: streetname search pattern
        in: query
        name: streetname
        type: string
      - description: actual date
        in: query
        name: actualdate
        type: string
      - description: parent id search pattern
        in: query
        name: pid
        type: string
      - description: house id search pattern
        in: query
        name: houseid
        type: string
      - description: except pu id
        in: query
        name: exid
        type: string
      - description: active pu
        in: query
        name: active
        type: boolean
      - description: order by {objectname|streetname|startdate}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Pu_count'
            type: array
        "500":
          description: ""
      summary: List pu
      tags:
      - pu
  /pu/{id}:
    get:
      description: get pu
      parameters:
      - description: Pu by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Pu_count'
            type: array
        "500":
          description: ""
      summary: Get pu
      tags:
      - pu
  /pu_add:
    post:
      consumes:
      - application/json
      description: add pu
      parameters:
      - description: 'New pu. Significant params: Object.Id, PuObjectType, PuType.Id,
          PuNumber, InstallDate, CheckInterval, InitialValue, DevStopped, Startdate,
          Pid'
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddPu'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add pu
      tags:
      - pu
  /pu_del:
    post:
      consumes:
      - application/json
      description: delete pu list
      parameters:
      - description: Delete pu list
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete pu list
      tags:
      - pu
  /pu_obj:
    get:
      description: get pu of obj&tgu list
      parameters:
      - description: obj&tgu id
        in: query
        name: objid
        type: string
      - description: obj&tgu type id (obj - type = 0, tgu - type > 0)
        in: query
        name: tid
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Pu_count'
            type: array
        "500":
          description: ""
      summary: List pu of obj&tgu
      tags:
      - pu
  /pu_upd:
    post:
      consumes:
      - application/json
      description: update pu
      parameters:
      - description: 'Update pu. Significant params: Id, Object.Id, PuObjectType,
          PuType.Id, PuNumber, InstallDate, CheckInterval, InitialValue, DevStopped,
          Startdate, Enddate, Pid'
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Pu'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update pu
      tags:
      - pu
  /putypes:
    get:
      description: get putype list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: putypename search pattern
        in: query
        name: putypename
        type: string
      - description: order by {id|putypename}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.PuType_count'
            type: array
        "500":
          description: ""
      summary: List putypes
      tags:
      - putypes
  /putypes/{id}:
    get:
      description: get putype
      parameters:
      - description: PuType by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.PuType_count'
            type: array
        "500":
          description: ""
      summary: Get putype
      tags:
      - putypes
  /putypes_add:
    post:
      consumes:
      - application/json
      description: add putype
      parameters:
      - description: New putype
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddPuType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add putype
      tags:
      - putypes
  /putypes_del:
    post:
      consumes:
      - application/json
      description: delete putypes
      parameters:
      - description: Delete putypes
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete putypes
      tags:
      - putypes
  /putypes_upd:
    post:
      consumes:
      - application/json
      description: update putype
      parameters:
      - description: Update putype
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.PuType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update putype
      tags:
      - putypes
  /puvalues:
    get:
      description: get pu values list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: puid search pattern
        in: query
        name: puid
        type: integer
      - description: order by {puid|valuedate}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PuValue_count'
        "500":
          description: ""
      summary: List pu values
      tags:
      - puvalues
  /puvalues/{id}:
    get:
      description: get pu value
      parameters:
      - description: Pu value Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PuValue_count'
        "500":
          description: ""
      summary: Get pu value
      tags:
      - puvalues
  /puvalues_add:
    post:
      consumes:
      - application/json
      description: add pu value
      parameters:
      - description: 'New pu value. Significant params: PuId, ValueDate, PuValue'
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.PuValue'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Json_id'
        "500":
          description: ""
      summary: Add pu value
      tags:
      - puvalues
  /puvalues_askue:
    post:
      consumes:
      - application/json
      description: load askue pu values
      parameters:
      - description: Askue file to load
        in: body
        name: af
        required: true
        schema:
          $ref: '#/definitions/models.AskueFile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AskueLoadRes'
        "500":
          description: ""
      summary: Load askue pu values
      tags:
      - puvalues
  /puvalues_askue_prev:
    post:
      consumes:
      - application/json
      description: preview askue pu values
      parameters:
      - description: Askue file to preview
        in: body
        name: af
        required: true
        schema:
          $ref: '#/definitions/models.AskueFile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PuValueAskue_count'
        "500":
          description: ""
      summary: Preview askue pu values
      tags:
      - puvalues
  /puvalues_del:
    post:
      consumes:
      - application/json
      description: delete pu values
      parameters:
      - description: Delete pu values
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Json_ids'
        "500":
          description: ""
      summary: Delete pu values
      tags:
      - puvalues
  /puvalues_upd:
    post:
      consumes:
      - application/json
      description: update pu value
      parameters:
      - description: 'Update pu value. Significant params: Id, ValueDate, PuValue'
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.PuValue'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Json_id'
        "500":
          description: ""
      summary: Update pu value
      tags:
      - puvalues
  /puvaluetypes:
    get:
      description: get puvaluetype list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: puvaluetypename search pattern
        in: query
        name: puvaluetypename
        type: string
      - description: order by {id|putypename}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.PuType_count'
            type: array
        "500":
          description: ""
      summary: List puvaluetypes
      tags:
      - puvaluetypes
  /puvaluetypes/{id}:
    get:
      description: get puvaluetype
      parameters:
      - description: PuValueType by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.PuValueType_count'
            type: array
        "500":
          description: ""
      summary: Get puvaluetype
      tags:
      - puvaluetypes
  /puvaluetypes_add:
    post:
      consumes:
      - application/json
      description: add puvaluetype
      parameters:
      - description: New puvaluetype
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddPuValueType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add puvaluetype
      tags:
      - puvaluetypes
  /puvaluetypes_del:
    post:
      consumes:
      - application/json
      description: delete puvaluetypes
      parameters:
      - description: Delete puvaluetypes
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete puvaluetypes
      tags:
      - puvaluetypes
  /puvaluetypes_upd:
    post:
      consumes:
      - application/json
      description: update puvaluetype
      parameters:
      - description: Update puvaluetype
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.PuValueType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update puvaluetype
      tags:
      - puvaluetypes
  /reasons:
    get:
      description: get reason list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: reasonname search pattern
        in: query
        name: reasonname
        type: string
      - description: order by {id|reasonname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Reason_count'
            type: array
        "500":
          description: ""
      summary: List reasons
      tags:
      - reasons
  /reasons/{id}:
    get:
      description: get reason
      parameters:
      - description: Reason by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Reason_count'
            type: array
        "500":
          description: ""
      summary: Get reason
      tags:
      - reasons
  /reasons_add:
    post:
      consumes:
      - application/json
      description: add reason
      parameters:
      - description: New reason
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddReason'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add reason
      tags:
      - reasons
  /reasons_del:
    post:
      consumes:
      - application/json
      description: delete reasons
      parameters:
      - description: Delete reasons
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete reasons
      tags:
      - reasons
  /reasons_upd:
    post:
      consumes:
      - application/json
      description: update reason
      parameters:
      - description: Update reason
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Reason'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update reason
      tags:
      - reasons
  /reliabilities:
    get:
      description: get reliabilities
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: reliabilityname search pattern
        in: query
        name: reliabilityname
        type: string
      - description: order by {id|reliabilityname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Reliability_count'
            type: array
        "500":
          description: ""
      summary: List reliabilities
      tags:
      - reliabilities
  /reliabilities/{id}:
    get:
      description: get reliability
      parameters:
      - description: Reliability by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Reliability_count'
            type: array
        "500":
          description: ""
      summary: Get reliability
      tags:
      - reliabilities
  /reliabilities_add:
    post:
      consumes:
      - application/json
      description: add reliability
      parameters:
      - description: New reliability
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddReliability'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add reliability
      tags:
      - reliabilities
  /reliabilities_del:
    post:
      consumes:
      - application/json
      description: delete reliabilities
      parameters:
      - description: Delete reliabilities
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete reliabilities
      tags:
      - reliabilities
  /reliabilities_upd:
    post:
      consumes:
      - application/json
      description: update reliability
      parameters:
      - description: Update reliability
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Reliability'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update reliability
      tags:
      - reliabilities
  /requestkinds:
    get:
      description: get requestkind list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: requestkindname search pattern
        in: query
        name: requestkindname
        type: string
      - description: order by {id|requestkindname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.RequestKind_count'
            type: array
        "500":
          description: ""
      summary: List requestkinds
      tags:
      - requestkinds
  /requestkinds/{id}:
    get:
      description: get requestkind
      parameters:
      - description: RequestKind by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.RequestKind_count'
            type: array
        "500":
          description: ""
      summary: Get requestkind
      tags:
      - requestkinds
  /requestkinds_add:
    post:
      consumes:
      - application/json
      description: add requestkind
      parameters:
      - description: New requestkind
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddRequestKind'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add requestkind
      tags:
      - requestkinds
  /requestkinds_del:
    post:
      consumes:
      - application/json
      description: delete requestkinds
      parameters:
      - description: Delete requestkinds
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete requestkinds
      tags:
      - requestkinds
  /requestkinds_upd:
    post:
      consumes:
      - application/json
      description: update requestkind
      parameters:
      - description: Update requestkind
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.RequestKind'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update requestkind
      tags:
      - requestkinds
  /requests:
    get:
      description: get request list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: requestnumber search pattern
        in: query
        name: requestnumber
        type: string
      - description: order by {id|requestnumber}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Request_count'
            type: array
        "500":
          description: ""
      summary: List of requests
      tags:
      - requests
  /requests/{id}:
    get:
      description: get request
      parameters:
      - description: Request by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Request_count'
            type: array
        "500":
          description: ""
      summary: Get request
      tags:
      - requests
  /requests_add:
    post:
      consumes:
      - application/json
      description: add request
      parameters:
      - description: 'New request. Significant params: RequestNumber, RequestDate,
          Contract.Id(n), ServiceType.Id, RequestType.Id, RequestKind.Id, ClaimType.Id(n),
          TermDate, Executive, Accept, Notes(n), Result.Id, Act.Id(n), Object.Id(n)'
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add request
      tags:
      - requests
  /requests_del:
    post:
      consumes:
      - application/json
      description: delete requests
      parameters:
      - description: Delete requests
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete requests
      tags:
      - requests
  /requests_upd:
    post:
      consumes:
      - application/json
      description: update request
      parameters:
      - description: 'Update request. Significant params: Id, RequestNumber, RequestDate,
          Contract.Id(n), ServiceType.Id, RequestType.Id, RequestKind.Id, ClaimType.Id(n),
          TermDate, Executive, Accept, Notes(n), Result.Id, Act.Id(n), Object.Id(n)'
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update request
      tags:
      - requests
  /requesttypes:
    get:
      description: get requesttype list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: requesttypename search pattern
        in: query
        name: requesttypename
        type: string
      - description: request kind id search pattern
        in: query
        name: rkid
        type: string
      - description: order by {id|requesttypename}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.RequestType_count'
            type: array
        "500":
          description: ""
      summary: List requesttypes
      tags:
      - requesttypes
  /requesttypes/{id}:
    get:
      description: get requesttype
      parameters:
      - description: RequestType by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.RequestType_count'
            type: array
        "500":
          description: ""
      summary: Get requesttype
      tags:
      - requesttypes
  /requesttypes_add:
    post:
      consumes:
      - application/json
      description: add requesttype
      parameters:
      - description: New requesttype
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddRequestType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add requesttype
      tags:
      - requesttypes
  /requesttypes_del:
    post:
      consumes:
      - application/json
      description: delete requesttypes
      parameters:
      - description: Delete requesttypes
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete requesttypes
      tags:
      - requesttypes
  /requesttypes_upd:
    post:
      consumes:
      - application/json
      description: update requesttype
      parameters:
      - description: Update requesttype
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.RequestType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update requesttype
      tags:
      - requesttypes
  /results:
    get:
      description: get result list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: resultname search pattern
        in: query
        name: resultname
        type: string
      - description: order by {id|resultname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Result_count'
            type: array
        "500":
          description: ""
      summary: List results
      tags:
      - results
  /results/{id}:
    get:
      description: get result
      parameters:
      - description: Result by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Result_count'
            type: array
        "500":
          description: ""
      summary: Get result
      tags:
      - results
  /results_add:
    post:
      consumes:
      - application/json
      description: add result
      parameters:
      - description: New result
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddResult'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add result
      tags:
      - results
  /results_del:
    post:
      consumes:
      - application/json
      description: delete results
      parameters:
      - description: Delete results
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete results
      tags:
      - results
  /results_upd:
    post:
      consumes:
      - application/json
      description: update result
      parameters:
      - description: Update result
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Result'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update result
      tags:
      - results
  /rp:
    get:
      description: Get rp list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: rpname search pattern
        in: query
        name: rpname
        type: string
      - description: invnumber search pattern
        in: query
        name: invnumber
        type: string
      - description: order by {rpname|invnumber}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Rp_count'
            type: array
        "500":
          description: ""
      summary: List rp
      tags:
      - rp
  /rp/{id}:
    get:
      description: get rp
      parameters:
      - description: Rp by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Rp_count'
            type: array
        "500":
          description: ""
      summary: Get rp
      tags:
      - rp
  /rp_add:
    post:
      consumes:
      - application/json
      description: add rp
      parameters:
      - description: New rp
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddRp'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add rp
      tags:
      - rp
  /rp_del:
    post:
      consumes:
      - application/json
      description: delete rp
      parameters:
      - description: Delete rp
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete rp
      tags:
      - rp
  /rp_upd:
    post:
      consumes:
      - application/json
      description: update rp
      parameters:
      - description: Update rp
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Rp'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update rp
      tags:
      - rp
  /sealcolours:
    get:
      description: get sealcolour list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: sealcolourname search pattern
        in: query
        name: sealcolourname
        type: string
      - description: order by {id|sealcolourname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SealColour_count'
            type: array
        "500":
          description: ""
      summary: List sealcolours
      tags:
      - sealcolours
  /sealcolours/{id}:
    get:
      description: get sealcolour
      parameters:
      - description: SealColour by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SealColour_count'
            type: array
        "500":
          description: ""
      summary: Get sealcolour
      tags:
      - sealcolours
  /sealcolours_add:
    post:
      consumes:
      - application/json
      description: add sealcolour
      parameters:
      - description: New sealcolour
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddSealColour'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add sealcolour
      tags:
      - sealcolours
  /sealcolours_del:
    post:
      consumes:
      - application/json
      description: delete sealcolours
      parameters:
      - description: Delete sealcolours
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete sealcolours
      tags:
      - sealcolours
  /sealcolours_upd:
    post:
      consumes:
      - application/json
      description: update sealcolour
      parameters:
      - description: Update sealcolour
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.SealColour'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update sealcolour
      tags:
      - sealcolours
  /seals:
    get:
      description: get seal list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: packetnumber search pattern
        in: query
        name: packetnumber
        type: string
      - description: order by {id|packetnumber}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Seal_count'
            type: array
        "500":
          description: ""
      summary: List seals
      tags:
      - seals
  /seals/{id}:
    get:
      description: get seal
      parameters:
      - description: Seal by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Seal_count'
            type: array
        "500":
          description: ""
      summary: Get seal
      tags:
      - seals
  /seals_add:
    post:
      consumes:
      - application/json
      description: add seal
      parameters:
      - description: 'New seal. Significant params: PacketNumber, Area.Id, Staff.Id,
          SealType.Id, SealColour.Id, SealStatus.Id, IssueDate, ReportDate'
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddSeal'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add seal
      tags:
      - seals
  /seals_del:
    post:
      consumes:
      - application/json
      description: delete seals
      parameters:
      - description: Delete seals
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete seals
      tags:
      - seals
  /seals_upd:
    post:
      consumes:
      - application/json
      description: update seal
      parameters:
      - description: 'Update seal. Significant params: Id, PacketNumber, Area.Id,
          Staff.Id, SealType.Id, SealColour.Id, SealStatus.Id, IssueDate, ReportDate'
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Seal'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update seal
      tags:
      - seals
  /sealstatuses:
    get:
      description: get sealstatus list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: sealstatusname search pattern
        in: query
        name: sealstatusname
        type: string
      - description: order by {id|sealstatusname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SealStatus_count'
            type: array
        "500":
          description: ""
      summary: List sealstatuses
      tags:
      - sealstatuses
  /sealstatuses/{id}:
    get:
      description: get sealstatus
      parameters:
      - description: SealStatus by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SealStatus_count'
            type: array
        "500":
          description: ""
      summary: Get sealstatus
      tags:
      - sealstatuses
  /sealstatuses_add:
    post:
      consumes:
      - application/json
      description: add sealstatus
      parameters:
      - description: New sealstatus
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddSealStatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add sealstatus
      tags:
      - sealstatuses
  /sealstatuses_del:
    post:
      consumes:
      - application/json
      description: delete sealstatuses
      parameters:
      - description: Delete sealstatuses
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete sealstatuses
      tags:
      - sealstatuses
  /sealstatuses_upd:
    post:
      consumes:
      - application/json
      description: update sealstatus
      parameters:
      - description: Update sealstatus
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.SealStatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update sealstatus
      tags:
      - sealstatuses
  /sealtypes:
    get:
      description: get sealtype list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: sealtypename search pattern
        in: query
        name: sealtypename
        type: string
      - description: order by {id|sealtypename}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SealType_count'
            type: array
        "500":
          description: ""
      summary: List sealtypes
      tags:
      - sealtypes
  /sealtypes/{id}:
    get:
      description: get sealtype
      parameters:
      - description: SealType by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SealType_count'
            type: array
        "500":
          description: ""
      summary: Get sealtype
      tags:
      - sealtypes
  /sealtypes_add:
    post:
      consumes:
      - application/json
      description: add sealtype
      parameters:
      - description: New sealtype
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddSealType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add sealtype
      tags:
      - sealtypes
  /sealtypes_del:
    post:
      consumes:
      - application/json
      description: delete sealtypes
      parameters:
      - description: Delete sealtypes
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete sealtypes
      tags:
      - sealtypes
  /sealtypes_upd:
    post:
      consumes:
      - application/json
      description: update sealtype
      parameters:
      - description: Update sealtype
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.SealType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update sealtype
      tags:
      - sealtypes
  /sectors:
    get:
      description: get sector list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: sectorname search pattern
        in: query
        name: sectorname
        type: string
      - description: order by {id|sectorname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Sector_count'
            type: array
        "500":
          description: ""
      summary: List sectors
      tags:
      - sectors
  /sectors/{id}:
    get:
      description: get sector
      parameters:
      - description: Sector by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Sector_count'
            type: array
        "500":
          description: ""
      summary: Get sector
      tags:
      - sectors
  /sectors_add:
    post:
      consumes:
      - application/json
      description: add sector
      parameters:
      - description: New sector
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddSector'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add sector
      tags:
      - sectors
  /sectors_del:
    post:
      consumes:
      - application/json
      description: delete sectors
      parameters:
      - description: Delete sectors
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete sectors
      tags:
      - sectors
  /sectors_upd:
    post:
      consumes:
      - application/json
      description: update sector
      parameters:
      - description: Update sector
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Sector'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update sector
      tags:
      - sectors
  /servicetypes:
    get:
      description: get servicetype list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: servicetypename search pattern
        in: query
        name: servicetypename
        type: string
      - description: order by {id|servicetypename}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ServiceType_count'
            type: array
        "500":
          description: ""
      summary: List servicetypes
      tags:
      - servicetypes
  /servicetypes/{id}:
    get:
      description: get servicetype
      parameters:
      - description: ServiceType by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ServiceType_count'
            type: array
        "500":
          description: ""
      summary: Get servicetype
      tags:
      - servicetypes
  /servicetypes_add:
    post:
      consumes:
      - application/json
      description: add servicetype
      parameters:
      - description: New servicetype
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddServiceType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add servicetype
      tags:
      - servicetypes
  /servicetypes_del:
    post:
      consumes:
      - application/json
      description: delete servicetypes
      parameters:
      - description: Delete servicetypes
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete servicetypes
      tags:
      - servicetypes
  /servicetypes_upd:
    post:
      consumes:
      - application/json
      description: update servicetype
      parameters:
      - description: Update servicetype
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.ServiceType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update servicetype
      tags:
      - servicetypes
  /shutdowntypes:
    get:
      description: get shutdowntype list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: shutdowntypename search pattern
        in: query
        name: shutdowntypename
        type: string
      - description: order by {id|shutdowntypename}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ShutdownType_count'
            type: array
        "500":
          description: ""
      summary: List shutdowntypes
      tags:
      - shutdowntypes
  /shutdowntypes/{id}:
    get:
      description: get shutdowntype
      parameters:
      - description: ShutdownType by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ShutdownType_count'
            type: array
        "500":
          description: ""
      summary: Get shutdowntype
      tags:
      - shutdowntypes
  /shutdowntypes_add:
    post:
      consumes:
      - application/json
      description: add shutdowntype
      parameters:
      - description: New shutdowntype
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddShutdownType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add shutdowntype
      tags:
      - shutdowntypes
  /shutdowntypes_del:
    post:
      consumes:
      - application/json
      description: delete shutdowntypes
      parameters:
      - description: Delete shutdowntypes
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete shutdowntypes
      tags:
      - shutdowntypes
  /shutdowntypes_upd:
    post:
      consumes:
      - application/json
      description: update shutdowntype
      parameters:
      - description: Update shutdowntype
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.ShutdownType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update shutdowntype
      tags:
      - shutdowntypes
  /staff:
    get:
      description: get staff list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: staffname search pattern
        in: query
        name: staffname
        type: string
      - description: order by {id|staffname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Staff_count'
            type: array
        "500":
          description: ""
      summary: List staff
      tags:
      - staff
  /staff/{id}:
    get:
      description: get staff
      parameters:
      - description: Staff by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Staff_count'
            type: array
        "500":
          description: ""
      summary: Get staff
      tags:
      - staff
  /staff_add:
    post:
      consumes:
      - application/json
      description: add staff
      parameters:
      - description: New staff
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddStaff'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add staff
      tags:
      - staff
  /staff_del:
    post:
      consumes:
      - application/json
      description: delete staff
      parameters:
      - description: Delete staff
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete staff
      tags:
      - staff
  /staff_upd:
    post:
      consumes:
      - application/json
      description: update staff
      parameters:
      - description: Update staff
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Staff'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update staff
      tags:
      - staff
  /streets:
    get:
      description: get street list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: streetname search pattern
        in: query
        name: streetname
        type: string
      - description: cityid search pattern
        in: query
        name: cityid
        type: integer
      - description: order by {id|streetname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Street_count'
            type: array
        "500":
          description: ""
      summary: List streets
      tags:
      - streets
  /streets/{id}:
    get:
      description: get street
      parameters:
      - description: Street by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Street_count'
            type: array
        "500":
          description: ""
      summary: Get street
      tags:
      - streets
  /streets_add:
    post:
      consumes:
      - application/json
      description: add street
      parameters:
      - description: New street
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddStreet'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add street
      tags:
      - streets
  /streets_del:
    post:
      consumes:
      - application/json
      description: delete street
      parameters:
      - description: Delete street
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.StreetClose'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete street
      tags:
      - streets
  /streets_upd:
    post:
      consumes:
      - application/json
      description: update street
      parameters:
      - description: Update street
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Street'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update street
      tags:
      - streets
  /sub_banks:
    get:
      description: Get subject accounts
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: subname search pattern
        in: query
        name: subname
        type: string
      - description: subid search pattern
        in: query
        name: subid
        type: string
      - description: accnumber search pattern
        in: query
        name: accnumber
        type: string
      - description: order by {subname|accnumber}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SubBank_count'
            type: array
        "500":
          description: ""
      summary: List subject accounts
      tags:
      - subject banks
  /sub_banks/{id}:
    get:
      description: get subject account
      parameters:
      - description: Subject account by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SubBank_count'
            type: array
        "500":
          description: ""
      summary: Get subject account
      tags:
      - subject banks
  /sub_banks_add:
    post:
      consumes:
      - application/json
      description: Add subject account
      parameters:
      - description: 'New subject account. Sets the first account of the subject active.
          Significant params: Sub.Id, Bank.Id, AccNumber'
        in: body
        name: ab
        required: true
        schema:
          $ref: '#/definitions/models.AddSubBank'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add subject account
      tags:
      - subject banks
  /sub_banks_del:
    post:
      consumes:
      - application/json
      description: delete subject accounts
      parameters:
      - description: Delete subject accounts
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete subject accounts
      tags:
      - subject banks
  /sub_banks_setactive/{id}:
    post:
      description: set active subject account
      parameters:
      - description: Sets the active account of the subject by ID, sets inactive all
          other accounts of the subject.
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Set active subject account
      tags:
      - subject banks
  /sub_banks_upd:
    post:
      consumes:
      - application/json
      description: Update subject account
      parameters:
      - description: 'Update subject account. Significant params: Id, Sub.Id, Bank.Id,
          AccNumber'
        in: body
        name: ub
        required: true
        schema:
          $ref: '#/definitions/models.SubBank'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update subject account
      tags:
      - subject banks
  /sub_types:
    get:
      description: get subjects types
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: subtypename search pattern
        in: query
        name: subtypename
        type: string
      - description: subtypedescr search pattern
        in: query
        name: subtypedescr
        type: string
      - description: order by {subtypename|subtypedescr}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SubType_count'
            type: array
        "500":
          description: ""
      summary: List subjects types
      tags:
      - sub types
  /sub_types/{id}:
    get:
      description: get subject type
      parameters:
      - description: Subjects type by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SubType_count'
            type: array
        "500":
          description: ""
      summary: Subjects type
      tags:
      - sub types
  /sub_types_add:
    post:
      consumes:
      - application/json
      description: add subjects types
      parameters:
      - description: New subType
        in: body
        name: ast
        required: true
        schema:
          $ref: '#/definitions/models.AddSubType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add subjects types
      tags:
      - sub types
  /sub_types_del:
    post:
      consumes:
      - application/json
      description: delete subjects types
      parameters:
      - description: Delete subtypes
        in: body
        name: dst
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete subjects types
      tags:
      - sub types
  /sub_types_upd:
    post:
      consumes:
      - application/json
      description: update subjects types
      parameters:
      - description: Update subtype
        in: body
        name: ust
        required: true
        schema:
          $ref: '#/definitions/models.SubType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update subjects types
      tags:
      - sub types
  /subjects:
    get:
      description: get subjects
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: subname search pattern
        in: query
        name: subname
        type: string
      - description: subdescr search pattern
        in: query
        name: subdescr
        type: string
      - description: hide closed, default true
        in: query
        name: hideclosed
        type: boolean
      - description: order by {subname|subdescr}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Subject_count'
            type: array
        "500":
          description: ""
      summary: List subjects
      tags:
      - subjects
  /subjects/{id}:
    get:
      description: get subject
      parameters:
      - description: Subject by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Subject_count'
            type: array
        "500":
          description: ""
      summary: Subject
      tags:
      - subjects
  /subjects_add:
    post:
      consumes:
      - application/json
      description: add subject
      parameters:
      - description: 'New Subject. Significant params: SubType.Id, SubPhys, SubDescr,
          SubName, SubBin, SubHeadPos.Id(n), SubHeadName(n), SubAccPos.Id(n), SubAccName(n),
          SubAddr, SubPhone, SubStart, SubAccNumber, Job(n), Email(n), MobPhone(n),
          JobPhone(n), Notes(n)'
        in: body
        name: asb
        required: true
        schema:
          $ref: '#/definitions/models.AddSubject'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add subject
      tags:
      - subjects
  /subjects_del:
    post:
      consumes:
      - application/json
      description: delete subjects
      parameters:
      - description: Close subject
        in: body
        name: dsb
        required: true
        schema:
          $ref: '#/definitions/models.SubjectClose'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Delete subjects
      tags:
      - subjects
  /subjects_hist/{id}:
    get:
      description: get subject history
      parameters:
      - description: Subject history by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "500":
          description: ""
      summary: Subject history
      tags:
      - subjects
  /subjects_upd:
    post:
      consumes:
      - application/json
      description: update subject
      parameters:
      - description: 'Update sybject. Significant params: SubId, SubType.Id, SubPhys,
          SubDescr, SubName, SubBin, SubHeadPos.Id(n), SubHeadName(n), SubAccPos.Id(n),
          SubAccName(n), SubAddr, SubPhone, SubStart, SubAccNumber, Job(n), Email(n),
          MobPhone(n), JobPhone(n), Notes(n)'
        in: body
        name: usb
        required: true
        schema:
          $ref: '#/definitions/models.Subject'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update subject
      tags:
      - subjects
  /subpu:
    get:
      description: get subpu list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: Subpu parid
        in: query
        name: parid
        required: true
        type: integer
      - description: order by {id|punamber}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Pu_count'
            type: array
        "500":
          description: ""
      summary: List subpu
      tags:
      - subpu
  /subpu/{id}:
    get:
      description: get subpu
      parameters:
      - description: SubPu by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SubPu_count'
            type: array
        "500":
          description: ""
      summary: Get subpu
      tags:
      - subpu
  /subpu_add:
    post:
      consumes:
      - application/json
      description: add subpu
      parameters:
      - description: 'New subpu. Significant params: ParId, SubId'
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddSubPu'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add subpu
      tags:
      - subpu
  /subpu_del:
    post:
      consumes:
      - application/json
      description: delete subpu list
      parameters:
      - description: Delete subpu list
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete subpu list
      tags:
      - subpu
  /subpu_prl:
    get:
      description: get subpu list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: Subpu houseid
        in: query
        name: houseid
        required: true
        type: integer
      - description: Subpu id
        in: query
        name: subpuid
        required: true
        type: integer
      - description: order by {id|punamber}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Pu_count'
            type: array
        "500":
          description: ""
      summary: List subpu
      tags:
      - subpu
  /subpu_upd:
    post:
      consumes:
      - application/json
      description: update subpu
      parameters:
      - description: 'Update subpu. Significant params: Id, ParId, SubId'
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.SubPu'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update subpu
      tags:
      - subpu
  /tariffgroups:
    get:
      description: get tariffgroup list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: tariffgroupname search pattern
        in: query
        name: tariffgroupname
        type: string
      - description: order by {id|tariffgroupname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TariffGroup_count'
            type: array
        "500":
          description: ""
      summary: List tariffgroups
      tags:
      - tariffgroups
  /tariffgroups/{id}:
    get:
      description: get tariffgroup
      parameters:
      - description: TariffGroup by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TariffGroup_count'
            type: array
        "500":
          description: ""
      summary: Get tariffgroup
      tags:
      - tariffgroups
  /tariffgroups_add:
    post:
      consumes:
      - application/json
      description: add tariffgroup
      parameters:
      - description: New tariffgroup
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddTariffGroup'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add tariffgroup
      tags:
      - tariffgroups
  /tariffgroups_del:
    post:
      consumes:
      - application/json
      description: delete tariffgroups
      parameters:
      - description: Delete tariffgroups
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete tariffgroups
      tags:
      - tariffgroups
  /tariffgroups_upd:
    post:
      consumes:
      - application/json
      description: update tariffgroup
      parameters:
      - description: Update tariffgroup
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.TariffGroup'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update tariffgroup
      tags:
      - tariffgroups
  /tariffs:
    get:
      description: get tariff list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: tariffname search pattern
        in: query
        name: tariffname
        type: string
      - description: order by {id|tariffname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Tariff_count'
            type: array
        "500":
          description: ""
      summary: List tariffs
      tags:
      - tariffs
  /tariffs/{id}:
    get:
      description: get tariff
      parameters:
      - description: Tariff by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Tariff_count'
            type: array
        "500":
          description: ""
      summary: Get tariff
      tags:
      - tariffs
  /tariffs_add:
    post:
      consumes:
      - application/json
      description: add tariff
      parameters:
      - description: New tariff
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddTariff'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add tariff
      tags:
      - tariffs
  /tariffs_del:
    post:
      consumes:
      - application/json
      description: delete tariffs
      parameters:
      - description: Delete tariffs
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete tariffs
      tags:
      - tariffs
  /tariffs_upd:
    post:
      consumes:
      - application/json
      description: update tariff
      parameters:
      - description: Update tariff
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Tariff'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update tariff
      tags:
      - tariffs
  /tgu:
    get:
      description: get tgu list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: tguname search pattern
        in: query
        name: tguname
        type: string
      - description: tgu type id
        in: query
        name: ttid
        type: string
      - description: order by {id|tguname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Tgu_count'
            type: array
        "500":
          description: ""
      summary: List tgu
      tags:
      - tgu
  /tgu/{id}:
    get:
      description: get tgu
      parameters:
      - description: Tgu by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Tgu_count'
            type: array
        "500":
          description: ""
      summary: Get tgu
      tags:
      - tgu
  /tgu_add:
    post:
      consumes:
      - application/json
      description: add tgu
      parameters:
      - description: New tgu
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddTgu'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add tgu
      tags:
      - tgu
  /tgu_del:
    post:
      consumes:
      - application/json
      description: delete tgu
      parameters:
      - description: Delete tgu
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete tgu
      tags:
      - tgu
  /tgu_upd:
    post:
      consumes:
      - application/json
      description: update tgu
      parameters:
      - description: Update tgu
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Tgu'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update tgu
      tags:
      - tgu
  /tp:
    get:
      description: get tp list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: tpname search pattern
        in: query
        name: tpname
        type: string
      - description: order by {id|tpname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Tp_count'
            type: array
        "500":
          description: ""
      summary: List tp
      tags:
      - tp
  /tp/{id}:
    get:
      description: get tp
      parameters:
      - description: Tp by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Tp_count'
            type: array
        "500":
          description: ""
      summary: Get tp
      tags:
      - tp
  /tp_add:
    post:
      consumes:
      - application/json
      description: add tp
      parameters:
      - description: New tp
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddTp'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add tp
      tags:
      - tp
  /tp_del:
    post:
      consumes:
      - application/json
      description: delete tp
      parameters:
      - description: Delete tp
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete tp
      tags:
      - tp
  /tp_upd:
    post:
      consumes:
      - application/json
      description: update tp
      parameters:
      - description: Update tp
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Tp'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update tp
      tags:
      - tp
  /transcurr:
    get:
      description: get current transformers list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: transcurrname search pattern
        in: query
        name: transcurrname
        type: string
      - description: order by {id|transcurrname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TransCurr_count'
            type: array
        "500":
          description: ""
      summary: List current transformers
      tags:
      - transcurr
  /transcurr/{id}:
    get:
      description: get current transformer
      parameters:
      - description: Current transformer by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TransCurr_count'
            type: array
        "500":
          description: ""
      summary: Get current transformer
      tags:
      - transcurr
  /transcurr_add:
    post:
      consumes:
      - application/json
      description: add current transformer
      parameters:
      - description: 'New current transformer. Significant params: TransCurrName,
          TransType.Id, CheckDate(n), NextCheckDate(n), ProdDate(n), Serial1(n), Serial2(n),
          Serial3(n)'
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddTransCurr'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add current transformer
      tags:
      - transcurr
  /transcurr_del:
    post:
      consumes:
      - application/json
      description: delete current transformers
      parameters:
      - description: Delete current transformers
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete current transformers
      tags:
      - transcurr
  /transcurr_upd:
    post:
      consumes:
      - application/json
      description: update current transformer
      parameters:
      - description: 'Update current transformer. Significant params: Id, TransCurrName,
          TransType.Id, CheckDate(n), NextCheckDate(n), ProdDate(n), Serial1(n), Serial2(n),
          Serial3(n)'
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.TransCurr'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update current transformer
      tags:
      - transcurr
  /transpwr:
    get:
      description: get power transformers list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: transpwrname search pattern
        in: query
        name: transpwrname
        type: string
      - description: order by {id|transpwrname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TransPwr_count'
            type: array
        "500":
          description: ""
      summary: List power transformers
      tags:
      - transpwr
  /transpwr/{id}:
    get:
      description: get power transformer
      parameters:
      - description: Power transformer by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TransPwr_count'
            type: array
        "500":
          description: ""
      summary: Get power transformer
      tags:
      - transpwr
  /transpwr_add:
    post:
      consumes:
      - application/json
      description: add power transformer
      parameters:
      - description: 'New power transformer. Significant params: TransPwrName, TransPwrType.Id'
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddTransPwr'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add power transformer
      tags:
      - transpwr
  /transpwr_del:
    post:
      consumes:
      - application/json
      description: delete power transformers
      parameters:
      - description: Delete power transformers
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete power transformers
      tags:
      - transpwr
  /transpwr_upd:
    post:
      consumes:
      - application/json
      description: update power transformer
      parameters:
      - description: 'Update power transformer. Significant params: Id, TransPwrName,
          TransPwrType.Id'
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.TransPwr'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update power transformer
      tags:
      - transpwr
  /transpwrtypes:
    get:
      description: get transpwrtype list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: transpwrtypename search pattern
        in: query
        name: transpwrtypename
        type: string
      - description: order by {id|transpwrtypename}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TransPwrType_count'
            type: array
        "500":
          description: ""
      summary: List transpwrtypes
      tags:
      - transpwrtypes
  /transpwrtypes/{id}:
    get:
      description: get transpwrtype
      parameters:
      - description: TransPwrType by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TransPwrType_count'
            type: array
        "500":
          description: ""
      summary: Get transpwrtype
      tags:
      - transpwrtypes
  /transpwrtypes_add:
    post:
      consumes:
      - application/json
      description: add transpwrtype
      parameters:
      - description: 'New transpwrtype. Significant params: TransPwrTypeName, ShortCircuitPower,
          IdlingLossPower, NominalPower'
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddTransPwrType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add transpwrtype
      tags:
      - transpwrtypes
  /transpwrtypes_del:
    post:
      consumes:
      - application/json
      description: delete transpwrtypes
      parameters:
      - description: Delete transpwrtypes
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete transpwrtypes
      tags:
      - transpwrtypes
  /transpwrtypes_upd:
    post:
      consumes:
      - application/json
      description: update transpwrtype
      parameters:
      - description: 'Update transpwrtype. Significant params: Id, TransPwrTypeName,
          ShortCircuitPower, IdlingLossPower, NominalPower'
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.TransPwrType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update transpwrtype
      tags:
      - transpwrtypes
  /transtypes:
    get:
      description: get transtype list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: transtypename search pattern
        in: query
        name: transtypename
        type: string
      - description: order by {id|transtypename}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TransType_count'
            type: array
        "500":
          description: ""
      summary: List transtypes
      tags:
      - transtypes
  /transtypes/{id}:
    get:
      description: get transtype
      parameters:
      - description: TransType by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TransType_count'
            type: array
        "500":
          description: ""
      summary: Get transtype
      tags:
      - transtypes
  /transtypes_add:
    post:
      consumes:
      - application/json
      description: add transtype
      parameters:
      - description: 'New transtype. Significant params: TransTypeName, Ratio, Class,
          MaxCurr, NomCurr'
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddTransType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add transtype
      tags:
      - transtypes
  /transtypes_del:
    post:
      consumes:
      - application/json
      description: delete transtypes
      parameters:
      - description: Delete transtypes
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete transtypes
      tags:
      - transtypes
  /transtypes_upd:
    post:
      consumes:
      - application/json
      description: update transtype
      parameters:
      - description: 'Update transtype. Significant params: Id, TransTypeName, Ratio,
          Class, MaxCurr, NomCurr'
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.TransType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update transtype
      tags:
      - transtypes
  /transvolt:
    get:
      description: get voltage transformers list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: transvoltname search pattern
        in: query
        name: transvoltname
        type: string
      - description: order by {id|transvoltname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TransVolt_count'
            type: array
        "500":
          description: ""
      summary: List voltage transformers
      tags:
      - transvolt
  /transvolt/{id}:
    get:
      description: get voltage transformer
      parameters:
      - description: Voltage transformer by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TransVolt_count'
            type: array
        "500":
          description: ""
      summary: Get voltage transformer
      tags:
      - transvolt
  /transvolt_add:
    post:
      consumes:
      - application/json
      description: add voltage transformer
      parameters:
      - description: 'New voltage transformer. Significant params: TransVoltName,
          TransType.Id, CheckDate(n), NextCheckDate(n), ProdDate(n), Serial1(n), Serial2(n),
          Serial3(n)'
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddTransVolt'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add voltage transformer
      tags:
      - transvolt
  /transvolt_del:
    post:
      consumes:
      - application/json
      description: delete voltage transformers
      parameters:
      - description: Delete voltage transformers
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete voltage transformers
      tags:
      - transvolt
  /transvolt_upd:
    post:
      consumes:
      - application/json
      description: update voltage transformer
      parameters:
      - description: 'Update voltage transformer. Significant params: Id, TransVoltName,
          TransType.Id, CheckDate(n), NextCheckDate(n), ProdDate(n), Serial1(n), Serial2(n),
          Serial3(n)'
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.TransVolt'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update voltage transformer
      tags:
      - transvolt
  /users:
    get:
      description: get user list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: username search pattern
        in: query
        name: username
        type: string
      - description: order by {id|username}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User_count'
            type: array
        "500":
          description: ""
      summary: Users list
      tags:
      - users
  /users/{id}:
    get:
      description: get user
      parameters:
      - description: User by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User_count'
            type: array
        "500":
          description: ""
      summary: Get user
      tags:
      - users
  /users_add:
    post:
      consumes:
      - application/json
      description: add user
      parameters:
      - description: 'New user. Significant params: UserName, OrgInfo.Id, Lang.Id,
          ChangePass, Position.Id, UserFullName, Created'
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add user
      tags:
      - users
  /users_del:
    post:
      consumes:
      - application/json
      description: delete users
      parameters:
      - description: Delete users
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete users
      tags:
      - users
  /users_upd:
    post:
      consumes:
      - application/json
      description: update user
      parameters:
      - description: 'Update user. Significant params: Id, UserName, OrgInfo.Id, Lang.Id,
          ChangePass, Position.Id, UserFullName, Created, Closed(n)'
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update user
      tags:
      - users
  /uzo:
    get:
      description: get uzo list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: uzoname search pattern
        in: query
        name: uzoname
        type: string
      - description: order by {id|uzoname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Uzo_count'
            type: array
        "500":
          description: ""
      summary: List uzo
      tags:
      - uzo
  /uzo/{id}:
    get:
      description: get uzo
      parameters:
      - description: Uzo by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Uzo_count'
            type: array
        "500":
          description: ""
      summary: Get uzo
      tags:
      - uzo
  /uzo_add:
    post:
      consumes:
      - application/json
      description: add uzo
      parameters:
      - description: New uzo
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddUzo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add uzo
      tags:
      - uzo
  /uzo_del:
    post:
      consumes:
      - application/json
      description: delete uzo
      parameters:
      - description: Delete uzo
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete uzo
      tags:
      - uzo
  /uzo_upd:
    post:
      consumes:
      - application/json
      description: update uzo
      parameters:
      - description: Update uzo
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Uzo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update uzo
      tags:
      - uzo
  /violations:
    get:
      description: get violations list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: violationname search pattern
        in: query
        name: violationname
        type: string
      - description: order by {id|violationname}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Violation_count'
            type: array
        "500":
          description: ""
      summary: List violations
      tags:
      - violations
  /violations/{id}:
    get:
      description: get violation
      parameters:
      - description: Violation by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Violation_count'
            type: array
        "500":
          description: ""
      summary: Get violation
      tags:
      - violations
  /violations_add:
    post:
      consumes:
      - application/json
      description: add violation
      parameters:
      - description: New violation
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddViolation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add violation
      tags:
      - violations
  /violations_del:
    post:
      consumes:
      - application/json
      description: delete violations
      parameters:
      - description: Delete violations
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete violations
      tags:
      - violations
  /violations_upd:
    post:
      consumes:
      - application/json
      description: update violation
      parameters:
      - description: Update violation
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Violation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update violation
      tags:
      - violations
  /voltages:
    get:
      description: get voltage list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: voltagename search pattern
        in: query
        name: voltagename
        type: string
      - description: order by {id|voltagename}
        in: query
        name: ordering
        type: string
      - description: descending order {true|false}
        in: query
        name: desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Voltage_count'
            type: array
        "500":
          description: ""
      summary: List voltages
      tags:
      - voltages
  /voltages/{id}:
    get:
      description: get voltage
      parameters:
      - description: Voltage by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Voltage_count'
            type: array
        "500":
          description: ""
      summary: Get voltage
      tags:
      - voltages
  /voltages_add:
    post:
      consumes:
      - application/json
      description: add voltage
      parameters:
      - description: New voltage
        in: body
        name: a
        required: true
        schema:
          $ref: '#/definitions/models.AddVoltage'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Add voltage
      tags:
      - voltages
  /voltages_del:
    post:
      consumes:
      - application/json
      description: delete voltages
      parameters:
      - description: Delete voltages
        in: body
        name: d
        required: true
        schema:
          $ref: '#/definitions/models.Json_ids'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_ids'
            type: array
        "500":
          description: ""
      summary: Delete voltages
      tags:
      - voltages
  /voltages_upd:
    post:
      consumes:
      - application/json
      description: update voltage
      parameters:
      - description: Update voltage
        in: body
        name: u
        required: true
        schema:
          $ref: '#/definitions/models.Voltage'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Json_id'
            type: array
        "500":
          description: ""
      summary: Update voltage
      tags:
      - voltages
securityDefinitions:
  ApiKeyAuth:
    description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InVzZXIxIiwicGFzc3dvcmQiOiJ1c2VyMSJ9.-qgJjYhayo7CT1YD1xLB36Xytf1HprRBeLbi5tZcOPE
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
